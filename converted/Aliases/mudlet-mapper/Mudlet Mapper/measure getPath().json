{
    "attribs": {
        "isActive": "yes",
        "isFolder": "no"
    },
    "type": "alias",
    "name": "measure getPath()",
    "script": "mmp = mmp or {}\n\nmmp.getPathPerf = mmp.getPathPerf or createStopWatch()\nstartStopWatch(mmp.getPathPerf)\n\nlocal from, to = tonumber(matches[2]), tonumber(matches[3])\n\ngetPath(from, to)\n\nmmp.echon = mmp.echon or echo\nmmp.echon(\"a new getPath() from \"..from..\" to \"..to..\" took \"..stopStopWatch(mmp.getPathPerf)..\"s. There are \"..#speedWalkPath..\" rooms to visit in it.\")\necho(\" \")\nechoLink(\"[unhighlight]\", [[\n  for room in pairs(mmp.getpathhighlights) do\n    unHighlightRoom(room)\n  end\n]], \"Click me to remove highlighting from getpath\")\n\nmmp.getpathhighlights = mmp.getpathhighlights or {}\n\nfor room in pairs(mmp.getpathhighlights) do\n  unHighlightRoom(room)\nend\n\nmmp.getpathhighlights = {}\n\nlocal r,g,b = unpack(color_table.yellow)\nlocal br,bg,bb = unpack(color_table.yellow)\n-- add the first room to the speedWalkPath, as we'd like it highlighted as well\ntable.insert(speedWalkPath, 1, from)\nfor i = 1, #speedWalkPath do\n  local room = speedWalkPath[i]\n  highlightRoom(room, r,g,b,br,bg,bb, 1, 255, 255)\n  mmp.getpathhighlights[room] = true\nend\n\ncenterview(from)",
    "command": null,
    "packageName": null,
    "regex": "^getpath (?:from )?(\\d+) (?:to )?(\\d+)$"
}