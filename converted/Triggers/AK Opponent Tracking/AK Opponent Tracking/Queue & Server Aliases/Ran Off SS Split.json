{
    "attribs": {
        "isActive": "yes",
        "isFolder": "no",
        "isTempTrigger": "no",
        "isMultiline": "no",
        "isPerlSlashGOption": "no",
        "isColorizerTrigger": "yes",
        "isFilterTrigger": "no",
        "isSoundTrigger": "no",
        "isColorTrigger": "no",
        "isColorTriggerFg": "no",
        "isColorTriggerBg": "no"
    },
    "type": "trigger",
    "name": "Ran Off SS Split",
    "script": "if matches[2] == \"OATTACK\" then\n\tak.queue.eqbal = {}\n\tak.queue.sent = {}\n\treturn\nend\n\nlocal cursedraw = matches[2]:lower()\ncursedraw = string.gsub(cursedraw, \"|\", \" \")\n\n\ncursedraw = cursedraw:split(\" \")\nfor k,v in pairs(cursedraw) do\n   if string.findPattern(cursedraw[k],\"overcharge\") then\n      affstrack.overcharge = true\n   elseif string.findPattern(cursedraw[k],\"relapse\") then\n      invoked = cursedraw[k+1]\n   elseif string.findPattern(cursedraw[k],\"invoke\") then\n      invoked = cursedraw[k+2]\n   elseif string.findPattern(cursedraw[k],\"impurity\") then\n      nextcurse = cursedraw[k+1]\n   elseif string.findPattern(cursedraw[k],\"instill\") then\n      nextinstill = cursedraw[k+3]\n   elseif string.findPattern(cursedraw[k],\"moon\") then\n      nextmoon = cursedraw[k+3]\n   elseif string.findPattern(cursedraw[k],\"deadeyes\") then\n      nextcurse = cursedraw[k+2]\n      nextcurse2 = cursedraw[k+3]\n   elseif string.findPattern(cursedraw[k],\"imbibe\") then\n      imbibedraw = cursedraw[k+1]\n   elseif string.findPattern(cursedraw[k],\"truewrack\") then\n      alchemisttruewrack = cursedraw[k+2]\n      alchemisttruewracktwo = cursedraw[k+3]\n\t elseif string.findPattern(cursedraw[k],\"wrack\") then\n      alchemistwrack = cursedraw[k+2]\n   end\nend\nif table.contains(cursedraw,\"combo\") and ak.MonkType() ~= \"Tekura\" then\n\tak.shikudo.AliasSplit(cursedraw)\nend\n\n\n\n\n\n",
    "triggerType": "0",
    "conditonLineDelta": "0",
    "mStayOpen": "0",
    "mCommand": null,
    "packageName": null,
    "mFgColor": "#ff0000",
    "mBgColor": "#ffff00",
    "mSoundFile": null,
    "colorTriggerFgColor": "#000000",
    "colorTriggerBgColor": "#000000",
    "regexCodeList": "\n\t\t\t\t\t\t\t",
    "regexCodePropertyList": "\n\t\t\t\t\t\t\t",
    "matches": [
        [
            "Running queued [\\w'\\-]+ command\\: (.*)$",
            "1"
        ]
    ]
}