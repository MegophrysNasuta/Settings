{
    "attribs": {
        "isActive": "yes",
        "isFolder": "no",
        "isTempTrigger": "no",
        "isMultiline": "no",
        "isPerlSlashGOption": "no",
        "isColorizerTrigger": "no",
        "isFilterTrigger": "no",
        "isSoundTrigger": "no",
        "isColorTrigger": "no",
        "isColorTriggerFg": "no",
        "isColorTriggerBg": "no"
    },
    "type": "trigger",
    "name": "Applied",
    "script": "if IsTargetted(matches[2]) then\n\tif gmcp and gmcp.Char and gmcp.Char.Vitals and gmcp.Char.Vitals.charstats[3] and gmcp.Char.Vitals.charstats[3] == \"Spec: Two Handed\" then\t\t\t\n\t\tsend(\"battlefury perceive \"..target)\n\tend\n\t--if ak.twoh[ak.twoh.salveconversion[matches[3]]] > 5 then\n\t\t--ak.twoh[ak.twoh.salveconversion[matches[3]]] = ak.twoh[ak.twoh.salveconversion[matches[3]]] - 2\n\t\t--cecho(\"<yellow>\"..ak.twoh.salveconversion[matches[3]]..\":<cyan> \"..ak.twoh[ak.twoh.salveconversion[matches[3]]])\n\t--else\n\t\tak.twoh[ak.twoh.salveconversion[matches[3]]] = ak.twoh[ak.twoh.salveconversion[matches[3]]] - 1\n\t\tif ak.twoh[ak.twoh.salveconversion[matches[3]]] < 0 then ak.twoh[ak.twoh.salveconversion[matches[3]]] = 0 end\n\t\tcecho(\"<yellow>\"..ak.twoh.salveconversion[matches[3]]..\":<cyan> \"..ak.twoh[ak.twoh.salveconversion[matches[3]]])\n\t--end\n\tif matches[3] == \"legs\" then\n\t\tak.tendonHit()\n\telseif matches[3] == \"arms\" then\n\t\tak.wristHit()\n\telseif matches[3] == \"head\" then\n\t\tak.skullHit()\n\telseif matches[3] == \"torso\" then\n\t\tak.ribHit()\n\tend\n\tak.scoreup(matches[2])\nend\n--legs,arms,head,torso",
    "triggerType": "0",
    "conditonLineDelta": "0",
    "mStayOpen": "0",
    "mCommand": null,
    "packageName": null,
    "mFgColor": "#ff0000",
    "mBgColor": "#ffff00",
    "mSoundFile": null,
    "colorTriggerFgColor": "#000000",
    "colorTriggerBgColor": "#000000",
    "regexCodeList": "\n\t\t\t\t\t\t\t",
    "regexCodePropertyList": "\n\t\t\t\t\t\t\t",
    "matches": [
        [
            "^([\\w'\\-]+) takes some elixir from .* and rubs it into [\\w'\\-]+ ([\\w'\\-]+)\\.$",
            "1"
        ]
    ]
}