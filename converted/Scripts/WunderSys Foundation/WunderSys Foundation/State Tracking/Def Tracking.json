{
    "attribs": {
        "isActive": "yes",
        "isFolder": "no"
    },
    "type": "script",
    "name": "Def Tracking",
    "packageName": null,
    "script": "wsysf.def_tracking = wsysf.def_tracking or { ids = {} }\n\nwsysf.defs = wsysf.defs or {}\n\n-- Translate \"parrying (head)\" to parrying,head\nlocal function get_defs_value( name )\n\n\tdef,value = name:match(\"(%w+) %((.+)%)\")\n\tif def then\n\t\treturn def,value\n\tend\n\t\n\treturn name,true\nend\n\nfunction wsysf_test()\n\tdef,value = get_defs_value( \"parrying (right leg)\" )\n\t\n\techo(\"\\ndef=\"..def..\"\\nvalue=\"..tostring(value))\n\t\n\tdef,value = get_defs_value( \"tekurastance\" )\n\t\n\techo(\"\\ndef=\"..def..\"\\nvalue=\"..tostring(value))\nend\n\n-- Largely taken from MMP Defense tracking\nfunction wsysf.def_tracking.add()\n  local def,value = get_defs_value( gmcp.Char.Defences.Add.name )\n\t\n\twsysf.core.debug.display( 10, gmcp.Char.Defences.Add, \"Def Added\" )\n\t\n  if wsysf.defs[def] ~= value then\n    wsysf.defs[def] = value\n\t\twsysf.core.debug.print( 5, \"Def: \"..def..\"=\"..tostring(value) )\n\t\t\n    raiseEvent(\"wsysf got def\", def)\n  end\nend\n\t\nfunction wsysf.def_tracking.remove()\n\twsysf.core.debug.display( 10, gmcp.Char.Defences.Remove, \"Defs Removed\" )\n\n  for _, def in ipairs(gmcp.Char.Defences.Remove) do\n    wsysf.defs[def] = nil\n    raiseEvent(\"wsysf lost def\", def)\n  end\nend\n\t\nfunction wsysf.def_tracking.list()\n  local newDefs = {}\n  local addedDefs, lostDefs = {}, {}\n\t\n\twsysf.core.debug.display( 10, gmcp.Char.Defences.List, \"Def List\" )\n\t\n  for _, v in ipairs(gmcp.Char.Defences.List) do\n\t\tlocal def,value = get_defs_value( v.name )\n    newDefs[def] = value\n    if wsysf.defs[def] ~= value then\n      addedDefs[#addedDefs + 1] = def\n    end\n  end\n  for def in pairs(wsysf.defs) do\n    if not newDefs[def] then\n      lostDefs[#lostDefs + 1] = def\n    end\n  end\n  wsysf.defs = newDefs\n  for _, def in pairs(lostDefs) do\n    raiseEvent(\"wsysf lost def\", def)\n  end\n  for _, def in ipairs(addedDefs) do\n    raiseEvent(\"wsysf got def\", def)\n  end\nend\n\t\nfor _,id in pairs(wsysf.def_tracking.ids) do\n\tkillAnonymousEventHandler( id )\nend\n\n-- EVENT HANDLERS\nwsysf.def_tracking.ids.add =\n\tregisterAnonymousEventHandler(\"gmcp.Char.Defences.Add\", \"wsysf.def_tracking.add\")\nwsysf.def_tracking.ids.remove =\n\tregisterAnonymousEventHandler(\"gmcp.Char.Defences.Remove\", \"wsysf.def_tracking.remove\")\nwsysf.def_tracking.ids.list =\n\tregisterAnonymousEventHandler(\"gmcp.Char.Defences.List\", \"wsysf.def_tracking.list\")\n",
    "eventHandlerList": null
}