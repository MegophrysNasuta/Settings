{
    "attribs": {
        "isActive": "yes",
        "isFolder": "no"
    },
    "type": "script",
    "name": "Check for Updates",
    "packageName": null,
    "script": "wsys.myVersion = \"1.3\"\nwsys.currentVersion = wsys.currentVersion or wsys.myVersion\nwsys.updateAvailable = wsys.updateAvailable or false\nwsys.lastVersionCheck = wsys.lastVersionCheck or 0\nwsys.downloadsURL = \"https://github.com/tynil/WunderSys/releases\"\n\nlocal branch = \"master\"\n\nlocal register_update_listeners = function( should_register )\n\tif wsys.events.dl_update_success then killAnonymousEventHandler( wsys.events.dl_update_success ) end\n\tif wsys.events.dl_update_fail then killAnonymousEventHandler( wsys.events.dl_update_fail ) end\n\t\n\tif should_register then\n\t\twsys.events.dl_update_success = registerAnonymousEventHandler(\"sysDownloadDone\", \"wsys.downloadedVersionFile\")\n\t\twsys.events.dl_update_fail = registerAnonymousEventHandler(\"sysDownloadError\", \"wsys.downloadedFileError\")\n\tend\nend\n\n-- download latest version number file\nfunction wsys.checkForUpdates( force )\n  -- Don't check for updates too often\n  if force or ( os.time() - wsys.lastVersionCheck ) > ( 5 * 60 ) then\n    wsys.lastVersionCheck = os.time()\n    if string.char(getMudletHomeDir():byte()) == \"/\" then \n    \t_sep = \"/\" \n    else \n    \t_sep = \"\\\\\" \n    end -- if\n    local current_version = getMudletHomeDir().._sep..\"WunderSysVersion\"\n    \n    register_update_listeners( true )\n    downloadFile(current_version, \"https://raw.githubusercontent.com/tynil/WunderSys/\"..branch..\"/WunderSysVersion\")\n  end\nend\n\n\nif wsys.events.sys_load_update then killAnonymousEventHandler( wsys.events.sys_load_update ) end\nwsys.events.sys_load_update = registerAnonymousEventHandler(\"sysLoadEvent\", \"wsys.checkForUpdates\")\n\nfunction wsys.downloadedVersionFile(_, filename)\n  -- is the file that downloaded ours?\n  if not filename:match(\"WunderSysVersion\", 1, true) then return end\n  \n  register_update_listeners( false )\n  \n  -- parse downloaded file for current version\n  local ver = io.open(filename):read(\"*all\")\n  wsys.currentVersion = string.trim(ver)\n  \n  if wsys.currentVersion == wsys.myVersion then\n    wsys.report(\"Running the latest WunderSys version: \"..wsys.myVersion)\n    wsys.updateAvailable = false\n  else\n    wsys.report(\"\")\n    cechoLink(\"<white>Update available (<green>\"..wsys.currentVersion..\"<white>). Click to download.\", \"wsys.downloadNow()\", wsys.downloadsURL, true )\n    wsys.updateAvailable = true\n    wsys.updatePopup()\n  end\nend\n\n\nfunction wsys.downloadedFileError(_, reason)\n\twsys.lastVersionCheck = 0\n\tregister_update_listeners( false )\n\tdisplay(reason)\n\twsys.report(\"Could not check for updates. Please check \")\n\tcechoLink( \"<white>\"..wsys.downloadsURL, [[wsys.downloadNow()]], wsys.downloadsURL, true )\nend\n\nfunction wsys.updatePopup()\nwundersysDownloadContainer = Geyser.Container:new({\n  name = \"wundersysDownloadContainer\",\n  x = \"10%\", y = 0,\n  width = 200, height = 75,\n  })\n\nwundersysDownloadBackground = Geyser.Label:new({\n  name = \"wundersysDownloadBackground\",\n  x = 0, y = 0,\n  height = \"100%\", width = \"100%\",\n  fgColor = \"white\",\n  color = \"dim_gray\",\n  message = [[<center>WunderSys Update Available!</center>]]\n  },wundersysDownloadContainer)\n\nwundersysDownloadBackground:setStyleSheet([[\n  qproperty-alignment: 'AlignTop';\n  background-color: rgba(105,105,105,90%);\n]])\n\nwundersysDownloadNowButton = Geyser.Label:new({\n  name = \"wundersysDownloadNowButton\",\n  x = 10, y = 20,\n  height = 20, width = \"90%\",\n  fgColor = \"black\",\n  color = \"LawnGreen\",\n  message = [[<center>Download Now!</center>]]\n  }, wundersysDownloadContainer)\n\nwundersysDownloadNowButton:setClickCallback(\"wsys.downloadNow\")\n\nwundersysDownloadLaterButton = Geyser.Label:new({\n  name = \"wundersysDownloadLaterButton\",\n  x = 10, y = 45,\n  height = 20, width = \"90%\",\n  fgColor = \"white\",\n  color = \"red\",\n  message = [[<center>Later!</center>]]\n  }, wundersysDownloadContainer)\n\nwundersysDownloadLaterButton:setClickCallback(\"wsys.downloadLater\")\n\nend\n\nfunction wsys.downloadNow()\n  openUrl(wsys.downloadsURL)\n  wundersysDownloadContainer:hide()\nend\n\nfunction wsys.downloadLater()\n  wundersysDownloadContainer:hide()\nend",
    "eventHandlerList": null
}