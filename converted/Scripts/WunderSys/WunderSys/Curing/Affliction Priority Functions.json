{
    "attribs": {
        "isActive": "yes",
        "isFolder": "no"
    },
    "type": "script",
    "name": "Affliction Priority Functions",
    "packageName": null,
    "script": "function wsys.resetAffPrios()\n  if wsys.settings.curingsets == \"true\" then\n    wsys.cloneDefaultCuringSet()\n  else\n    for k,v in pairs(wsys.settings.affprio[wsys.profile][wsys.myClass()]) do\n      -- reset affs that aren't at their setting position\n      if wsys.affPosition(k) ~= wsys.defaultAffPosition(k) then\n      send(\"curing priority \" .. k .. \" \" .. tostring(v), false)\n      end\n    end\n  end\n  raiseEvent(\"reset aff prios\")\nend\n\nfunction wsys.resetAllAffPrios()\n  if wsys.settings.curingsets == \"true\" then\n    wsys.cloneDefaultCuringSet()\n  else\n    for k,v in pairs(wsys.settings.affprio[wsys.profile][wsys.myClass()]) do\n      send(\"curing priority \" .. k .. \" \" .. tostring(v), false)\n    end\n  end\n  raiseEvent(\"reset aff prios\")\nend\n\nwsys.afflictionPrioritiesCurrent = wsys.afflictionPrioritiesCurrent or {}\n\n-- If higher_only == true, then only allow shifting to higher priorities (e.g. 5->2 but not 2->5)\nfunction wsys.switchPrios( aff, pos, higher_only )\n  if not (wsys.afflictionPrioritiesCurrent[aff] == pos) then\n    if not higher_only or not wsys.afflictionPrioritiesCurrent[aff] or pos < wsys.afflictionPrioritiesCurrent[aff] then\n    \tsend(\"curing priority \" .. aff .. \" \" .. tostring(pos), false)\n    end\n  end\nend\n\nfunction wsys.affPrioChanged( aff, pos )\n\twsys.afflictionPrioritiesCurrent[aff] = pos\nend\n\nfunction wsys.affPrioRestore( aff )\n\tif not wsys.afflictionPrioritiesCurrent[aff] or wsys.afflictionPrioritiesCurrent[aff] ~= wsys.defaultAffPosition(aff) then\n\t\tsend(\"curing priority \" .. aff .. \" \" .. tostring(wsys.defaultAffPosition(aff)), false)\n\tend\nend\n\nfunction wsys.affPosition(affliction)\n  local affSpot = 25\n  if table.contains(wsys.afflictionPrioritiesCurrent, affliction) then\n    affSpot = wsys.afflictionPrioritiesCurrent[affliction]\n  else\n    affSpot = wsys.defaultAffPosition(affliction)\n  end\n  return affSpot\nend\n\nfunction wsys.defaultAffPosition(affliction)\n  return wsys.settings.affprio[wsys.profile][wsys.myClass()][affliction]\nend\n\n\nfunction wsys.targettedCure(c)\n  return table.contains(wsys.tb.targettedCureTable, c)\nend\n\n\n\nfunction wsys.affprioset(aff, num, profile, class)\n  local p = wsys.profile\n  local cl = wsys.myClass()\n  if profile then p = profile end\n  if class then cl = class end\n  if table.contains(wsys.tb.affc, aff) then\n    if tonumber(num) >= 1 and tonumber(num) <= 26 then\n      wsys.settings[\"affprio\"][p][cl][aff] = tonumber(num)\n      wsys.report(\"Set \" .. aff .. \" to \" .. tostring(num) .. \" priority for \" .. p .. \" (\"..cl..\")\")\n      wsys.saveSettings()\n      wsys.postchangeaffpriodisplay(aff)\n    else\n      wsys.report(\"Cannot set a number lower than 1 or higher than 26!\")\n    end\n  else\n    --invalid fucking aff right here son\n    wsys.report(aff .. \" is not a valid affliction!\")\n  end\nend\n",
    "eventHandlerList": null
}