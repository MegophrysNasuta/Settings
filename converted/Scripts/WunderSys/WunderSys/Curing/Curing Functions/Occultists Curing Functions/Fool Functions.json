{
    "attribs": {
        "isActive": "yes",
        "isFolder": "no"
    },
    "type": "script",
    "name": "Fool Functions",
    "packageName": null,
    "script": "function wsys.fool()\n enableTrigger(\"Fool\")\n if wsys.timer.foolwait then\n   killTimer(tostring(wsys.timer.foolwait))\n end\n wsys.timer.foolwait = tempTimer(wsys.waittime, [[wsys.timer.foolwait = nil;disableTrigger(\"Fool\");wsys.lockqueue()]])\n wsys.salviaSend(\"outd fool\", \"charge fool\", \"fling fool at me\")\nend -- func\n\nlocal foolprompt = false\n\nfunction wsys.fooled()\n if wsys.timer.foolwait then\n--  foolsub()\n  wsys.lostBal(\"fool\", 62)\n  wsys.cure = \"fool\"\n  if foolprompt then killTrigger(tostring(foolprompt)) end\n  if not wsys.aff.blackout then\n   if wsys.timer.foolwait then\n    killTimer(tostring(wsys.timer.foolwait))\n   end\n   wsys.timer.foolwait = nil\n   foolprompt = tempLineTrigger(1,1, [[if isPrompt() then wsys.emptyfool() end]])\n  end -- if\n end -- if\nend -- func\n\n\nfunction wsys.emptyfool()\n for k,v in pairs(wsys.tb.cures.fool) do\n  if wsysf.affs[v] then\n   wsysf.core.debug.print(2, \"Empty fool should clear \".. v..\"?\")\n end\n  disableTrigger(string.title(v) .. \" -\")\n end -- for\n wsys.pairscheck(\"dheal\")\n wsys.cure = nil\nend -- func\n\n\nfunction wsys.foolbal(event, bal)\n if event == \"got bal\" and bal == \"fool\" then\n   disableTrigger(\"Fool\")\n   wsys.lockqueue()\n end\nend -- func\n\nregisterAnonymousEventHandler(\"got bal\", \"wsys.foolbal\")",
    "eventHandlerList": null
}