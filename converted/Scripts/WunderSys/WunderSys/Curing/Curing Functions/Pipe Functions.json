{
    "attribs": {
        "isActive": "yes",
        "isFolder": "no"
    },
    "type": "script",
    "name": "Pipe Functions",
    "packageName": null,
    "script": "wsys.pipes = {\n elmpuffs = 4,\n elmtwopuffs = 4,\n valerianpuffs = 4,\n valeriantwopuffs = 4,\n skullcappuffs = 4,\n skullcaptwopuffs = 4,\n smoking = false,\n nonartiepipes = false,\n unlitpipes = false,\n}\n\n\n\n\nlocal pipeprompt = false\n\nfunction wsys.smoked(herb)\n  wsys.lostBal(\"smoke\", 2)\n  if herb == \"empty\" then\n   wsys.emptySmoke(wsys.pipes.smoking)\n  else\n   if wsys.settings.usetransmutation then\n     wsys.pipes[wsys.tb.opps[herb] .. \"puffs\"] = wsys.pipes[wsys.tb.opps[herb] .. \"puffs\"] - 1\n   else\n     wsys.pipes[herb..\"puffs\"] = wsys.pipes[herb..\"puffs\"] - 1\n   end\n   wsys.pipes.smoking = false\n  end -- if\n  wsys.refillqueue()\n  if pipeprompt then killTrigger(tostring(pipeprompt)) end\n  if not wsys.aff.blackout then\n   pipeprompt = tempLineTrigger(1,1, [[if isPrompt() then wsys.emptypipe(wsys.cure) end]])\n  end -- if\nend -- func\n\nfunction wsys.emptySmoke(herb)\n\nend --func\n\nfunction wsys.smokebal()\n  if wsys.timer.smokebal and not wsys.lifevision then\n    wsys.gotBal(\"smoke\")\n  end\nend\n\n\nfunction wsys.plist(pipe, herb, num)\n if wsys.settings.elmpipe == pipe then\n  if string.match(herb, \"empty\") then\n   wsys.pipes.elmpuffs = 0\n  else\n   wsys.pipes.elmpuffs = tonumber(num)\n  end -- if\n elseif wsys.settings.elmtwopipe == pipe then\n  if string.match(herb, \"empty\") then\n   wsys.pipes.elmtwopuffs = 0\n  else\n   wsys.pipes.elmtwopuffs = tonumber(num)\n  end -- if\n elseif wsys.settings.valerianpipe == pipe then\n  if string.match(herb, \"empty\") then\n   wsys.pipes.valerianpuffs = 0\n  else\n   wsys.pipes.valerianpuffs = tonumber(num)\n  end -- if\nelseif wsys.settings.valeriantwopipe == pipe then\n  if string.match(herb, \"empty\") then\n    wsys.pipes.valeriantwopuffs = 0\n  else\n    wsys.pipes.valeriantwopuffs = tonumber(num)\n  end\n elseif wsys.settings.skullcappipe == pipe then\n  if string.match(herb, \"empty\") then\n   wsys.pipes.skullcappuffs = 0\n  else\n   wsys.pipes.skullcappuffs = tonumber(num)\n  end -- if\n elseif wsys.settings.skullcaptwopipe == pipe then\n  if string.match(herb, \"empty\") then\n    wsys.pipes.skullcaptwopuffs = 0\n  else\n    wsys.pipes.skullcaptwopuffs = tonumber(num)\n  end\n end -- if\n if wsys.pipes.unlitpipes and not wsys.timer.lightpipewait then\n  wsys.timer.lightpipewait = tempTimer(0.5, [[wsys.timer.lightpipewait = nil]])\n  wsys.dofreeadd(\"light pipes\")\n end\n wsys.refillqueue()\nend -- func\n\n\nfunction wsys.refill(pipe)\n  -- check to make sure pipe exists in settings\n  --[=[if pipe then\n    enableTrigger(\"Pipe Refilling\")\n    if wsys.timer.refillwait then\n      killTimer(tostring(wsys.timer.refillwait))\n    end\n      wsys.timer.refillwait = tempTimer(4, [[wsys.timer.refillwait = nil]])\n    if wsys.timer.refillfailsafe then\n      killTimer(tostring(wsys.timer.refillfailsafe))\n    end\n    wsys.timer.refillfailsafe = tempTimer(4, [[wsys.timer.refillfailsafe = nil;wsys.refillqueue()]])\n\n    -- herb or mineral\n    local pherb = wsys.pipecurative(pipe)\n    -- set up refill string\n    local rfstring = \"empty \" .. pipe\n    -- is the herb outrifted?\n    if wsys.herbsout[pherb] == 0 then\n      rfstring = \"outr \" .. pherb .. \"/\" .. rfstring\n    end\n    -- complete the refill string\n    rfstring = rfstring .. \"/put \" .. pherb .. \" in \" .. pipe\n    -- add to dofree\n    wsys.dofreeadd(rfstring)\n    \n    -- light pipe if needed\n    if wsys.pipes.nonartiepipes and not wsys.timer.lightpipewait then\n      wsys.timer.lightpipewait = tempTimer(0.5, [[wsys.timer.lightpipewait = nil]])\n      wsys.dofreeadd(\"light pipes\")\n    end\n  end]=]\nend\n\n\nfunction wsys.refilled(herb)\n  disableTrigger(\"Pipe Refilling\")\n\n  if herb == \"cinnabar\" or herb == \"elm\" then\n    if wsys.pipes.elmpuffs <= 3 then\n      wsys.pipes.elmpuffs = 10\n    elseif wsys.pipes.elmtwopuffs <= 3 then\n      wsys.pipes.elmtwopuffs = 10\n    end\n  elseif herb == \"malachite\" or herb == \"skullcap\" then\n    if wsys.pipes.skullcappuffs <= 2 then\n      wsys.pipes.skullcappuffs = 10\n    elseif wsys.pipes.skullcaptwopuffs <= 2 then\n      wsys.pipes.skullcaptwopuffs = 10\n    end\n  elseif herb == \"realgar\" or herb == \"valerian\" then\n    if wsys.pipes.valerianpuffs <= 3 then\n      wsys.pipes.valerianpuffs = 10\n    elseif wsys.pipes.valeriantwopuffs <= 3 then\n      wsys.pipes.valeriantwopuffs = 10\n    end\n  end -- if\n\n  killTimer(tostring(wsys.timer.refillwait))\n  wsys.timer.refillwait = nil\n  killTimer(tostring(wsys.timer.refillfailsafe))\n  wsys.timer.refillfailsafe = nil\n  wsys.refillqueue()\nend -- func\n\n\nfunction wsys.refilledempty(herb)\n  if wsys.timer.refillwait then\n    disableTrigger(\"Pipe Refilling\")\n    if wsys.timer.refillwait then\n      killTimer(tostring(wsys.timer.refillwait))\n    end\n    wsys.timer.refillwait = nil\n    wsys.herbsout[herb] = 0\n    wsys.osend(\"outr \" .. herb)\n    wsys.refillqueue()\n  end -- if\nend -- func\n  \n\n\nfunction wsys.refillqueue()\n  if wsys.cancure() and not wsys.timer.refillwait and not wsys.tanglecheck() and not wsys.damagedarms() and not wsys.aff.paralysis then\n    if not wsys.def.selfishness then\n      if wsys.pipes.elmpuffs <= 3 then\n        wsys.refill(wsys.settings.elmpipe)\n      elseif wsys.pipes.valerianpuffs <= 3 then\n        wsys.refill(wsys.settings.valerianpipe)\n      elseif wsys.pipes.skullcappuffs <= 2 then\n        wsys.refill(wsys.settings.skullcappipe)\n      elseif wsys.pipes.elmtwopuffs <= 3 then\n        wsys.refill(wsys.settings.elmtwopipe)\n      elseif wsys.pipes.valeriantwopuffs <= 3 then\n        wsys.refill(wsys.settings.valeriantwopipe)\n      elseif wsys.pipes.skullcaptwopuffs <= 2 then\n        wsys.refill(wsys.settings.skullcaptwopipe)\n      end -- if\n    elseif wsys.def.selfishness then\n      if wsys.pipes.elmpuffs == 0 then\n        wsys.refill(wsys.settings.elmpipe)\n      elseif wsys.pipes.valerianpuffs == 0 then\n        wsys.refill(wsys.settings.valerianpipe)\n      elseif wsys.pipes.skullcappuffs == 0 then\n        wsys.refill(wsys.settings.skullcappipe)\n      elseif wsys.pipes.elmtwopuffs == 0 then\n        wsys.refill(wsys.settings.elmtwopipe)\n      elseif wsys.pipes.valeriantwopuffs == 0 then\n        wsys.refill(wsys.settings.valeriantwopipe)\n      elseif wsys.pipes.skullcaptwopuffs == 0 then\n        wsys.refill(wsys.settings.skullcaptwopipe)\n      end -- if\n    end\n  end -- if\nend -- func\n\nfunction wsys.pipelist()\n  send(\"pipelist\")\nend --func\n\nfunction wsys.emptyValerianPipes()\n  if wsys.pipes.valerianpuffs == 0 and wsys.pipes.valeriantwopuffs == 0 then\n    return true\n  else\n    return false\n  end\nend\n\nfunction wsys.emptypipe(herb)\n if herb ~= \"skullcap\" and herb ~= \"malachite\" then\n  for k,v in pairs(wsys.tb.cures[herb]) do\n    wsys.predicted[v] = nil\n\t\n    if wsysf.affs[v] then\n      wsysf.core.debug.print(2, \"Empty smoke should clear \".. v ..\"?\")\n    end\n    disableTrigger(string.title(v) .. \" -\")\n  end -- for\n end --if\n wsys.cure = nil\nend -- if\n\n-- return the herb for the pipe (string)\nfunction wsys.pipecurative(pipe)\n  local ans = \"\"\n  if pipe == wsys.settings.elmpipe or pipe == wsys.settings.elmtwopipe then\n    ans = \"elm\"\n  elseif pipe == wsys.settings.valerianpipe or pipe == wsys.settings.valeriantwopipe then\n    ans = \"valerian\"\n  elseif pipe == wsys.settings.skullcappipe or pipe == wsys.settings.skullcaptwopipe then\n    ans = \"skullcap\"\n  end\n\n  if wsys.settings.usetransmutation then\n    ans = wsys.tb.opps[ans]\n  end\n\n  return ans\nend",
    "eventHandlerList": null
}