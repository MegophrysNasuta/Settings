{
    "attribs": {
        "isActive": "yes",
        "isFolder": "no"
    },
    "type": "script",
    "name": "my limb hit",
    "packageName": null,
    "script": "-- self limb damage table\nwsys = wsys or {}\nwsys.tb = wsys.tb or {}\nwsys.tb.selflimbdamage = wsys.tb.selflimbdamage or {\n\t[\"head\"] = {damage = 0,},\n\t[\"torso\"] = {damage = 0,},\n\t[\"left arm\"] = {damage = 0,},\n\t[\"right arm\"] = {damage = 0,},\n\t[\"left leg\"] = {damage = 0,},\n\t[\"right leg\"] = {damage = 0,},\n}\n\nlocal off_limbs = {\n\thead = \"torso\",\n\ttorso = \"head\",\n\t[\"left arm\"] = \"right arm\",\n\t[\"right arm\"] = \"left arm\",\n\t[\"left leg\"] = \"right leg\",\n\t[\"right leg\"] = \"left leg\",\n}\n\nlocal timers = timers or {}\n\nwsys.lastlimbhit = wsys.lastlimbhit or \"left leg\"\n\n-- BM: Main slash 1.5, off slash 1, compassslash 1.5, drawslash = ? These are rough guesses.\n-- Psion: breaks in 4\n-- Dragon: breaks in 4\n\t\nlocal attacks = {\n  [\"snb rend\"] = 1.75,\n  [\"legslash\"] = 1.5,\n  [\"armslash\"] = 1.5,\n  [\"centreslash\"] = 1.5,\n  [\"compassslash\"] = 1.5,\n  [\"drawslash\"] = 1.3\n  }\n\t\nlocal off_attacks = {\n  [\"legslash\"] = 1,\n  [\"armslash\"] = 1,\n  [\"centreslash\"] = 1,\n}\n\nfunction wsys.my_limb_hit(limb, attack)\n  selectString(limb, 1)\n  setItalics(true) fg(\"white\") bg(\"blue\")\n  resetFormat() deselect()\n  tempLineTrigger( 1, 1, [[wsys.my_limb_hit_next_line(\"]]..limb..[[\",\"]]..attack..[[\")]])\nend\n\nfunction wsys.my_limb_hit_next_line(limb, attack)\n  if line:match(\"You parry the attack with a deft manoeuvre.\")\n    or line:match( \"The attack rebounds back onto %w+!\" )\n    or line:match( \"The attack rebounds onto %w+!\" )\n    or line:match( \"%w+ misses you with \" )\n    or line:match( \"You dodge nimbly out of the way.\" )\n    or line:match( \"One of your reflections has been destroyed\" )\n    or line:match( \"You twist your body out of harm's way.\" )\n    or line:match( \"You quickly jump back, avoiding the attack.\" )\n    or line:match( \"The attack rebounds off your rebounding aura!\" )\n    or line:match( \"You frantically attempt to parry the attack of %w+, but succeed only in redirecting it.\" )\n    or line:match( \"You move inside %w+'s guard, deflecting %w+ attack to one side with your forearm before countering with a swift blow to %w+ temple.\")\n    or line:match( \"%w+'s blow lands upon you but is robbed of much of its impact by %w+ flawed technique.\" ) then -- psion only\n  else\n    wsys.my_limb_hit_add( limb, attack )\n  end\nend\n\nfunction wsys.my_limb_hit_add(limb, attack)\n  wsys.lastlimbhit = limb\n\t\n  if off_attacks[attack] then\n    wsys.addSelfDamage(off_limbs[limb], off_attacks[attack])\n  end\n\t\n  wsys.addSelfDamage(limb, attacks[attack] or 1 )\n  selectString(limb, 1)\n  setItalics(true) fg(\"white\") bg(\"blue\")\n  resetFormat() deselect()\n  raiseEvent(\"myLimbHit\", limb, attack)\nend\n\nfunction wsys.resetSelfDamage(limb)\n  wsys.clearSelfDamage(limb)\n  cecho(\"<seashell>Self \"..limb..\" timed out!\")\nend\n\nfunction wsys.addSelfDamage(limb, n)\n  wsys.tb.selflimbdamage[limb].damage = wsys.tb.selflimbdamage[limb].damage + n\n  timers[limb] = timers[limb] or {}\n  if timers[limb].timer then killTimer( timers[limb].timer ) end\n  timers[limb].timer = tempTimer( 180, [[wsys.resetSelfDamage(\"]]..limb..[[\")]] )\nend\n\nfunction wsys.clearSelfDamage(limb)\n  wsys.tb.selflimbdamage[limb].damage = 0\n  if timers[limb] and timers[limb].timer then killTimer( timers[limb].timer ) end\n  timers[limb] = nil\nend\n\nfunction wsys.clearSelfDamageAll()\n  for limb,_t in pairs( wsys.tb.selflimbdamage ) do\n    wsys.clearSelfDamage( limb )\n  end\nend\n\nfunction wsys.brokenLimbListener(event, affliction)\n  -- GMCP triggers before the limb hit line, so don't rely on gmcp to call the got aff event here\n  if event == \"got aff\" or event == \"lost aff\" then\n    if affliction == \"damagedleftarm\" or affliction == \"mangledleftarm\" then\n      wsys.clearSelfDamage(\"left arm\")\n    elseif affliction == \"damagedrightarm\" or affliction == \"mangledrightarm\" then\n      wsys.clearSelfDamage(\"right arm\")\n    elseif affliction == \"damagedleftleg\" or affliction == \"mangledleftleg\" then\n      wsys.clearSelfDamage(\"left leg\")\n    elseif affliction == \"damagedrightleg\" or affliction == \"mangledrightleg\" then\n      wsys.clearSelfDamage(\"right leg\")\n    elseif affliction == \"damagedhead\" or affliction == \"mangledhead\" then\n      wsys.clearSelfDamage(\"head\")\n    elseif affliction == \"mildtrauma\" or affliction == \"serioustrauma\" then\n      wsys.clearSelfDamage(\"torso\")\n    end\n  end\nend\n\nif wsys.events.limbhit_lost_aff then killAnonymousEventHandler( wsys.events.limbhit_lost_aff ) end\n\nwsys.events.limbhit_lost_aff = registerAnonymousEventHandler(\"lost aff\", \"wsys.brokenLimbListener\")",
    "eventHandlerList": null
}