{
    "attribs": {
        "isActive": "yes",
        "isFolder": "no"
    },
    "type": "script",
    "name": "Oprompt Colour",
    "packageName": null,
    "script": "--ColorPrompt\n\nlocal convert = {\n\n                [\"addiction\"]      = \"add\",\n                [\"agoraphobia\"]    = \"agor\",\n                [\"anorexia\"]       = \"anor\",\n                [\"aeon\"]           = \"aeon\",\n\t\t\t\t\t\t\t\t[\"amnesia\"]        = \"amn\",\n                [\"aflame\"]         = \"aflame\",\n                [\"airfist\"]        = \"afist\",\n                [\"asthma\"]         = \"ast\",\n                [\"blind\"]          = \"bld\",\n\t\t\t\t\t\t\t\t[\"blisters\"]       = \"bls\",\n                [\"blackout\"]       = \"blko\",\n                [\"bound\"]          = \"bound\",\n\t\t\t\t\t\t\t\t[\"brand\"]          = \"brnd\",\n                [\"claustrophobia\"] = \"claus\",\n                [\"clumsiness\"]     = \"clum\",\n                [\"conflagrate\"]    = \"cnflg\",\n                [\"confusion\"]      = \"conf\",\n\t\t\t\t\t\t\t\t[\"corruption\"]     = \"corr\",\n                [\"crippledarm\"]    = \"carm\",\n                [\"crippledleg\"]    = \"cleg\",\n\t\t\t\t\t\t    [\"crushedthroat\"]  = \"cthroat\",\n                [\"darkshade\"]      = \"dark\",\n                [\"deadening\"]      = \"dead\",\n                [\"depression\"]     = \"deep\",\n                [\"deaf\"]           = \"deaf\",\n                [\"dehydrate\"]      = \"dehy\",\n                [\"dementia\"]       = \"dem\",\n                [\"disloyalty\"]     = \"dloyal\",\n                [\"disrupt\"]        = \"dis\",\n                [\"dizziness\"]      = \"diz\",\n                [\"epilepsy\"]       = \"epi\",\n                [\"enlighten\"]      = \"LIT\",\n                [\"frozen\"]         = \"frzn\",\n                [\"generosity\"]     = \"genor\",\n                [\"guilt\"]          = \"gul\",\n                [\"haemophilia\"]    = \"haem\",\n                [\"hallucinations\"] = \"hall\",\n                [\"hamstring\"]      = \"hamst\",\n                [\"healthleech\"]    = \"hleach\",\n                [\"hellsight\"]      = \"hsight\",\n                [\"hierophant\"]     = \"hiero\",\n                [\"hypersomnia\"]    = \"hyper\",\n                [\"hypochondria\"]   = \"hypo\",\n                [\"hypothermia\"]    = \"hypot\",\n                [\"impaleslash\"]    = \"is\",\n                [\"impatience\"]     = \"imp\",\n                [\"inquisition\"]    = \"inq\",\n                [\"justice\"]        = \"just\",\n                [\"kola\"]           = \"kola\",\n                [\"lethargy\"]       = \"leth\",\n                [\"loneliness\"]     = \"lonl\",\n                [\"masochism\"]      = \"maso\",\n                [\"manaleech\"]      = \"mleach\",\n\t\t\t\t\t\t\t\t[\"mindravaged\"]    = \"mrvg\",\n                [\"nausea\"]         = \"naus\",\n                [\"pacifism\"]       = \"pac\",\n                [\"paralysis\"]      = \"para\",\n                [\"parasite\"]       = \"paras\",\n                [\"petrified\"]      = \"PETD\",\n                [\"paranoia\"]       = \"prnd\",\n\t\t\t\t\t\t\t\t[\"preempt\"]        = \"pree\",\n                [\"prone\"]          = \"prn\",\n                [\"recklessness\"]   = \"reck\",\n                [\"retribution\"]    = \"ret\",\n                [\"rixil\"]          = \"rixil\",\n                [\"scalded\"]        = \"scald\",\n                [\"scytherus\"]      = \"scy\",\n                [\"selarnia\"]       = \"sel\",\n                [\"sensitivity\"]    = \"sen\",\n                [\"slime\"]          = \"slm\",\n                [\"shadowmadness\"]  = \"smad\",\n                [\"shyness\"]        = \"shy\",\n                [\"slickness\"]      = \"slick\",\n                [\"spiritburn\"]     = \"sburn\",\n\t\t\t\t\t\t\t\t[\"stuttering\"]     = \"stut\",\n                [\"surge\"]          = \"surge\",\n                [\"tempslickness\"]  = \"slick2\",\n\t\t\t\t\t\t\t\t[\"tension\"]        = \"ten\",\n                [\"stupidity\"]      = \"stu\",\n                [\"tenderskin\"]     = \"tskin\",\n                [\"transfixed\"]     = \"trans\",\n                [\"timeflux\"]       = \"tfx\",\n                [\"timeloop\"]       = \"tloop\",\n                [\"trussed\"]        = \"trst\",\n                [\"unconscious\"]    = \"uncon\",\n                [\"weariness\"]      = \"weari\",\n                [\"whisperingmadness\"] = \"wmad\",\n                [\"wrenchhead\"]     = \"wrth\",\n                [\"wrenchtorso\"]     = \"wrtt\",\n                [\"worm\"]           = \"wrm\",\n                [\"vertigo\"]        = \"vert\",\n                [\"vitiate\"]        = \"vit\",\n                [\"voyria\"]         = \"voyria\",\n                [\"voidfist\"]       = \"vfist\",\n                [\"rightleg\"]       = \"rl\",\n                [\"leftleg\"]       = \"ll\",\n                [\"rightarm\"]       = \"ra\",\n                [\"leftarm\"]       = \"la\",\n                [\"head\"]       = \"h\",\n                [\"torso\"]       = \"tt\",\n                [\"trussed\"]        = \"trsd\",\n                [\"unconscious\"]    = \"unc\",  \n                [\"airdisrupt\"]  = \"adsr\",\n                [\"earthdisrupt\"]  = \"edsr\",\n                [\"firedisrupt\"]  = \"fdsr\",\n                [\"spiritdisrupt\"]  = \"sdsr\",\n                [\"waterdisrupt\"]  = \"wdsr\",\n\t\t\t\t\t\t\t\t[\"unweavingmind\"] = \"umind\",\n\t\t\t\t\t\t\t\t[\"unweavingbody\"] = \"ubody\",\n\t\t\t\t\t\t\t\t[\"unweavingspirit\"] = \"uspirit\",\n\t\t\t\t\t\t\t\t[\"bloodfire\"]     = \"bfire\",\n}\nak.prompt = ak.prompt or {}\n--if ak.prompt.unique then return end\nak.prompt.uniqueset = {\"hallucinations\",\"dizziness\",\"recklessness\",\"confusion\",\"paranoia\",\"epilepsy\",\"impatience\"}\nak.prompt.uniquesymbol = \"<cyan>+\"\nak.prompt.donotrelay = {\"rixil\",\"slime\",\"hierophant\"}\nak.prompt.currentcolor = \"<yellow>\"\nak.prompt.enablecolor = true\nak.prompt.lockgroup = true\nak.prompt.default = \"<yellow>\"\nak.prompt.colours = {}\nak.prompt.lockpriority = { \n  [1] = \"PTLOCK\",\n  [2] = \"HLOCK\",\n  [3] = \"SLOCK\",\n  [4] = \"VLOCK\",\n}\nak.prompt.locks = {\n  PTLOCK = {\"anorexia\",\"asthma\",\"slickness\",\"paralysis\",\"impatience\"},\n  HLOCK = {\"anorexia\",\"asthma\",\"slickness\",\"paralysis\"},\n  SLOCK = {\"anorexia\",\"asthma\",\"slickness\",\"impatience\"},\n  VLOCK = {\"anorexia\",\"asthma\",\"slickness\"},\n}\nak.prompt.colours.lock = {\n  PTLOCK = \"<deep_pink>\",\n  HLOCK = \"<deep_pink>\",\n  SLOCK = \"<hot_pink>\",\n  VLOCK = \"<hot_pink>\",\n}\nak.prompt.colours.specific = {\n   Kelp = \"<green>\",\n   Goldenseal = \"<white>\",\n   Ginseng = \"<blue>\",\n   Salve = \"<cyan>\", \n   Ash = \"<purple>\",\n   Deathly = \"<cyan>\",\n\t Smoke = \"<orange>\",\n   }\nak.prompt.colours.afflictions = {\n   Kelp = {\"asthma\", \"clumsiness\", \"hypochondria\", \"sensitivity\", \"weariness\", \"healthleech\"},      \n   Goldenseal = {\"dizziness\", \"epilepsy\", \"impatience\", \"shyness\", \"stupidity\", \"unweavingmind\"},\n   Ginseng = {\"addiction\", \"darkshade\", \"haemophilia\", \"lethargy\", \"nausea\", \"scytherus\", \"unweavingbody\"},\n   Salve = {\"aflame\", \"rightleg\", \"leftleg\", \"rightarm\", \"leftarm\", \"head\", \"torso\"}, \n   Ash = {\"confusion\", \"dementia\", \"hallucinations\", \"hypersomnia\", \"paranoia\"} ,\n   Deathly = {\"enlighten\",\"voyria\"},\n\t Smoke = {\"tension\",\"manaleech\",\"deadening\",\"disloyalty\", \"unweavingspirit\"}, \n}\nfunction ak.prompt.unique(aff)\n   if table.contains(ak.prompt.uniqueset, aff) then\n      return ak.prompt.uniquesymbol..\"\"..ak.prompt.currentcolor\n   else\n      return \"\"\n   end\nend\n\nfunction ak.prompt.setassign()\n   if gmcp.Char.Status.class == \"Bard\" then\n      ak.prompt.uniqueset = {\"agoraphobia\",\"claustrophobia\",\"dementia\",\"epilepsy\",\"masochism\",\"recklessness\",\"vertigo\",\"confusion\", \"dizziness\", \"impatience\", \"paranoia\", \"stupidity\", \"addiction\"}\n   elseif gmcp.Char.Status.class == \"Sentinel\" then\n      ak.prompt.uniqueset = {\"hallucinations\",\"dizziness\",\"recklessness\",\"confusion\",\"paranoia\",\"epilepsy\",\"impatience\"}\n   elseif gmcp.Char.Status.class == \"Occultist\" then\n      ak.prompt.uniqueset = {\"dementia\",\"stupidity\",\"confusion\",\"hypersomnia\",\"paranoia\",\"hallucinations\",\"impatience\",\"recklessness\",\"masochism\",\"agoraphobia\",\"loneliness\",\"lovers\"}   \n   else\n      ak.prompt.uniqueset = {}\n   end\nend\nfunction ak.prompt.scoreup()\n  ak.prompt.setassign()\n  ak.prompt.donotgroup = {}\n  ak.prompt.lockconflict = false\n  ak.prompt.currentcolor = ak.prompt.default\n  promptset = {}\n  local donotreprompt = {}\n  if ak.prompt.lockgroup then\n     for i = 1, #ak.prompt.lockpriority do\n        for x = 1, #ak.prompt.locks[ak.prompt.lockpriority[i]] do\n           if affstrack.score[ak.prompt.locks[ak.prompt.lockpriority[i]][x]] > 50 and not ak.prompt.lockconflict then\n              if x == #ak.prompt.locks[ak.prompt.lockpriority[i]] and not table.contains(ak.prompt.donotgroup, ak.prompt.lockpriority[i]) then\n                 if table.contains(ak.prompt.colours.lock, ak.prompt.lockpriority[i] ) then\n                    table.insert(promptset, ak.prompt.colours.lock[ak.prompt.lockpriority[i]]..\"\"..ak.prompt.lockpriority[i])\n                    ak.prompt.lockconflict = true\n                 else\n                    table.insert(promptset, ak.prompt.lockpriority[i])\n                    ak.prompt.lockconflict = true\n                 end\n                 for m = 1, #ak.prompt.locks[ak.prompt.lockpriority[i]] do\n                    table.insert(donotreprompt, ak.prompt.locks[ak.prompt.lockpriority[i]][m])\n                 end   \n              end\n           elseif not table.contains(ak.prompt.donotgroup, ak.prompt.lockpriority[i]) then\n              table.insert(ak.prompt.donotgroup, ak.prompt.lockpriority[i])\n           end\n        end\n     end\n  end\n  if ak.prompt.enablecolor then\n     for k,v in pairs(ak.prompt.colours.afflictions) do\n        if #ak.prompt.colours.afflictions[k] > 0 then\n           for i = 1,#ak.prompt.colours.afflictions[k] do\n              if affstrack.score[ak.prompt.colours.afflictions[k][i]] > 1 and convert[ak.prompt.colours.afflictions[k][i]] and not table.contains(ak.prompt.donotrelay, ak.prompt.colours.afflictions[k][i]) and not table.contains(donotreprompt, ak.prompt.colours.afflictions[k][i]) then         \n                 if affstrack.score[ak.prompt.colours.afflictions[k][i]] == 100 and convert[ak.prompt.colours.afflictions[k][i]] then\n                    ak.prompt.currentcolor = ak.prompt.colours.specific[k]\n                    table.insert(promptset, ak.prompt.colours.specific[k]..\"\"..ak.prompt.unique(ak.prompt.colours.afflictions[k][i])..\"\"..convert[ak.prompt.colours.afflictions[k][i]])\n                    table.insert(donotreprompt, ak.prompt.colours.afflictions[k][i])\n                 elseif convert[ak.prompt.colours.afflictions[k][i]] then\n                    ak.prompt.currentcolor = ak.prompt.colours.specific[k]\n                    table.insert(promptset, ak.prompt.colours.specific[k]..\"\"..ak.prompt.unique(ak.prompt.colours.afflictions[k][i])..\"\"..convert[ak.prompt.colours.afflictions[k][i]]..\"[\"..math.floor(affstrack.score[ak.prompt.colours.afflictions[k][i]] + 0.5)..\"]\")\n                    table.insert(donotreprompt, ak.prompt.colours.afflictions[k][i])\n                 end\n              end\n           end\n        end\n     end\n  end\n  for k,v in pairs(affstrack.score) do\n     if v > 1 and convert[k] and not table.contains(donotreprompt, k)and not table.contains(ak.prompt.donotrelay, k) then         \n        if v == 100 and convert[k] then\n           ak.prompt.currentcolor = ak.prompt.default\n           table.insert(promptset, ak.prompt.default..\"\"..ak.prompt.unique(k)..\"\"..convert[k])\n        elseif convert[k] and not table.contains(ak.prompt.donotrelay, k)  then\n           ak.prompt.currentcolor = ak.prompt.default\n           table.insert(promptset, ak.prompt.default..\"\"..ak.prompt.unique(k)..\"\"..convert[k]..\"[\"..math.floor(v + 0.5)..\"]\" )\n        end\n     end\n  end\n  if affstrack.impale then\n     ak.prompt.currentcolor = ak.prompt.default\n     table.insert(promptset, \"<cyan>IMPALED\")\n  end\n  if ak.track.flown then\n     ak.prompt.currentcolor = ak.prompt.default\n     table.insert(promptset, \"<white>FLOWN\")\n  end\n  if gmcp.Char.Status.class == \"Infernal\" or gmcp.Char.Status.class == \"Paladin\" or gmcp.Char.Status.class == \"Runewarden\" or gmcp.Char.Status.class == \"Magi\" or gmcp.Char.Status.class == \"Serpent\" or gmcp.Char.Status.class == \"Bard\" then\n\t\tif ak.defs.rebounding then\n\t\t\ttable.insert(promptset,\"<blue>Reb\")\n\t\tend\n\t\tif affstrack.ferocity and affstrack.ferocity > 0 then\n\t\t   table.insert(promptset,\"<cyan>[<red>\"..affstrack.ferocity..\"<cyan>]\")\t\n\t\tend\n  end\n\tif gmcp.Char.Status.class == \"Occultist\" then\n\t\tif ak.occie.aura.mental > 0 or ak.occie.aura.physical > 0 then\n\t\t\ttable.insert(promptset,\"<cyan>[<white>\"..ak.occie.aura.physical..\"/<green>\"..ak.occie.aura.mental..\"<cyan>]\")\n\t\tend\n  end\n\tif gmcp.Char.Status.class == \"Depthswalker\" then\n    local age = ak.age or 0\n    if age ~= 0 then\n\t   table.insert(promptset,\"<white>[<red>\"..ak.age()..\"<white>]\")\t\n    end\n\tend\t\n\tif ak.bleeding and ak.bleeding > 0 then\n\t   table.insert(promptset,\"<cyan>[<red>\"..ak.bleeding..\"<cyan>]\")\n\tend\n\tif gmcp.Char.Status.class == \"Shaman\" and ak.shaman.GetFashions then\n\t   table.insert(promptset,\"<cyan>[<red>F<cyan>]\")\t\n\tend\nend\n\n\n\n\n",
    "eventHandlerList": null
}