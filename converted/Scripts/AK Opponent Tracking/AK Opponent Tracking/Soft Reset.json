{
    "attribs": {
        "isActive": "yes",
        "isFolder": "no"
    },
    "type": "script",
    "name": "Soft Reset",
    "packageName": null,
    "script": "function ak.softreset()\n  ak.tza = false\n\tak.shaman.Relapseaff = \"none\"\n  ak.shaman.coagulation = true\n  ak.shaman.bloodlet = true\n\tak.shaman.GetFashions = false\n\tak.pervasion.hitcount = 0\n\tak.pervasion.initialbleed = false\n\tak.bleeding = 0\n  ak.shaman.relapse = true\n\tcecho(\"<cyan> \\nINITATED A SOFT OPPONENT AFFLICTON RESET, DID NOT RESET ANY BALANCES!!\")\n\tcecho(\"<yellow> \\nINITATED A SOFT OPPONENT AFFLICTON RESET, DID NOT RESET ANY BALANCES!!\")\n\tcecho(\"<cyan> \\nINITATED A SOFT OPPONENT AFFLICTON RESET, DID NOT RESET ANY BALANCES!!\")\n\tcecho(\"<yellow> \\nINITATED A SOFT OPPONENT AFFLICTON RESET, DID NOT RESET ANY BALANCES!!\\n\\n\")\n\tdisableTrigger(\"Swiftstring\")\n\tdisableTimer(\"Hypochondria Timer\")\n\tak.resetbacktrack()\n\ttargetlyred = 0\n\tapplycure = {}\n\tak.bals.salve = true\n\tak.bals.focus = true\n\tif ak.tendonTimer then killTimer(ak.tendonTimer) end\n\tif ak.skullTimer then killTimer(ak.skullTimer) end\n\tif ak.wristTimer then killTimer(ak.wristTimer) end\n\tif ak.ribTimer then killTimer(ak.ribTimer) end\n\tif ak.timers.salvebackup then killTimer(ak.timers.salvebackup) end\n\tlocal wasdehydrated = false\n\tlocal wastimefluxed = false\n\tlocal hieroup = false\n\tlocal rixilup = false\n\tif affstrack and affstrack.score then\n   \tif affstrack.score.dehydrate == 100 then\n  \t    wasdehydrated = true\n  \t end\n  \t if affstrack.score.timeflux == 100 then\n  \t    wastimefluxed = true\n  \t end\n\tend\t\n\tif affstrack.score.hierophant == 100 then\n\t\thieroup = true\n\tend\n\tif affstrack.score.rixil == 100 then\n\t\trixilup = true\n\tend\n\tak.engaged = false\n\n   for k,v in pairs(affstrack.score) do\n      affstrack.score[k] = 0\n   end\n\n\tif hieroup then \n\t\taffstrack.score.hierophant = 100\n\tend\n\tif rixilup then \n\t\taffstrack.score.rixil = 100\n\tend\n\taffstrack.enlightenscore = 0\n\taffstrack.ginsengscore = 0\n\taffstrack.goldenscore = 0\n\taffstrack.pyradiusscore = 0\n\taffstrack.kelpscore = 0\n\taffstrack.tramplescore = 0\n\taffstrack.mentalscore = 0\n\taffstrack.totalaffs = 0\n\tak.twoh = ak.twoh or {}\n\tak.twoh.skull = 0\n\tak.twoh.ribs = 0\n\tak.twoh.tendons = 0\n\tak.twoh.wrist = 0\n\tak.occie.aura.physical =  0\n\tak.occie.aura.mental = 0\n\tak.alchemist.humour.sanguine = 0\n\tak.alchemist.humour.choleric = 0\n\tak.alchemist.humour.melancholic = 0\n\tak.alchemist.humour.phlegmatic = 0\n\tak.randomaffs = 0\n\topponenthalftree = 0\n\tif wasdehydrated then\n\t   affstrack.score.dehydrate = 100\n\tend\n\tif wastimefluxed then\n\t   affstrack.score.timeflux = 100\n\tend\n\tak.track.flown = false\n\tak.currentmana = 5000\n\tak.maxmana = 5000\n\tak.currenthealth = 5000\n\tak.maxhealth = 5000\n\tak.manapercent = 100\n\tak.healthpercent = 100\n\tak.classlockadd()\n  if ak.radiancestack then\n    ak.stack = ak.radiancestack\n    ak.radiancestack = nil\n  end\n\tak.alchemist.humour.sanguine = 0\n\tak.alchemist.humour.choleric = 0\n\tak.alchemist.humour.phlegmatic = 0\n\tak.alchemist.humour.melancholic = 0\n  ak.scoreup(target)\nend",
    "eventHandlerList": null
}