{
    "attribs": {
        "isActive": "yes",
        "isFolder": "no"
    },
    "type": "script",
    "name": "Defense tracking",
    "packageName": null,
    "script": "mmp.defs = {current = {}}\nmmp.defs.add =\n  function()\n    local def = gmcp.Char.Defences.Add.name\n    if not mmp.defs.current[def] then\n      mmp.defs.current[def] = true\n      raiseEvent(\"mmp got def\", def)\n    end\n  end\nmmp.defs.remove =\n  function()\n    for _, def in ipairs(gmcp.Char.Defences.Remove) do\n      mmp.defs.current[def] = nil\n      raiseEvent(\"mmp lost def\", def)\n    end\n  end\nmmp.defs.list =\n  function()\n    local newDefs = {}\n    local addedDefs, lostDefs = {}, {}\n    for _, v in ipairs(gmcp.Char.Defences.List) do\n      newDefs[v.name] = true\n      if not mmp.defs.current[v.name] then\n        addedDefs[#addedDefs + 1] = v.name\n      end\n    end\n    for def in pairs(mmp.defs.current) do\n      if not newDefs[def] then\n        lostDefs[#lostDefs + 1] = def\n      end\n    end\n    mmp.defs.current = newDefs\n    for _, def in pairs(lostDefs) do\n      raiseEvent(\"mmp lost def\", def)\n    end\n    for _, def in ipairs(addedDefs) do\n      raiseEvent(\"mmp got def\", def)\n    end\n  end\n-- EVENT HANDLERS\nregisterAnonymousEventHandler(\"gmcp.Char.Defences.Add\", \"mmp.defs.add\")\nregisterAnonymousEventHandler(\"gmcp.Char.Defences.Remove\", \"mmp.defs.remove\")\nregisterAnonymousEventHandler(\"gmcp.Char.Defences.List\", \"mmp.defs.list\")",
    "eventHandlerList": null
}