{
    "attribs": {
        "isActive": "yes",
        "isFolder": "no"
    },
    "type": "script",
    "name": "Lock Area",
    "packageName": null,
    "script": "-- Lock Area\n\nmmp.locked = mmp.locked or {}\nmmp.lastLockSearch = mmp.lastLockSearch or nil\n\nfunction mmp.doLockArea(search)\n\tlocal areaList\n\tif search ~= nil then\n\t\tlocal r = rex.new(string.lower(search))\n\t\tmmp.lastLockSearch = search\n\t\tfor name, id in pairs(getAreaTable()) do\n\t\t\tif r:match(string.lower(name)) then\n\t\t\t\tareaList = areaList or {}\n\t\t\t\tareaList[name] = id\n\t\t\tend\n\t\tend\n\t\tif areaList == nil then\n\t\t\tmmp.echo(\"'\" .. search .. \"' did not match any known areas!\")\n\t\t\treturn\n\t\tend\n\telse\n\t\tmmp.lastLockSearch = nil\n\t\tareaList = getAreaTable()\n\tend\n\n\tfor name, id in pairs(areaList) do\n\t\tmmp.echon(name .. string.rep(\" \", 40 - string.len(name)))\n\t\tif not mmp.locked[id] then\n\t\t\tsetFgColor(0, 200, 0)\n\t\t\tsetUnderline(true)\n\t\t\techoLink(\"Lock!\", [[mmp.lockArea( ']] .. name:gsub(\"'\", [[\\']]) .. [[', true )]], \"Click to lock area '\" .. name .. \"'\", true)\n\t\telse\n\t\t\tsetFgColor(200, 0, 0)\n\t\t\tsetUnderline(true)\n\t\t\techoLink(\"Unlock!\", [[mmp.lockArea( ']] .. name:gsub(\"'\", [[\\']]) .. [[', false )]], \"Click to unlock area '\" .. name .. \"'\", true)\n\t\tend\n\tend\n\n\tif not search then\n\t\techo\"\\n\\n\" mmp.echo(\"Use <green>arealock <area><white> to filter areas.\")\n\tend\nend\n\nfunction mmp.lockArea(name, lock, dontreshow)\n\tlocal areas = getAreaTable()\n\tlocal rooms = getAreaRooms(areas[name]) or {}\n    local lockRoom = lockRoom\n    local count = 0\n\tfor _, room in pairs(rooms) do\n\t\tlockRoom(room, lock)\n        count = count + 1\n\tend\n\n\tmmp.locked[areas[name]] = lock and true or nil\n\tmmp.echo(string.format(\"Area '%s' %slocked! All %s room%s within it.\", name, (lock and '' or 'un'), count, (count == 1 and '' or 's')))\n\n\tif not dontreshow then mmp.doLockArea(mmp.lastLockSearch) end\nend\n\n\n",
    "eventHandlerList": null
}