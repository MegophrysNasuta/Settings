{
    "attribs": {
        "isActive": "yes",
        "isFolder": "no"
    },
    "type": "script",
    "name": "OPTIONS",
    "packageName": null,
    "script": "TargetCallTables = (TargetCallTables or {})\nTargetCallTables.Config = (TargetCallTables.Config or {})\nTargetCallTables.targetPrios = (TargetCallTables.targetPrios or {})\n\n-- == -- == -- == CONFIG OPTIONS == -- == -- == --\nTargetCallTables.Config.EchoColor = 'cyan'\nTargetCallTables.Config.ShowEchoes = true\n\nTargetCallTables.Config.UI = true\nTargetCallTables.Config.UITableCols = 2\nTargetCallTables.Config.UITableRows = 10\nTargetCallTables.Config.UIFontSize = 11\nTargetCallTables.Config.UIXPos = \"40%\"\nTargetCallTables.Config.UIYPos = \"0px\"\nTargetCallTables.Config.UIWidth= \"350px\"\nTargetCallTables.Config.UIColor = 'cyan'\n-- == -- END OF CONFIG: DO NOT EDIT BELOW -- == --\n\nTargetCallTables.echo = function(msg)\n  if not TargetCallTables.Config.ShowEchoes then return end\n  local color = TargetCallTables.Config.EchoColor\n  cecho('\\n<'.. color ..'>'.. msg ..'\\n')\nend\n\nTargetCallTables.addTarget = function(index, tar)\n  TargetCallTables.echo('Setting target '.. tostring(index) ..' to '.. tar)\n  TargetCallTables.targetPrios[tonumber(index)] = tostring(tar):lower():title()\n  TargetCallTables.showTable()\nend\n\nTargetCallTables.callTarget = function(index)\n  local num = tonumber(index)\n  local tar = TargetCallTables.targetPrios[num]\n  if tar == nil then\n    cecho('\\n<red>No target in slot '.. tostring(index) ..'!\\n')\n    return\n  end\n  TargetCallTables.lastTargetIndex = num\n  target = tar\n  sendAll('st '.. tar, 'pt Target: '.. tar)\nend\n\nTargetCallTables.nextTarget = function()\n  local lastTargetIndex = (TargetCallTables.lastTargetIndex or 0)\n  if lastTargetIndex == #TargetCallTables.targetPrios then\n    cecho('\\n<orange>WARNING: Looping to beginning of call table (out of targets).')\n    cecho('\\n<orange>=============================================================')\n    cecho('\\n<orange>REPEAT THE COMMAND TO CALL TARGET #1')\n    TargetCallTables.lastTargetIndex = 0\n    return\n  end\n  TargetCallTables.callTarget(lastTargetIndex + 1)\nend\n\nTargetCallTables.setTargets = function(tarTable)\n  TargetCallTables.targetPrios = {}\n  for index, target in pairs(tarTable) do\n    TargetCallTables.addTarget(index, target)\n  end\nend\n\nTargetCallTables.showTable = function()\n  if not TargetCallTables.Config.UI then return end\n  \n  local tbl = '<table width=\"100%\">'\n  local row = 0\n  while row < TargetCallTables.Config.UITableRows do\n    row = row + 1\n    local col = 0\n    tbl = tbl ..'<tr>'\n    while col < TargetCallTables.Config.UITableCols do\n      local idx = (col * 10) + row\n      local t = TargetCallTables.targetPrios[idx] or \"&nbsp;\"\n      tbl = tbl ..'<td>'.. tostring(idx) ..'. '.. t ..'</td>'\n      col = col + 1\n    end\n    tbl = tbl ..'</tr>'\n  end\n  tbl = tbl ..'</table>'\n\n  TargetCallTables.UITable = Geyser.Label:new({\n    name=\"TargetCallTables_UITable\",\n    x=TargetCallTables.Config.UIXPos, y=TargetCallTables.Config.UIYPos,\n    width=TargetCallTables.Config.UIWidth,\n    height=(TargetCallTables.Config.UIFontSize + 10) * TargetCallTables.Config.UITableRows,\n    bgColor=\"black\", fgColor=TargetCallTables.Config.UIColor,\n    message = \"<center>\".. tbl ..\"</center>\"\n  })\n  TargetCallTables.UITable:setFontSize(TargetCallTables.Config.UIFontSize)\nend",
    "eventHandlerList": null
}