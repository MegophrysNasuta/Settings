{
    "attribs": {
        "isActive": "yes",
        "isFolder": "no"
    },
    "type": "script",
    "name": "Megophrys Util",
    "packageName": null,
    "script": "Megophrys.doWhileSelfish = function(func)\n  cmd = func()\n  send('generosity | '.. cmd ..' | selfishness')\nend\n\nMegophrys.dropWhileSelfish = function(item)\n  Megophrys.doWhileSelfish(function() return 'drop '.. item end)\nend\n\nMegophrys.giveWhileSelfish = function(amt, item, tgt)\n  Megophrys.doWhileSelfish(function()\n    if item == 'sovereigns' then\n      return 'get'.. amt ..' sovereigns from pack'\n    end\n    if amt then\n      return 'give'.. amt ..' '.. item .. ' to ' .. tgt\n    else\n      return 'give '.. item .. ' to ' .. tgt\n    end\n  end)\nend\n\nMegophrys.offerWhileSelfish = function(corpse)\n  Megophrys.doWhileSelfish(function() return 'offer '.. (corpse or 'corpses') end)\nend\n\nMegophrys.sellWhileSelfish = function(item, merchant)\n  Megophrys.doWhileSelfish(function() return 'sell '.. item ..' to '.. merchant end)\nend\n\nMegophrys.highlightPanicRoom = function()\n  Megophrys.panicRoomLabel = nil\n  local message = '<center>Panic Room: None'\n  Megophrys.panicRoomLabel = Geyser.Label:new({\n    name='panicRoomLabel',\n    x='57.5%', y='2%',\n    height='2%', width='14%',\n    fgColor=Megophrys.fgColors[Megophrys.killStrat], color='black',\n    message=message\n  })\n  Megophrys.panicRoomLabel:setFontSize(11)\n\n  if not Megophrys.fleeingToRoom then return end\n  local roomID = Megophrys.fleeingToRoom\n\n  unHighlightRoom((Megophrys.highlightedPanicRoom or 0))\n  Megophrys.highlightedPanicRoom = tonumber(roomID)\n  local foundRoomName = getRoomName(Megophrys.highlightedPanicRoom)\n  Megophrys.panicRoomLabel:echo('<center>Panic Room: '.. foundRoomName)\n  highlightRoom(Megophrys.highlightedPanicRoom, 225, 0, 125, 225, 0, 225, 1, 125, 125)\nend\n\nMegophrys.highlightTargetRoom = function(roomName, foundPlayer)\n  Megophrys.targetRoomLabel = nil\n  local message = '<center>Target Room: None'\n  if Megophrys.killStrat == 'denizen' and Megophrys.huntingGround then\n    message = '<center>Target Room: '.. Megophrys.huntingGround\n  end\n  Megophrys.targetRoomLabel = Geyser.Label:new({\n    name='targetRoomLabel',\n    x='57.5%', y=0,\n    height='2%', width='14%',\n    fgColor=Megophrys.fgColors[Megophrys.killStrat], color='black',\n    message=message\n  })\n  Megophrys.targetRoomLabel:setFontSize(11)\n\n  if not roomName or not foundPlayer then return end\n\n  for roomID, foundRoomName in pairs(searchRoom(roomName, true, true)) do\n    unHighlightRoom((Megophrys.highlightedTargetRoom or 0))\n    Megophrys.highlightedTargetRoom = tonumber(roomID)\n    local foundTarget = (string.lower(foundPlayer or '') == string.lower(target))\n    if foundTarget then\n      Megophrys.targetRoom = Megophrys.highlightedTargetRoom\n      Megophrys.targetRoomLabel:echo('<center>Target Room: '.. foundRoomName)\n    end\n    cecho('\\n<cyan>Highlighting '.. foundRoomName .. ' ('.. roomID ..')\\n')\n    highlightRoom(Megophrys.highlightedTargetRoom, 225, 125, 0, 225, 225, 0, 1, 125, 125)\n  end\nend\n\nMegophrys.hoard = function()\n  sendAll(\n    'g gold',\n    'put sovereigns in pack',\n    'inr all'\n  )\nend\n\nMegophrys.Util = {}\nMegophrys.Util.gagLine = function()\n  moveCursor(0, getLineCount()) deleteLine()\n  tempLineTrigger(1,1,[[if isPrompt() then\n    deleteLine()\n  end]])\nend\n\nMegophrys.Util.hexToRgb = function(hex)\n  if not hex:starts('#') then hex = '#'.. hex end\n  return {\n    r = math.floor(tonumber(string.sub(hex, 2, 3), 16) + 0.5),\n    g = math.floor(tonumber(string.sub(hex, 4, 5), 16) + 0.5),\n    b = math.floor(tonumber(string.sub(hex, 6, 7), 16) + 0.5),\n  }\nend\n\nMegophrys.Util.rgbToHex = function(r, g, b)\n  local rgbValue = (r * 0x10000) + (g * 0x100) + b\n  local hexValue = string.format(\"%x\", rgbValue)\n  if #hexValue == 6 then\n    return hexValue\n  else\n    return string.rep('0', 6 - #hexValue) .. hexValue\n  end\nend\n\nMegophrys.Util._dgradient = function(text, fgColor1, fgColor2, bgColor1, bgColor2)\n  if not fgColor1 or not fgColor2 or not bgColor1 or not bgColor2 then\n    error(\"Missing arguments for gradient for text: \".. text)\n  end\n\n  local hexToRgb = Megophrys.Util.hexToRgb\n  local fgColor1, fgColor2 = hexToRgb(fgColor1), hexToRgb(fgColor2)\n  local bgColor1, bgColor2 = hexToRgb(bgColor1), hexToRgb(bgColor2)\n\n  local function smoothGradient(color1, color2, numSteps)\n    local gradient = {color1}\n    local colorStep = math.floor(((color2 - color1) / numSteps) + 0.5)\n    for i=1, numSteps do\n      local nextColor = gradient[#gradient] + colorStep\n      if nextColor > 255 then nextColor = 255 end\n      if nextColor < 0 then nextColor = 0 end\n      gradient[#gradient + 1] = nextColor\n    end\n    return gradient\n  end\n\n  local fgReds = smoothGradient(fgColor1.r, fgColor2.r, #text)\n  local fgGreens = smoothGradient(fgColor1.g, fgColor2.g, #text)\n  local fgBlues = smoothGradient(fgColor1.b, fgColor2.b, #text)\n\n  local bgReds = smoothGradient(bgColor1.r, bgColor2.r, #text)\n  local bgGreens = smoothGradient(bgColor1.g, bgColor2.g, #text)\n  local bgBlues = smoothGradient(bgColor1.b, bgColor2.g, #text)\n\n  local resultStr = ''\n  for i=1, #text do\n    resultStr = (resultStr ..'<'.. fgReds[i] ..','.. fgGreens[i] ..','.. fgBlues[i]\n                           ..':'.. bgReds[i] ..','.. bgGreens[i] ..','.. bgBlues[i]\n                           ..'>'.. string.sub(text, i, i))\n  end\n  return resultStr\nend\n\nMegophrys.Util.hiliteSelection = function(fg_color)\n  fg(fg_color)\n  deselect()\n  resetFormat()\nend\n\nMegophrys.Util.randomChoice = function(tbl)\n  -- https://stackoverflow.com/a/37468712\n  local keyset = {}\n  for _ in pairs(tbl) do\n    table.insert(keyset, _)\n  end\n  return tbl[keyset[math.random(#keyset)]]\nend\n",
    "eventHandlerList": null
}