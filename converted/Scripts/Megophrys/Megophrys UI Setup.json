{
    "attribs": {
        "isActive": "yes",
        "isFolder": "no"
    },
    "type": "script",
    "name": "Megophrys UI Setup",
    "packageName": null,
    "script": "Megophrys.makeClassToolbars = function()\n  setBorderRight(768)\n  setBorderTop(120)\n  setBorderBottom(420)\n\n  Megophrys.modeToolbar = Geyser.Container:new({\n    name='mode_switches',\n    x=0, y=0, width=270, height=60\n  })\n\n  if Megophrys.magiToolbar then\n    Megophrys.magiToolbar:hide()\n  end\n\n  if Megophrys.psionToolbar then\n    Megophrys.psionToolbar:hide()\n  end\n\n  if Megophrys.bmToolbar then\n    Megophrys.bmToolbar:hide()\n  end\n\n  if Megophrys.alchToolbar then\n    Megophrys.alchToolbar:hide()\n  end\n\n  if Megophrys.aposToolbar then\n    Megophrys.aposToolbar:hide()\n  end\n\n  Megophrys.modeLabel = Geyser.Label:new({\n    name='mode_label',\n    x=0, y=0, width=100, height=20,\n    message='AI Mode:'\n  }, Megophrys.modeToolbar)\n  Megophrys.modeLabel:setFontSize(11)\n  Megophrys.modeButton = Geyser.Label:new({\n    name='current_mode',\n    x=100, y=0, width=170, height=20,\n  }, Megophrys.modeToolbar)\n  Megophrys.modeButton:setFontSize(11)\n\n  Megophrys.nextMoveLabel = Geyser.Label:new({\n    name='next_move_label',\n    x=0, y=20, width=100, height=20,\n    message='Next move:'\n  }, Megophrys.modeToolbar)\n  Megophrys.nextMoveLabel:setFontSize(11)\n  Megophrys.nextMoveButton = Geyser.Label:new({\n    name='next_move',\n    x=100, y=20, width=170, height=20,\n  }, Megophrys.modeToolbar)\n  Megophrys.nextMoveButton:setFontSize(11)\n\n  Megophrys.specialMoveLabel = Geyser.Label:new({\n    name='special_label',\n    x=0, y=40, width=100, height=20,\n    message='Special:'\n  }, Megophrys.modeToolbar)\n  Megophrys.specialMoveLabel:setFontSize(11)\n  Megophrys.specialMoveButton = Geyser.Label:new({\n    name='special_move',\n    x=100, y=40, width=170, height=20,\n  }, Megophrys.modeToolbar)\n  Megophrys.specialMoveButton:setFontSize(11)\n\n  Megophrys.calendarLabel = Geyser.Label:new({\n    name='calendar_label',\n    x=0, y=60, width=540, height=40,\n    fgColor='CornflowerBlue',\n    message='Loading...'\n  })\n  Megophrys.calendarLabel:setFontSize(11)\n\n  if Megophrys.targetHpGauge then Megophrys.targetHpGauge:hide() end\n  if Megophrys.targetMpGauge then Megophrys.targetMpGauge:hide() end\nend\n\nMegophrys.showTime = function()\n  if not Megophrys.calendarLabel then return end\n  local tl = gmcp.IRE.Time.List\n  if not tl then return end\n\n  for key, _ in pairs(tl) do\n    local updated = gmcp.IRE.Time.Update[key]\n    if updated then tl[key] = updated end\n  end\n\n  local d = ''\n  if tl.day == \"1\" then\n    d = \"1st\"\n  elseif tl.day == \"2\" then\n    d = \"2nd\"\n  elseif tl.day == \"3\" then\n    d = \"3rd\"\n  elseif tl.day == \"21\" then\n    d = \"21st\"\n  elseif tl.day == \"22\" then\n    d = \"22nd\"\n  elseif tl.day == \"23\" then\n    d = \"23rd\"\n  elseif tl.day == \"31\" then\n    d = \"31st\"\n  else\n    d = tl.day ..\"th\"\n  end\n\n  local seasons = {\n    \"mid-winter\",\n    \"late winter\",\n    \"early spring\",\n    \"mid-spring\",\n    \"late spring\",\n    \"early summer\",\n    \"mid-summer\",\n    \"late summer\",\n    \"early autumn\",\n    \"mid-autumn\",\n    \"late autumn\",\n    \"early winter\",\n  }\n\n  local timeStr = (d ..' '.. tl.month ..', '.. tl.year ..\n                   ' ('.. seasons[tonumber(tl.mon)] ..', '.. tl.moonphase ..\n                   ')<br>'.. tl.time)\n  Megophrys.calendarLabel:echo(timeStr)\nend\n\nMegophrys.updateBars = function()\n  if not Megophrys.hpGauge then\n    Megophrys.hpGauge = Geyser.Gauge:new({\n      name='hpGauge',\n      x='-520px', y=0,\n      width='520px', height='3.25%'\n    })\n  end\n  Megophrys.hpGauge:setFontSize(12)\n  if not Megophrys.mpGauge then\n    Megophrys.mpGauge = Geyser.Gauge:new({\n      name='mpGauge',\n      x='-520px', y='3.25%',\n      width='520px', height='3.25%'\n    })\n  end\n  if not Megophrys.affPrGauge then\n    Megophrys.affPrGauge = Geyser.Gauge:new({\n      name='affPrGauge',\n      x='-520px', y='6.5%',\n      width='520px', height='3.25%'\n    })\n  end\n  Megophrys.mpGauge:setFontSize(12)\n  if not Megophrys.tgtAffTable then\n    Megophrys.tgtAffTable = Geyser.Label:new({\n      name='tgtAffTable',\n      x='-765px', y='13.5%',\n      width='150px', height='420px',\n      fgColor='white', color='black'\n    })\n    Megophrys.tgtAffTable:setFontSize(12)\n  end\n  if not Megophrys.whoHereTable then\n    Megophrys.whoHereTable = Geyser.Label:new({\n      name='whoHereTable',\n      x='-760px', y='800px',\n      width='752px', height='72px',\n      fgColor='white', color='black'\n    })\n    Megophrys.whoHereTable:setFontSize(12)\n  end\n\n  -- literally from https://wiki.mudlet.org/w/manual:geyser#Styling_a_gauge\n  Megophrys.hpGauge.front:setStyleSheet([[background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #f04141, stop: 0.1 #ef2929, stop: 0.49 #cc0000, stop: 0.5 #a40000, stop: 1 #cc0000);\n    border-top: 1px black solid;\n    border-left: 1px black solid;\n    border-bottom: 1px black solid;\n    border-radius: 7;\n    padding: 3px;]])\n  Megophrys.hpGauge.back:setStyleSheet([[background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #bd3333, stop: 0.1 #bd2020, stop: 0.49 #990000, stop: 0.5 #700000, stop: 1 #990000);\n    border-width: 1px;\n    border-color: black;\n    border-style: solid;\n    border-radius: 7;\n    padding: 3px;]])\n\n  Megophrys.mpGauge.front:setStyleSheet([[background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #98f041, stop: 0.1 #8cf029, stop: 0.49 #66cc00, stop: 0.5 #52a300, stop: 1 #66cc00);\n    border-top: 1px black solid;\n    border-left: 1px black solid;\n    border-bottom: 1px black solid;\n    border-radius: 7;\n    padding: 3px;]])\n  Megophrys.mpGauge.back:setStyleSheet([[background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #78bd33, stop: 0.1 #6ebd20, stop: 0.49 #4c9900, stop: 0.5 #387000, stop: 1 #4c9900);\n    border-width: 1px;\n    border-color: black;\n    border-style: solid;\n    border-radius: 7;\n    padding: 3px;]])\n\n  Megophrys.affPrGauge.front:setStyleSheet([[background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #4141f0, stop: 0.1 #2929ef, stop: 0.49 #0000cc, stop: 0.5 #0000a4, stop: 1 #0000cc);\n    border-top: 1px black solid;\n    border-left: 1px black solid;\n    border-bottom: 1px black solid;\n    border-radius: 7;\n    padding: 3px;]])\n  Megophrys.affPrGauge.back:setStyleSheet([[background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #3333bd, stop: 0.1 #2020bd, stop: 0.49 #000099, stop: 0.5 #000070, stop: 1 #000099);\n    border-width: 1px;\n    border-color: black;\n    border-style: solid;\n    border-radius: 7;\n    padding: 3px;]])\n\n  local fmtPctLabel = function(portion, maxAmt)\n    return ('<center>'..\n            tostring(math.floor(((portion / maxAmt) * 100) + 0.5))..\n            '%</center>')\n  end\n\n  local currHealth = tonumber(gmcp.Char.Vitals.hp)\n  local currMana = tonumber(gmcp.Char.Vitals.mp)\n  local maxhp = tonumber(gmcp.Char.Vitals.maxhp)\n  local maxmp = tonumber(gmcp.Char.Vitals.maxmp)\n  local healthPct = fmtPctLabel(currHealth, maxhp)\n  local manaPct = fmtPctLabel(currMana, maxmp)\n  Megophrys.hpGauge:setValue(currHealth, maxhp, healthPct)\n  Megophrys.mpGauge:setValue(currMana, maxmp, manaPct)\n\n  local affPressure = 0\n  for lockAff in pairs({'paralysis', 'anorexia', 'asthma', 'impatience', 'slickness'}) do\n    if wsys.aff[lockAff] then\n      affPressure = affPressure + 1\n    end\n  end\n\n  local affPressureDesc = {\n    [0] = '',\n    [1] = '*',\n    [2] = '* *',\n    [3] = 'X X X',\n    [4] = '!! !! !! !!',\n    [5] = '*** DANGER ***',\n  }\n  Megophrys.affPrGauge:setValue(affPressure, 5, affPressureDesc[affPressure])\n\n  local tgtAffTable = '<b>Tgt Affs:</b><ul>'\n  local addToTgtAffTable = function(tgtAffTable, affList)\n    for _, aff in pairs(affList) do\n      local entry = ''\n      if tarAff(aff) then\n        entry = '<b>'.. aff ..'</b>'\n      else\n        entry = '<i><s>'.. aff ..'</s></i>'\n      end\n      tgtAffTable = (tgtAffTable ..'<li>'.. entry ..'</li>')\n    end\n    tgtAffTable = (tgtAffTable ..'<li>&nbsp;</li>')\n    return tgtAffTable\n  end\n\n  local trueLockAffs = {\n    \"paralysis\",\n    \"anorexia\",\n    \"asthma\",\n    \"impatience\",\n    \"slickness\",\n  }\n  if Megophrys.class == 'Psion' then\n    trueLockAffs[#trueLockAffs + 1] = \"bloodfire\"\n  end\n  tgtAffTable = addToTgtAffTable(tgtAffTable, trueLockAffs)\n\n  if Megophrys.class == 'Psion' then\n    local psionAffs = {\n      \"unweavingmind\",\n      \"unweavingbody\",\n      \"unweavingspirit\",\n    }\n    tgtAffTable = addToTgtAffTable(tgtAffTable, psionAffs)\n  end\n\n  local otherAffs = {\n    \"haemophilia\",\n    \"epilepsy\",\n    \"dizziness\",\n    \"nausea\",\n    \"stupidity\",\n    \"clumsiness\",\n    \"weariness\",\n  }\n  tgtAffTable = addToTgtAffTable(tgtAffTable, otherAffs)\n\n  tgtAffTable = tgtAffTable ..'<li>bleed: '.. (ak.bleeding or 0) ..'</li></ul></center>'\n  Megophrys.tgtAffTable:echo(tgtAffTable)\nend\n\nMegophrys.updateMissionCtrlBar = function()\n  Megophrys.atkBtn = nil\n  Megophrys.fleeBtn = nil\n  Megophrys.chaseBtn = nil\n  Megophrys.stopBtn = nil\n\n  local doin_stuff = false\n\n  Megophrys.atkBtn = Geyser.Label:new({\n    name=\"attackButton\",\n    x=\"35%\", y=\"6%\",\n    width=\"7.5%\", height=\"7.5%\",\n    fgColor=\"white\",\n    message=\"<center>ATTACK</center>\"\n  })\n  Megophrys.atkBtn:setFontSize(18)\n  if Megophrys.autoAttacking then\n    doin_stuff = true\n    Megophrys.atkBtn:setStyleSheet([[\n      background-color: firebrick;\n      border-radius: 12px;\n      border: 4px inset crimson;\n      font-weight: bold;\n    ]])\n  else\n    Megophrys.atkBtn:setStyleSheet([[\n      background-color: crimson;\n      border-radius: 12px;\n      border: 4px outset firebrick;\n      font-weight: bold;\n    ]])\n  end\n  Megophrys.atkBtn:setClickCallback(\"Megophrys.autoAttack\")\n\n  Megophrys.fleeBtn = Geyser.Label:new({\n    name=\"fleeButton\",\n    x=\"42.5%\", y=\"6%\",\n    width=\"7.5%\", height=\"7.5%\",\n    fgColor=\"white\",\n    message=\"<center>FLEE</center>\"\n  })\n  Megophrys.fleeBtn:setFontSize(18)\n  if Megophrys.autoEscaping then\n    doin_stuff = true\n    Megophrys.fleeBtn:setStyleSheet([[\n      background-color: darkorange;\n      border-radius: 12px;\n      border: 4px inset orange;\n      font-weight: bold;\n    ]])\n  else\n    Megophrys.fleeBtn:setStyleSheet([[\n      background-color: goldenrod;\n      border-radius: 12px;\n      border: 4px outset darkgoldenrod;\n      font-weight: bold;\n    ]])\n  end\n  Megophrys.fleeBtn:setClickCallback(\"Megophrys.autoEscape\", 1)\n\n  Megophrys.chaseBtn = Geyser.Label:new({\n    name=\"chaseButton\",\n    x=\"50%\", y=\"6%\",\n    width=\"7.5%\", height=\"7.5%\",\n    fgColor=\"white\",\n    message=\"<center>PURSUE</center>\"\n  })\n  Megophrys.chaseBtn:setFontSize(18)\n  if Megophrys.inPursuit then\n    doin_stuff = true\n    Megophrys.chaseBtn:setStyleSheet([[\n      background-color: darkgreen;\n      border-radius: 12px;\n      border: 4px inset forestgreen;\n      font-weight: bold;\n    ]])\n  else\n    Megophrys.chaseBtn:setStyleSheet([[\n      background-color: green;\n      border-radius: 12px;\n      border: 4px outset darkgreen;\n      font-weight: bold;\n    ]])\n  end\n  Megophrys.chaseBtn:setClickCallback(\"Megophrys.pursue\")\n\n  Megophrys.resistBtn = Geyser.Label:new({\n    name=\"resistButton\",\n    x=\"57.5%\", y=\"6%\",\n    width=\"7.5%\", height=\"7.5%\",\n    fgColor=\"white\",\n    message=\"<center>RESIST</center>\"\n  })\n  Megophrys.resistBtn:setFontSize(18)\n  if Megophrys.autoResisting then\n    doin_stuff = true\n    Megophrys.resistBtn:setStyleSheet([[\n      background-color: midnightblue;\n      border-radius: 12px;\n      border: 4px inset navy;\n      font-weight: bold;\n    ]])\n  else\n    Megophrys.resistBtn:setStyleSheet([[\n      background-color: mediumblue;\n      border-radius: 12px;\n      border: 4px outset navy;\n      font-weight: bold;\n    ]])\n  end\n  Megophrys.resistBtn:setClickCallback(\"Megophrys.autoResist\")\n\n  Megophrys.stopBtn = Geyser.Label:new({\n    name=\"stopButton\",\n    x=\"65%\", y=\"6%\",\n    width=\"7.5%\", height=\"7.5%\",\n    fgColor=\"white\",\n    message=\"<center>STOP</center>\"\n  })\n  Megophrys.stopBtn:setFontSize(18)\n  if doin_stuff then\n    Megophrys.stopBtn:setStyleSheet([[\n      background-color: #444;\n      border-radius: 12px;\n      border: 4px outset #333;\n      font-weight: bold;\n    ]])\n  else\n    Megophrys.stopBtn:setStyleSheet([[\n      background-color: #222;\n      border-radius: 12px;\n      border: 4px inset #333;\n      font-weight: bold;\n    ]])\n  end\n  Megophrys.stopBtn:setClickCallback(\"Megophrys.eStopAuto\")\n\n  Megophrys.highlightPanicRoom()\nend\n\nMegophrys.updatePrepGauges = function()\n  if not Megophrys.topGauge then\n    Megophrys.topGauge = Geyser.Gauge:new({\n      name='topGauge',\n      x='50%', y=0,\n      width='7.5%', height='2%'\n    })\n  end\n  Megophrys.topGauge:setFontSize(11)\n  if not Megophrys.middleGauge then\n    Megophrys.middleGauge = Geyser.Gauge:new({\n      name='middleGauge',\n      x='50%', y='2%',\n      width='7.5%', height='2%'\n    })\n  end\n  Megophrys.middleGauge:setFontSize(11)\n  if not Megophrys.bottomGauge then\n    Megophrys.bottomGauge = Geyser.Gauge:new({\n      name='bottomGauge',\n      x='50%', y='4%',\n      width='7.5%', height='2%'\n    })\n  end\n  Megophrys.bottomGauge:setFontSize(11)\n  local targetLimb = (Megophrys.targetLimb or 'left')\n  local targetLimbSet = (Megophrys.targetLimbSet or 'leg')\n  local otherLimb = ''\n\n  if targetLimb == 'right' then\n    otherLimb = 'left'\n  else\n    otherLimb = 'right'\n  end\n\n  local topLabel = targetLimb:upper() ..' '.. targetLimbSet:upper()\n  local middleLabel = 'NONE'\n  local bottomLabel = ''\n  local targetLimbWounds = 0\n  local otherLimbWounds = 0\n  local targetOtherWounds = 0\n\n  if Megophrys.skipTorso then\n    if Megophrys.class == 'Magi' then\n      bottomLabel = 'TORSO*'\n    else\n      bottomLabel = 'HEAD'\n    end\n  else\n    bottomLabel = 'TORSO'\n  end\n\n  if lb[target] then\n    targetLimbWounds = lb[target].hits[targetLimb ..' '.. targetLimbSet]\n    otherLimbWounds = lb[target].hits[otherLimb ..' '.. targetLimbSet]\n    if Megophrys.class == 'Psion' then\n      targetOtherWounds = lb[target].hits.head\n    else\n      targetOtherWounds = lb[target].hits.torso\n    end\n  end\n  if Megophrys.dualPrep then\n    middleLabel = otherLimb:upper() ..' '.. targetLimbSet:upper()\n  end\n  Megophrys.topGauge:setValue(targetLimbWounds, 100, '<center>'.. topLabel ..'</center>')\n  Megophrys.middleGauge:setValue(otherLimbWounds, 100, '<center>'.. middleLabel ..'</center>')\n  Megophrys.bottomGauge:setValue(targetOtherWounds, 100, '<center>'.. bottomLabel ..'</center>')\nend\n\nMegophrys.updateWhatHere = function()\n  if gmcp.Char.Items.List.location ~= 'room' then return end\n  local win = \"Info Here\"\n  openUserWindow(win, true, false, \"f\")\n  setWindowWrap(win, 80)\n  setFontSize(win, 12)\n  clearWindow(win)\n\n  local infoHere = gmcp.Char.Items.List.items\n  if gmcp.Char.Items.Add.location == 'room' then\n    local found = false\n    for _, item in pairs(infoHere) do\n      if item.id == gmcp.Char.Items.Add.item.id then\n        found = true\n        break\n      end\n    end\n    if not found then\n      infoHere[#infoHere + 1] = gmcp.Char.Items.Add.item\n    end\n  end\n  if gmcp.Char.Items.Remove.location == 'room' then\n    for index, item in pairs(infoHere) do\n      if gmcp.Char.Items.Remove.item.id == item.id then\n        table.remove(infoHere, index)\n        break\n      end\n    end\n  end\n  if (gmcp.Char.Items.Update and\n      gmcp.Char.Items.Update.location == 'room') then\n    for index, item in pairs(infoHere) do\n      if gmcp.Char.Items.Update.item.id == item.id then\n        infoHere[index] = item\n        break\n      end\n    end\n  end\n\n  local guardCount = 0\n  for _, item in pairs(infoHere) do\n    local charName = (gmcp.Char and gmcp.Char.Name.name) or ''\n    local color = ''\n    local isMob = (item.attrib or ''):starts('m')\n    local isLoyal = (item.name or ''):ends(charName) or (\n                        (item.name or ''):ends('hippogriff') and\n                        (item.id == '506577' or item.id == '552688'))\n    local isHomeGuard = ((item.icon or '') == 'guard' and\n                         gmcp.Room.Info.area == 'Mhaldor')\n\n    if isLoyal then\n      if item.name == 'a diminutive homunculus resembling '.. charName then\n        Megophrys.homunculus = item.id\n      end\n      color = '<tomato>'\n    elseif item.icon == 'guard' then\n      guardCount = guardCount + 1\n      color = '<PaleTurquoise>'\n    elseif item.icon == 'container' or item.icon == 'magical' or item.icon == 'profile' then\n      color = '<goldenrod>'\n    elseif item.icon == 'rune' then\n      color = '<SteelBlue>'\n    elseif isMob then\n      color = '<orchid>'\n    end\n    cechoLink(win, color .. item.name,\n              function() send('p '.. item.id) end, tostring(item.id), true)\n    if isMob and not isLoyal and not isHomeGuard then\n      cechoLink(win, '\\n(set target)\\n', function() Megophrys.setTarget(item.id) end,\n                'Target '.. tostring(item.id), true)\n    else\n      echo(win, '\\n')\n    end\n  end\n\n  cecho(win, '\\n<PaleTurquoise>Number of guards: '.. tostring(guardCount))\n  cecho(win, '\\nNumber of objects: '.. tostring(#gmcp.Char.Items.List.items))\nend\n\nMegophrys.updateWhoHere = function()\n  if not Megophrys.whoHereTable then return end\n  local whoHereTable = '<b>Players Here:</b> '\n  for _, player in spairs(gmcp.Room.Players) do\n    whoHereTable = whoHereTable .. player.name\n    if _ ~= #gmcp.Room.Players then\n      whoHereTable = whoHereTable ..', '\n    end\n    if _ % 7 == 0 then\n      whoHereTable = whoHereTable ..'<br>'\n    end\n  end\n  Megophrys.whoHereTable:echo(whoHereTable)\nend\n\nMegophrys.updateWhosOnline = function(_, url, online)\n  local win = \"Who's Online (Achaea)\"\n  openUserWindow(win, true, false, \"f\")\n  setWindowWrap(win, 80)\n  setFontSize(win, 16)\n  clearWindow(win)\n\n  Megophrys.playerFullnames = {}\n  Megophrys.playersOnline = {}\n  local players = {}\n  for _, player in spairs(yajl.to_value(online).characters) do\n    local city = 'unknown'\n    if cdb.db and cdb.db[player.name] and cdb.db[player.name].city then\n      city = cdb.db[player.name].city\n      Megophrys.playerFullnames[player.name] = cdb.db[player.name].fullname\n    else\n      Megophrys.playerFullnames[player.name] = player.name\n    end\n    if not players[city] then players[city] = {} end\n    players[city][#players[city] + 1] = player.name\n    Megophrys.playersOnline[#Megophrys.playersOnline + 1] = player.name\n  end\n\n  for _, city in spairs({'targossas', 'ashtan', 'mhaldor', 'eleusis',\n                         'cyrene', 'hashan', '(none)', 'unknown'}) do\n    local color = 'DeepSkyBlue'\n    if city == 'tent' then color = 'khaki' end\n    if cdb.styles[city] then color = cdb.styles[city].color end\n    local cityTitle = city:title()\n    if city == '(none)' then cityTitle = 'Rogue' end\n    if city == 'unknown' then cityTitle = 'Anonz' end\n    cechoLink(win, '<'.. color ..'>'.. cityTitle,\n              function() send('qw '.. city) end,\n              table.concat(players[city] or {}, ', '), true)\n    cecho(win, ' ('.. tostring(#(players[city] or {})) ..')')\n    if (city == 'targossas' or city == 'ashtan'\n            or city == 'mhaldor' or city == 'eleusis') then\n      cecho(win, '\\n')\n      table.sort(players[city] or {})\n      for _, name in spairs(players[city] or {}) do\n        if cdb.db[name] and tonumber(cdb.db[name].level) > 69 then\n          cechoLink(win, '<'.. color ..'>'.. name ..' ',\n                    function() expandAlias('wi '.. name) end,\n                    Megophrys.playerFullnames[name], true)\n        end\n      end\n      cecho(win, '\\n\\n')\n    else\n      cecho(win, ' ')\n    end\n  end\n  if #(players.unknown or {}) > 0 then expandAlias('qwg') end\n  cecho(win, tostring(#Megophrys.playersOnline) ..' Total.')\nend\n",
    "eventHandlerList": null
}