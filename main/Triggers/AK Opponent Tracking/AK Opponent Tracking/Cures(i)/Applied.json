{
    "attribs": {
        "isActive": "yes",
        "isFolder": "no",
        "isTempTrigger": "no",
        "isMultiline": "no",
        "isPerlSlashGOption": "no",
        "isColorizerTrigger": "no",
        "isFilterTrigger": "no",
        "isSoundTrigger": "no",
        "isColorTrigger": "no",
        "isColorTriggerFg": "no",
        "isColorTriggerBg": "no"
    },
    "type": "trigger",
    "name": "Applied",
    "script": "if ak.ai() then return end\n\nif ak.limbs.shikudoParse then\n  ak.limbs.shikudoParse()\nend\n\nif not IsTargetted(matches[2]) then return end\nif matches[3] == \"skin\" and not ak.defs.mass then \n   ak.defs.mass = true\n\t ak.bals.salve = true\n   cecho(\"<cyan>Mass Consideration Removed\") \nelseif ak.bals.salve then\n\tif affstrack.score.aeon == 100 and affstrack.score.slickness == 100 then\n\t   return\n\telse \n\t   affstrack.score.tempslickness= 0\n\t   ak.bals.salve = false\n\t   if affstrack.score.slickness>0 then \n\t      if ak.thoughtIhad then \n\t\t\t\t\tak.thoughtIhad(\"slickness\") \n\t\t\t\telse \n\t\t\t\t\taffstrack.score.slickness = 0 \n\t\t\t\tend  \n\t   end\n\t   ak.cure.apply(matches[3]) \t\t\n\t\t if ak.timers.apply then\t\t\t\n\t\t \tkillTimer(ak.timers.apply)\t\t\n\t\t end\n\t   ak.timers.apply = tempTimer(.8,[[ak.bals.salve = true;ak.timers.apply = false]])\n\t   --cecho(\"<cyan>Processed Cures\")\n\tend\nelse\n\tif ak.timers.apply then \n\t\tak.bals.salve = true\n\t\tcecho(\"<cyan>Ignored Cures\")\n\tend\nend\n",
    "triggerType": "0",
    "conditonLineDelta": "0",
    "mStayOpen": "0",
    "mCommand": null,
    "packageName": null,
    "mFgColor": "#ff0000",
    "mBgColor": "#0000ff",
    "mSoundFile": null,
    "colorTriggerFgColor": "#000000",
    "colorTriggerBgColor": "#000000",
    "regexCodeList": "\n\t\t\t\t\t\t\t",
    "regexCodePropertyList": "\n\t\t\t\t\t\t\t",
    "matches": [
        [
            "^([\\w'\\-]+) takes some (?:balm|salve) from a vial and rubs it on (?:her|his) ([\\w'\\-]+).$",
            "1"
        ]
    ]
}