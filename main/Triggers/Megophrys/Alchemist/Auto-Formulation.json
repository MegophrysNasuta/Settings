{
    "attribs": {
        "isActive": "yes",
        "isFolder": "no",
        "isTempTrigger": "no",
        "isMultiline": "no",
        "isPerlSlashGOption": "no",
        "isColorizerTrigger": "no",
        "isFilterTrigger": "no",
        "isSoundTrigger": "no",
        "isColorTrigger": "no",
        "isColorTriggerFg": "no",
        "isColorTriggerBg": "no"
    },
    "type": "trigger",
    "name": "Auto-Formulation",
    "script": "local targetPotency = 1\nlocal targetStability = 1\nlocal targetVolatility = 1\n\nif (matches[3] == \"Incendiary\" or matches[3] == \"Devitalisation\" or\n    matches[3] == \"Intoxicant\" or matches[3] == \"Monoxide\" or\n    matches[3] == \"Toxin\") then\n  targetPotency = 2\n  targetVolatility = 5\nelseif matches[3] == \"Nutritional\" or matches[3] == \"Vaporisation\" then\n  targetPotency = 5\n  targetStability = 2\nelseif matches[3] == \"Enhancement\" then\n  targetPotency = 3\n  targetStability = 4\nend\n\nlocal actualPotency = tonumber(matches[4])\nlocal actualVolatility = tonumber(matches[5])\nlocal actualStability = tonumber(matches[6])\n\nfor i=actualPotency - 1, targetPotency, -1 do\n  send('dilute potency of '.. matches[2])\nend\n\nfor i=actualVolatility - 1, targetVolatility, -1 do\n  send('dilute volatility of '.. matches[2])\nend\n\nfor i=actualStability - 1, targetStability, -1 do\n  send('dilute stability of '.. matches[2])\nend\n\nfor i=actualPotency + 1, targetPotency do\n  send('enhance potency of '.. matches[2])\nend\n\nfor i=actualVolatility + 1, targetVolatility do\n  send('enhance volatility of '.. matches[2])\nend\n\nfor i=actualStability + 1, targetStability do\n  send('enhance stability of '.. matches[2])\nend",
    "triggerType": "0",
    "conditonLineDelta": "0",
    "mStayOpen": "0",
    "mCommand": null,
    "packageName": null,
    "mFgColor": "#ff0000",
    "mBgColor": "#ffff00",
    "mSoundFile": null,
    "colorTriggerFgColor": "#000000",
    "colorTriggerBgColor": "#000000",
    "regexCodeList": "\n\t\t\t\t\t\t",
    "regexCodePropertyList": "\n\t\t\t\t\t\t",
    "matches": [
        [
            "^Phial(\\d+)\\s+(\\w+)\\s+\\d+\\s+(\\d)\\s+(\\d)\\s+(\\d)$",
            "1"
        ]
    ]
}