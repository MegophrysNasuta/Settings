{
    "attribs": {
        "isActive": "yes",
        "isFolder": "no"
    },
    "type": "script",
    "name": "Blademaster",
    "packageName": null,
    "script": "Megophrys.Blademaster = (Megophrys.Blademaster or {})\nlocal Blademaster = Megophrys.Blademaster\n\nBlademaster.stances = {\n  earth = 'Doya',\n  fire = 'Arash',\n  air = 'Thyr',\n  water = 'Mir',\n  void = 'Sanya',\n}\n\nBlademaster.doSpecial = function() send('leap high') end\n\nMegophrys.Blademaster.makeClassToolbars = function()\n  Megophrys.bmToolbar = Geyser.Container:new({\n    name='bm_toolbar',\n    x=270, y=0, width=270, height=60\n  })\n\n  Blademaster.stanceLabel = Geyser.Label:new({\n    name='stance_label',\n    x=0, y=0, width=100, height=20,\n    message='Stance:'\n  }, Megophrys.bmToolbar)\n  Blademaster.stanceLabel:setFontSize(11)\n  Blademaster.earthButton = Geyser.Label:new({\n    name='earth_button',\n    x=100, y=0, width=34, height=20,\n  }, Megophrys.bmToolbar)\n  Blademaster.earthButton:setFontSize(11)\n  Blademaster.fireButton = Geyser.Label:new({\n    name='fire_button',\n    x=134, y=0, width=34, height=20,\n  }, Megophrys.bmToolbar)\n  Blademaster.fireButton:setFontSize(11)\n  Blademaster.airButton = Geyser.Label:new({\n    name='air_button',\n    x=168, y=0, width=34, height=20,\n  }, Megophrys.bmToolbar)\n  Blademaster.airButton:setFontSize(11)\n  Blademaster.waterButton = Geyser.Label:new({\n    name='water_button',\n    x=202, y=0, width=34, height=20,\n  }, Megophrys.bmToolbar)\n  Blademaster.waterButton:setFontSize(11)\n  Blademaster.voidButton = Geyser.Label:new({\n    name='void_button',\n    x=236, y=0, width=34, height=20,\n  }, Megophrys.bmToolbar)\n  Blademaster.voidButton:setFontSize(11)\n\n  Blademaster.nextStrikeLabel = Geyser.Label:new({\n    name='next_strike_label',\n    x=0, y=20, width=100, height=20,\n    message='Strike:'\n  }, Megophrys.bmToolbar)\n  Blademaster.nextStrikeLabel:setFontSize(11)\n  Blademaster.nextStrikeButton = Geyser.Label:new({\n    name='next_strike_',\n    x=100, y=20, width=170, height=20,\n  }, Megophrys.bmToolbar)\n  Blademaster.nextStrikeButton:setFontSize(11)\n\n  Blademaster.infuseElemLabel = Geyser.Label:new({\n    name='infuse_elem_label',\n    x=0, y=40, width=100, height=20,\n    message='Infuse:'\n  }, Megophrys.bmToolbar)\n  Blademaster.infuseElemLabel:setFontSize(11)\n  Blademaster.infuseEarthButton = Geyser.Label:new({\n    name='infuse_earth_button',\n    x=100, y=40, width=34, height=20,\n  }, Megophrys.bmToolbar)\n  Blademaster.infuseEarthButton:setFontSize(11)\n  Blademaster.infuseFireButton = Geyser.Label:new({\n    name='infuse_fire_button',\n    x=134, y=40, width=34, height=20,\n  }, Megophrys.bmToolbar)\n  Blademaster.infuseFireButton:setFontSize(11)\n  Blademaster.infuseAirButton = Geyser.Label:new({\n    name='infuse_air_button',\n    x=168, y=40, width=34, height=20,\n  }, Megophrys.bmToolbar)\n  Blademaster.infuseAirButton:setFontSize(11)\n  Blademaster.infuseWaterButton = Geyser.Label:new({\n    name='infuse_water_button',\n    x=202, y=40, width=34, height=20,\n  }, Megophrys.bmToolbar)\n  Blademaster.infuseWaterButton:setFontSize(11)\n  Blademaster.infuseVoidButton = Geyser.Label:new({\n    name='infuse_void_button',\n    x=236, y=40, width=34, height=20,\n  }, Megophrys.bmToolbar)\n  Blademaster.infuseVoidButton:setFontSize(11)\nend\n\nMegophrys.Blademaster.onConnect = function()\n  wsys.setSettings('automount', 'off')\n  mmp.settings:setOption('gallop', false)\n  mmp.settings:setOption('dash', true)\n  sendAll(\n    'unwield all',\n    'remove armour',\n    'put armour in pack370332',\n    'get scalemail from pack370332'\n  )\n  tempTimer(3, Megophrys.Blademaster.gearUp)\nend\n\nMegophrys.Blademaster.gearUp = function()\n  send('wear scalemail')\nend\n\nMegophrys.Blademaster.setNextStrike = function(strikeTarget)\n  Blademaster.nextStrike = tostring(strikeTarget):lower()\n  Blademaster.nextStrikeButton:echo(' '.. Blademaster.nextStrike:title())\nend\n\nMegophrys.Blademaster.nextAttack = function()\n  local killStrat = Megophrys.killStrat\n  local setNextAttack = 'setalias nextAttack '\n  local infuseElem = Blademaster.infuseElem\n  local nextSlash = nil\n  local tarAff = affstrack.score\n\n  if not wsys.aff.stupidity then\n    setNextAttack = setNextAttack .. 'stand / '\n  end\n\n  if infuseElem == 'water' then\n    infuseElem = 'ice'\n  elseif infuseElem == 'air' then\n    infuseElem = 'lightning'\n  end\n\n  if killStrat ~= 'denizen' and infuseElem then\n    setNextAttack = setNextAttack ..'infuse '.. infuseElem .. ' / '\n  end\n\n  if killStrat == 'denizen' then\n    setNextAttack = setNextAttack .. 'leapstrike &tar / spinslash &tar / '\n    nextSlash = 'drawslash'\n  elseif killStrat == 'raid' then\n    nextSlash = 'balanceslash'\n  else\n    local prepStatus = Megophrys.nextLimbPrepAttack('impale', 65)\n    local targetLimb = prepStatus.targetLimb\n    local targetTorso = prepStatus.targetTorso\n    local targetSide = nil\n    Megophrys.nextMoveButton:echo('Staffstrike', Megophrys.fgColors[killStrat], 'c')\n\n    if Megophrys.killPreConditionsMet and tarAff[\"impaled\"] < 80 then\n      sendAll('clearqueue all', 'impale '.. target)\n      Megophrys.killPreConditionsMet = false\n      Megophrys.nextMoveButton:echo('Impslash', Megophrys.fgColors[killStrat], 'c')\n      return\n    elseif Blademaster.targetImpaled then\n      -- kill condition met: twist until brokenstar\n      Megophrys.priorityLabel:echo('<center>Priority: BLADETWIST</center>')\n      Megophrys.nextMoveButton:echo('Bladetwist', Megophrys.fgColors[killStrat], 'c')\n      if (ak.bleeding or 0) > 699 then\n        sendAll('clearqueue all', 'brokenstar '.. target)\n      elseif tarAff[\"impaleslash\"] < 80 then\n        sendAll('clearqueue all', 'impaleslash')\n      else\n        sendAll('clearqueue all', 'bladetwist')\n      end\n    else\n      nextSlash = (Megophrys.targetLimbSet or 'leg'):lower() ..'slash'\n      targetSide = targetLimb\n    end\n\n  end\n\n  if killStrat ~= 'denizen' then\n    if prepStatus.prepConditionsMet then\n      Blademaster.setNextStrike('knee')\n    elseif (targetAffs.hamstring or 0) < 90 then\n      Blademaster.setNextStrike('hamstring')\n    elseif (targetAffs.paralyzed or 0) < 90 then\n      Blademaster.setNextStrike('neck')\n    else\n      Blademaster.setNextStrike('sternum')\n    end\n  end\n\n  if nextSlash then\n    Megophrys.nextMoveButton:echo(nextSlash:title(), Megophrys.fgColors[killStrat], 'c')\n    setNextAttack = setNextAttack .. nextSlash ..' &tar'\n    if targetSide then\n      setNextAttack = setNextAttack .. targetSide\n    end\n  end\n\n  if Blademaster.nextStrike then\n    setNextAttack = setNextAttack ..' / strike &tar '.. Blademaster.nextStrike\n  end\n\n  sendAll(setNextAttack, 'queue addclear eqbal nextAttack')\nend\n\nBlademaster.resetElementButtonStyles = function()\n  Blademaster.earthButton:echo('Ea', 'white', 'c')\n  Blademaster.fireButton:echo('Fi', 'white', 'c')\n  Blademaster.airButton:echo('Ai', 'white', 'c')\n  Blademaster.waterButton:echo('Wa', 'white', 'c')\n  Blademaster.voidButton:echo('Vo', 'white', 'c')\nend\n\nBlademaster.resetInfuseElementButtonStyles = function()\n  Blademaster.infuseEarthButton:echo('Ea', 'white', 'c')\n  Blademaster.infuseFireButton:echo('Fi', 'white', 'c')\n  Blademaster.infuseAirButton:echo('Ai', 'white', 'c')\n  Blademaster.infuseWaterButton:echo('Wa', 'white', 'c')\n  Blademaster.infuseVoidButton:echo('Vo', 'white', 'c')\nend\n\nBlademaster.setElement = function(element, reason, infuse)\n  local elem = tostring(element):lower()\n  if not elem then return end\n  local elem_for = nil\n\n  local getButtonByElement = function(elem, infuseVersion)\n    if not elem then return end\n    local button = nil\n    local ibutton = nil\n    if elem == 'earth' then\n      button = Blademaster.earthButton\n      ibutton = Blademaster.infuseEarthButton\n    elseif elem == 'fire' then\n      button = Blademaster.fireButton\n      ibutton = Blademaster.infuseFireButton\n    elseif elem == 'air' then\n      button = Blademaster.airButton\n      ibutton = Blademaster.infuseAirButton\n    elseif elem == 'water' then\n      button = Blademaster.waterButton\n      ibutton = Blademaster.infuseWaterButton\n    elseif elem == 'void' then\n      button = Blademaster.voidButton\n      ibutton = Blademaster.infuseVoidButton\n    else\n      cecho('\\n<red>Unknown element: '.. elem ..' (ignored)\\n')\n    end\n\n    if infuseVersion then\n      return ibutton\n    else\n      return button\n    end\n  end\n\n  if infuse then\n    Blademaster.infuseElem = elem\n    elem_for = 'infuse'\n  else\n    Blademaster.element = elem\n    elem_for = 'stance'\n    send(Blademaster.stances[Blademaster.element])\n  end\n\n  local button = getButtonByElement(Blademaster.element, false)\n  local ibutton = getButtonByElement(Blademaster.infuseElem, true)\n  Blademaster.resetElementButtonStyles()\n  Blademaster.resetInfuseElementButtonStyles()\n  if ibutton then\n    ibutton:echo(string.title(string.sub(Blademaster.infuseElem, 1, 2)),\n                 Megophrys.fgColors[Megophrys.killStrat], 'c')\n  end\n  if button then\n    button:echo(string.title(string.sub(Blademaster.element, 1, 2)),\n                Megophrys.fgColors[Megophrys.killStrat], 'c')\n  end\n\n  if reason then\n    cecho('\\n<cyan>Element for '.. elem_for ..' set to: '.. elem ..' ('.. reason ..')\\n')\n  else\n    cecho('\\n<cyan>Element for '.. elem_for ..' set to: '.. elem ..'\\n')\n  end\nend\n\nMegophrys.Blademaster.setMode = function()\n  local killStrat = Megophrys.killStrat\n\n  Megophrys.specialMoveButton:echo(\n    'Leap High',\n    Megophrys.fgColors[killStrat],\n    'c'\n  )\n\n  if killStrat == 'denizen' then\n    Megophrys.nextMoveButton:echo('Drawslash', Megophrys.fgColors[killStrat], 'c')\n    Blademaster.setElement('fire')\n    Blademaster.setElement('fire', nil, true)\n    cecho('\\n<cyan>Auto-attacks will be drawslashes'..\n          '\\nElement: '.. Blademaster.element ..\n          '\\nInfusing: '.. Blademaster.infuseElem ..\n          '\\nTarget is: '.. target ..'\\n')\n  elseif killStrat == 'raid' then\n    Megophrys.nextMoveButton:echo('Balanceslash', Megophrys.fgColors[killStrat], 'c')\n    Blademaster.setElement('void')\n    Blademaster.setElement('void', nil, true)\n    Blademaster.setNextStrike('hamstring')\n    cecho('\\n<cyan>Auto-attacks will be balanceslashes'..\n          '\\nElement: '.. Blademaster.element ..\n          '\\nInfusing: '.. Blademaster.infuseElem ..\n          '\\nTarget is: '.. target ..'\\n')\n  elseif killStrat == 'bstar' then\n    Megophrys.nextMoveButton:echo('Limbslash', Megophrys.fgColors[killStrat], 'c')\n    cecho('\\n<cyan>BM PvP (Brokenstar) mode activated!')\n\n    Megophrys.targetTorso = false\n    Megophrys.resetTargetWounds()\n    Blademaster.setElement('void')\n    Blademaster.setElement('void', nil, true)\n    Blademaster.setNextStrike('hamstring')\n\n    cecho('\\n<cyan>Auto-attacks will be limbslashes'..\n          '\\nElement: '.. Blademaster.element ..\n          '\\nInfusing: '.. Blademaster.infuseElem ..\n          '\\nTarget is: '.. target ..\n          '\\n  on limb: '.. Megophrys.targetLimb)\n  end\nend\n\nMegophrys.Blademaster.subMode = function(n, altMode)\n  if n == 1 then\n    Blademaster.setElement('earth', nil, altMode)\n  elseif n == 2 then\n    Blademaster.setElement('fire', nil, altMode)\n  elseif n == 3 then\n    Blademaster.setElement('air', nil, altMode)\n  elseif n == 4 then\n    Blademaster.setElement('water', nil, altMode)\n  else\n    error('Bad sub mode: '.. n ..'!')\n  end\nend\n\nMegophrys.Blademaster.toggleOne = function(altMode)\n  Blademaster.setElement('void', nil, altMode)\nend\nMegophrys.Blademaster.toggleOneLabel = 'Set primary element to VOID'\n",
    "eventHandlerList": null
}