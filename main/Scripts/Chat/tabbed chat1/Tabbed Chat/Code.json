{
    "attribs": {
        "isActive": "yes",
        "isFolder": "no"
    },
    "type": "script",
    "name": "Code",
    "packageName": null,
    "script": "--[[\nIf the label callbacks ever decide to start taking a function which is part of a table, 0then this will change.\nOr if it's modified to take actual functions. Anonymouse function clickcallback would be awfully nice.\n]]\n\nfunction demonnicChatSwitch(chat)\n  local r = demonnic.chat.config.inactiveColors.r\n  local g = demonnic.chat.config.inactiveColors.g\n  local b = demonnic.chat.config.inactiveColors.b\n  local newr = demonnic.chat.config.activeColors.r\n  local newg = demonnic.chat.config.activeColors.g\n  local newb = demonnic.chat.config.activeColors.b\n  local oldchat = demonnic.chat.currentTab\n  if demonnic.chat.currentTab ~= chat then\n    demonnic.chat.windows[oldchat]:hide()\n    demonnic.chat.tabs[oldchat]:setColor(r,g,b)\n    demonnic.chat.tabs[oldchat]:echo(oldchat, demonnic.chat.config.inactiveTabText, \"c\")\n    if demonnic.chat.config.blink and demonnic.chat.tabsToBlink[chat] then\n      demonnic.chat.tabsToBlink[chat] = nil\n    end\n    if demonnic.chat.config.blink and chat == demonnic.chat.config.Alltab then\n      demonnic.chat.tabsToBlink = {}\n    end\n  end\n  demonnic.chat.tabs[chat]:setColor(newr,newg,newb)\n  demonnic.chat.tabs[chat]:echo(chat, demonnic.chat.config.activeTabText, \"c\")\n  demonnic.chat.windows[chat]:show()\n  demonnic.chat.currentTab = chat  \nend\n\nfunction demonnic.chat:resetUI()\n  demonnic.chat.container = Geyser.Container:new(demonnic.chat[demonnic.chat.config.location]())\n  demonnic.chat.tabBox = Geyser.HBox:new({\n    x=0,\n    y=0,\n    width = \"100%\",\n    height = \"25px\",\n    name = \"DemonChatTabs\",\n  },demonnic.chat.container)\n\nend\n\nfunction demonnic.chat:create()\n  --reset the UI\n  demonnic.chat:resetUI()\n  --Set some variables locally to increase readability\n  local r = demonnic.chat.config.inactiveColors.r\n  local g = demonnic.chat.config.inactiveColors.g\n  local b = demonnic.chat.config.inactiveColors.b\n  local winr = demonnic.chat.config.windowColors.r\n  local wing = demonnic.chat.config.windowColors.g\n  local winb = demonnic.chat.config.windowColors.b\n\n  --iterate the table of channels and create some windows and tabs\n  for i,tab in ipairs(demonnic.chat.config.channels) do\n    demonnic.chat.tabs[tab] = Geyser.Label:new({\n      name=string.format(\"tab%s\", tab),\n    }, demonnic.chat.tabBox)\n    demonnic.chat.tabs[tab]:echo(tab, demonnic.chat.config.inactiveTabText, \"c\")\n    demonnic.chat.tabs[tab]:setColor(r,g,b)\n    demonnic.chat.tabs[tab]:setClickCallback(\"demonnicChatSwitch\", tab)\n    demonnic.chat.windows[tab] = Geyser.MiniConsole:new({\n--      fontSize = demonnic.chat.config.fontSize,\n      x = 0,\n      y = 25,\n      height = \"100%\",\n      width = \"100%\",\n      name = string.format(\"win%s\", tab),\n    }, demonnic.chat.container)\n    demonnic.chat.windows[tab]:setFontSize(demonnic.chat.config.fontSize)\n    demonnic.chat.windows[tab]:setColor(winr,wing,winb)\n    demonnic.chat.windows[tab]:setWrap(demonnic.chat.config.width)\n    demonnic.chat.windows[tab]:hide()\n  end\n  local showme = demonnic.chat.config.Alltab or demonnic.chat.config.channels[1]\n  demonnicChatSwitch(showme)\n  --start the blink timers, if enabled\n  if demonnic.chat.config.blink and not demonnic.chat.blinkTimerOn then\n    demonnic.chat:blink()\n  end\nend\n\nfunction demonnic.chat:append(chat)\n  local r = demonnic.chat.config.windowColors.r\n  local g = demonnic.chat.config.windowColors.g\n  local b = demonnic.chat.config.windowColors.b\n  selectCurrentLine()\n  local ofr,ofg,ofb = getFgColor()\n  local obr,obg,obb = getBgColor()\n  if demonnic.chat.config.preserveBackground then\n    setBgColor(r,g,b)\n  end\n  copy()\n  if demonnic.chat.config.timestamp then\n    local timestamp = getTime(true, demonnic.chat.config.timestamp)\n    local tsfg = {}\n    local tsbg = {}\n    local colorLeader = \"\"\n    if demonnic.chat.config.timestampCustomColor then\n      if type(demonnic.chat.config.timestampFG) == \"string\" then\n        tsfg = color_table[demonnic.chat.config.timestampFG]\n      else\n        tsfg = demonnic.chat.config.timestampFG\n      end\n      if type(demonnic.chat.config.timestampBG) == \"string\" then\n        tsbg = color_table[demonnic.chat.config.timestampBG]\n      else\n        tsbg = demonnic.chat.config.timestampBG\n      end\n      colorLeader = string.format(\"<%s,%s,%s:%s,%s,%s>\",tsfg[1],tsfg[2],tsfg[3],tsbg[1],tsbg[2],tsbg[3])\n    else\n      colorLeader = string.format(\"<%s,%s,%s:%s,%s,%s>\",ofr,ofg,ofb,obr,obg,obb)\n    end\n    local fullstamp = string.format(\"%s%s\",colorLeader,timestamp)\n      demonnic.chat.windows[chat]:decho(fullstamp)\n      demonnic.chat.windows[chat]:echo(\" \")\n      if demonnic.chat.config.Alltab then \n        demonnic.chat.windows[demonnic.chat.config.Alltab]:decho(fullstamp)\n        demonnic.chat.windows[demonnic.chat.config.Alltab]:echo(\" \")\n      end\n  end\n  demonnic.chat.windows[chat]:append()\n  if demonnic.chat.config.gag then \n    deleteLine() \n    tempLineTrigger(1,1, [[if isPrompt() then deleteLine() end]])\n  end\n  if demonnic.chat.config.Alltab then appendBuffer(string.format(\"win%s\", demonnic.chat.config.Alltab)) end\n  if demonnic.chat.config.blink and chat ~= demonnic.chat.currentTab then \n    if (demonnic.chat.config.Alltab == demonnic.chat.currentTab) and not demonnic.chat.config.blinkOnAll then\n      return\n    else\n      demonnic.chat.tabsToBlink[chat] = true\n    end\n  end\nend\n\n\n\nfunction demonnic.chat:blink()\n  if demonnic.chat.blinkID then killTimer(demonnic.chat.blinkID) end\n  if not demonnic.chat.config.blink then \n    demonnic.chat.blinkTimerOn = false\n    return \n  end\n  for tab,_ in pairs(demonnic.chat.tabsToBlink) do\n    demonnic.chat.tabs[tab]:flash()\n  end\n  demonnic.chat.blinkID = tempTimer(demonnic.chat.config.blinkTime, function () demonnic.chat:blink() end)\nend\n\nfunction demonnic.chat:topright()\n  return {\n    fontSize = demonnic.chat.config.fontSize,\n    x=string.format(\"-%sc\",demonnic.chat.config.width + 2),\n    y=0,\n    width=\"-15px\",\n    height=string.format(\"%ic\", demonnic.chat.config.lines + 2),\n  }\nend\n\nfunction demonnic.chat:topleft()\n  return {\n    fontSize = demonnic.chat.config.fontSize,\n    x=0,\n    y=0,\n    width=string.format(\"%sc\",demonnic.chat.config.width),\n    height=string.format(\"%ic\", demonnic.chat.config.lines + 2),\n  }\nend\n\nfunction demonnic.chat:bottomright()\n  return {\n    fontSize = demonnic.chat.config.fontSize,\n    x=string.format(\"-%sc\",demonnic.chat.config.width + 2),\n    y=string.format(\"-%sc\",demonnic.chat.config.lines + 2),\n    width=\"-15px\",\n    height=string.format(\"%ic\", demonnic.chat.config.lines + 2),\n  }\nend\n\nfunction demonnic.chat:bottomleft()\n  return {\n    fontSize = demonnic.chat.config.fontSize,\n    x=0,\n    y=string.format(\"-%sc\",demonnic.chat.config.lines + 2),\n    width=string.format(\"%sc\",demonnic.chat.config.width),\n    height=string.format(\"%ic\", demonnic.chat.config.lines + 2),\n  }\nend",
    "eventHandlerList": null
}