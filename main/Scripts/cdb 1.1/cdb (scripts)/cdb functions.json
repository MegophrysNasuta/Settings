{
    "attribs": {
        "isActive": "yes",
        "isFolder": "no"
    },
    "type": "script",
    "name": "cdb functions",
    "packageName": null,
    "script": "cdb = cdb or {}\ncdb.db = cdb.db or {}\ncdb.honors = {}\ncdb.lights = cdb.lights or {}\ncdb.enemies = cdb.enemies or {}\n\n-- \n--  CDB - A lightweight, easy to use character database. By Romaen.\n-- \n--  If you encounter problems, send me an OOC message in game or ping me on discord, theo#7545\n--\n\nfunction cdb.echo(str)\n  cecho(\"<DimGrey>(<grey>cdb<DimGrey>): <white>\" .. str .. \"\\n\")\nend\n\nfunction cdb.warn(str)\n  cecho(\"<chocolate>(cdb <orange>warning<chocolate>): <white>\" .. str .. \"\\n\")\nend\n\nfunction cdb.error(str)\n  cecho(\"<firebrick>(cdb <red>error<firebrick>): <white>\" .. str .. \"\\n\")\nend\n\nfunction cdb.lookup(name)\n  name = name:lower():title()\n  downloadFile(getMudletHomeDir() .. \"/temp.json\", \"https:\\/\\/api.achaea.com\\/characters\\/\" .. name:lower() .. \".json\")\nend\n\nfunction cdb.onConnect()\n  cdb.echo(\"Initialised.\")\n  cdb.highlights()\nend\n\nregisterAnonymousEventHandler(\"sysConnectionEvent\", \"cdb.onConnect\")\n\nfunction cdb.getwho()\n  downloadFile(getMudletHomeDir() .. \"/who.json\", \"http:\\/\\/api.achaea.com\\/characters.json\")\nend\n\nfunction cdb.gotinfo(ev, ar)\n  if ev ~= \"sysDownloadDone\" then return end\n  if ar:match(\"temp%.json\") then\n    local f, s = io.open(getMudletHomeDir() .. \"/temp.json\")\n    if f then \n      s = f:read(\"*l\"):trim()\n      io.close(f)\n    else\n      cdb.error(\"Retrieving data failed.\")\n    end\n    local t = yajl.to_value(s)\n    if cdb.db[t.name] and cdb.db[t.name] ~= \"(hidden)\" and t.city == \"(hidden)\" then\n      t.city = cdb.db[t.name].city\n    end\n    cdb.db[t.name] = t\n    if cdb.last and t.name == cdb.last then\n      cdb.echo(\"<green>Finished <white>getting information for all online players.\")\n      cdb.last = nil\n      cdb.save()\n      cdb.anons()\n    elseif cdb.classing then\n      cdb.echo(t.name .. \"'s current class is <cyan>\" .. t.class .. \".\")\n      cdb.classing = nil\n      cdb.save()\n    elseif cdb.looking then\n      cdb.echo(\"Data retrieved.\")\n      cdb.save()\n      cdb.looking = nil\n    elseif not cdb.last then\n      cdb.save()\n    end\n    cdb.addhighlight(t.name)\n  elseif ar:match(\"who%.json\") then\n    local f, s = io.open(getMudletHomeDir() .. \"/who.json\")\n    if f then \n      s = f:read(\"*l\"):trim()\n      io.close(f)\n    end\n    local t = yajl.to_value(s)\n    for _, v in pairs(t.characters) do\n      if cdb.gettingmembers then\n        if cdb.db[v.name] and cdb.db[v.name].class == cdb.gettingmembers then\n          cdb.members[#cdb.members+1] = v.name\n        end\n      else\n        cdb.lookup(v.name)\n        cdb.last = v.name\n      end\n    end\n    if cdb.gettingmembers then\n      local t = \"\"\n      if #cdb.members == 0 then t = \"<DarkSlateGrey>(none)\" else t = table.concat(cdb.members, \", \") end\n      cdb.echo(\"Online members of <yellow>\"..cdb.gettingmembers..\"<white> class:\\n  <cyan>\" .. t .. \".\")\n      cdb.gettingmembers = nil\n      cdb.members = {}\n    end\n  end\nend\nregisterAnonymousEventHandler(\"sysDownloadDone\", \"cdb.gotinfo\")\n\nfunction cdb.getmembers(class)\n  cdb.gettingmembers = class\n  cdb.members = {}\n  cdb.getwho()\nend\n\n\nfunction cdb.display(name, prompt)\n  name = name:lower():title()\n  if cdb.db[name] then\n    local t = cdb.db[name]\n    local x = #t.fullname\n    local f = \"\"\n    if x < 50 then x, f = 50, string.rep(\" \", 50 - x) end\n    cecho(\"<smoke>\u256d\" .. string.rep(\"\u2500\", x + 16) .. \"\u256e\\n\")\n    cecho(\"<smoke>\u2502  \u2554\u2550\u2550\u2550\u2550\u2550\u2557    \" .. string.rep(\" \", x) .. \"   \u2502\\n\")\n    cecho(\"<smoke>\u2502  \u2551 <obs>CDB <smoke>\u2551  <yellow>\\\"\" .. t.fullname .. \".\\\"  \" .. f .. \"<smoke>\u2502\\n\")\n    cecho(\"<smoke>\u2502  \u255a\u2550\u2550\u2566\u2550\u2550\u255d    \" .. string.rep(\" \", x) .. \"   \u2502\\n\")\n    cecho(\"<smoke>\u255e\u2550\u2550\u2550\u2550\u2550\u2569\u2550\u2550\u2550\u2550\u2550\u2550\u2550\" .. string.rep(\"\u2550\", x) .. \"\u2550\u2550\u2550\u2561\\n\")\n    if cdb.db[name].level == \"\" then\n      cecho(\"<smoke>\u2502\" .. string.rep(\" \", x + 16) .. \"\u2502\\n\")\n      cecho(\"<smoke>\u2502            <cyan>Divine.\" .. string.rep(\" \", x-3) .. \"<smoke>\u2502\\n\")\n      cecho(\"<smoke>\u2502\" .. string.rep(\" \", x + 16) .. \"\u2502\\n\")\n      cecho(\"<smoke>\u2570\" .. string.rep(\"\u2500\", x + 16) .. \"\u256f\\n\")\n    else\n      cecho(\"<smoke>\u2502          <obs>city: <white>\" .. t.city:title() .. string.rep(\" \", x - #t.city) .. \"<smoke>\u2502\\n\")\n      cecho(\"<smoke>\u2502         <obs>house: <white>\" .. t.house:title() .. string.rep(\" \", x - #t.house) .. \"<smoke>\u2502\\n\")\n      cecho(\"<smoke>\u2502         <obs>class: <white>\" .. t.class:title() .. string.rep(\" \", x - #t.class) .. \"<smoke>\u2502\\n\")\n      cecho(\"<smoke>\u2502         <obs>level: <white>\" .. t.level .. string.rep(\" \", x - #t.level) .. \"<smoke>\u2502\\n\")\n      cecho(\"<smoke>\u2502           <obs>pks: <white>\" .. t.player_kills .. string.rep(\" \", x - #t.player_kills) .. \"<smoke>\u2502\\n\")\n      cecho(\"<smoke>\u2502          <obs>mobs: <white>\" .. t.mob_kills .. string.rep(\" \", x - #t.mob_kills) .. \"<smoke>\u2502\\n\")\n      cecho(\"<smoke>\u2570\" .. string.rep(\"\u2500\", x + 16) .. \"\u256f\\n\")\n    end\n    cdb.save()\n  else\n    cdb.warn(\"Please get that character's information first. <obs>(cdb \" .. name .. \")\")\n  end\nend\n\nfunction cdb.anons()\n  cdb.echo(\"Players who you'll need to manually honours:\")\n  local g = true\n  for k, v in pairs(cdb.db) do\n    if v.city == \"(hidden)\" then\n      cecho(\"  + <yellow>\" .. v.name .. \"\\n\")\n      g = false\n    end\n  end\n  if g then cecho(\"  <obs>(none)\\n\") end\nend\n\nfunction cdb.classcheck(name)\n  name = name:lower():title()\n  cdb.classing = name \n  cdb.lookup(name)\nend\n\nfunction cdb.honorsupdate()\n  if not (cdb.honors.title and cdb.honors.city) then return end\n  for k, v in pairs(cdb.db) do\n    if v.fullname == cdb.honors.title then\n      cdb.db[v.name].city = cdb.honors.city\n      cdb.addhighlight(v.name)\n    end\n  end\n  cdb.honors = {}\nend\n\nfunction cdb.hl(name)\n  local city = cdb.db[name].city\n  if not city then return end\n  if city == \"\" then city = \"divine\" end\n  local line = getCurrentLine()\n  local i = 1\n  while i > 0 do\n    local p = selectString(name, i)\n    if p > -1 then\n      local x = line:sub(p + #name + 1, p + #name + 1) or \"!\"\n      if x == \"\" or x:match(\"%A\") then\n        if cdb.enemies[name] and cdb.styles.enemies.color ~= \"\" then\n          fg(cdb.styles.enemies.color)\n        elseif cdb.styles[city] and cdb.styles[city].color ~= \"\" then \n          fg(cdb.styles[city].color)\n        end\n        if cdb.styles[city].underline or (cdb.enemies[name] and cdb.styles.enemies.underline) then setUnderline(true) end\n        if cdb.styles[city].italics or (cdb.enemies[name] and cdb.styles.enemies.italics) then setItalics(true) end\n        if cdb.styles[city].bold or (cdb.enemies[name] and cdb.styles.enemies.bold) then setBold(true) end\n        resetFormat()\n      end\n      deselect()\n      i = i + 1\n    else\n      deselect()\n      i = 0\n    end\n  end\nend\n\nfunction cdb.highlights()\n  for k, v in pairs(cdb.db) do\n    if not cdb.lights[v.name] then\n      cdb.lights[v.name] = tempTrigger(v.name, [[cdb.hl(\"]] .. v.name .. [[\")]])\n    end\n  end\nend\n\nfunction cdb.addhighlight(name)\n  name = name:lower():title()\n  if not cdb.lights[name] then\n    cdb.lights[name] = tempTrigger(name, [[cdb.hl(\"]] .. name .. [[\")]])\n  end\nend\n\nfunction cdb.save()\n  local sep = (getMudletHomeDir():sub(3, 3) == \"/\" and \"/\") or \"\\\\\"\n  table.save(getMudletHomeDir() .. sep .. \"cdb.lua\", cdb.db)\n  table.save(getMudletHomeDir() .. sep .. \"enemies.lua\", cdb.enemies)\nend\n\nfunction cdb.load()\n  local sep = (getMudletHomeDir():sub(3, 3) == \"/\" and \"/\") or \"\\\\\"\n  if io.exists(getMudletHomeDir() .. sep .. \"cdb.lua\") then\n    table.load(getMudletHomeDir() .. sep .. \"cdb.lua\", cdb.db)\n  else\n    table.save(getMudletHomeDir() .. sep .. \"cdb.lua\", cdb.db)\n  end\n  \n  if io.exists(getMudletHomeDir() .. sep .. \"enemies.lua\") then\n    table.load(getMudletHomeDir() .. sep .. \"enemies.lua\", cdb.enemies)\n  else\n    table.save(getMudletHomeDir() .. sep .. \"enemies.lua\", cdb.enemies)\n  end\nend\n\ncdb.load()",
    "eventHandlerList": null
}