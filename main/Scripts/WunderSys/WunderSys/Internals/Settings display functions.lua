function wsys.wshow()
  wsys.report("Installed Version: " .. wsys.myVersion)
  if wsys.updateAvailable then
    wsys.report("<green>Update Available! <white>" ..wsys.currentVersion.." ")
    setUnderline(true)
    fg("antique_white")
    echoLink("Visit Download Website!", "wsys.downloadNow()", wsys.downloadsURL, true)
  end
  wsys.report("Show settings ")
  setUnderline(true)
  fg("antique_white")
  echoLink("wshow settings", [[wsys.displaySettings()]], "clickity click", true)
  wsys.report("Current Profile: " .. wsys.profile)
  wsys.report("Available Profiles: ")
  wsys.profileLinkDisplay()
  wsys.report("Show affprio (wshow affprio x): ")
  wsys.affprioLinkDisplay()
  wsys.report("Show defup: ")
  setUnderline(true)
  fg("antique_white")
  echoLink("wshow defup", [[wsys.showDefMenu("defup", wsys.profile ,wsys.myClass())]], "clickity click", true)
  wsys.report("Show keepup: ")
  setUnderline(true)
  fg("antique_white")
  echoLink("wshow keepup", [[wsys.showDefMenu("keepup", wsys.profile ,wsys.myClass())]], "clickity click", true)
  wsys.report("Show defprio: ")
  setUnderline(true)
  fg("antique_white")
  echoLink("wshow defprio", [[wsys.defprioDisplay()]], "clickity click", true)
  wsys.report("Show precache: ")
  setUnderline(true)
  fg("antique_white")
  echoLink("wshow precache", [[wsys.precachedisplay()]], "clickity click", true)
  wsys.report("Show focusshifts:")
  setUnderline(true)
  fg("antique_white")
  echoLink("wshow focusshifts", [[wsys.focusshiftsdisplay()]], "clickity click", true)
  wsys.report("Show echos and gags (display) ")
  setUnderline(true)
  fg("antique_white")
  echoLink("wshow display", [[wsys.displayEchosAndGags()]], "clickity click", true)
  wsys.report("Show convenience settings (convenience) ")
  setUnderline(true)
  fg("antique_white")
  echoLink("wshow convenience", [[wsys.displayConvenience()]], "clickity click", true)
  echo("\n")
  resetFormat()
end

function wsys.displaySettings()
  wsys.report("System Settings:")
  cecho("\n<white>usetransmutation: "..tostring(wsys.settings.usetransmutation))

  cecho("\n\n<white>valerianpipe: ".. wsys.settings.valerianpipe)
  cecho("\n<white>elmpipe: ".. wsys.settings.elmpipe)
  cecho("\n<white>skullcappipe: ".. wsys.settings.skullcappipe)

  cecho("\n\n<white>valeriantwopipe: ".. tostring(wsys.settings.valeriantwopipe))
  cecho("\n<white>elmtwopipe: ".. tostring(wsys.settings.elmtwopipe))
  cecho("\n<white>skullcaptwopipe: ".. tostring(wsys.settings.skullcaptwopipe))

  cecho("\n\n<white>siphealth: "..tostring(wsys.settings.siphealth))
  cecho("\n<white>sipmana: "..tostring(wsys.settings.sipmana))
  cecho("\n<white>aeonsiphealth: "..tostring(wsys.settings.aeonsiphealth))
  cecho("\n<white>aeonsipmana: "..tostring(wsys.settings.aeonsipmana))

  cecho("\n\n<white>manapercent: "..tostring(wsys.settings.manapercent))
  cecho("\n<white>unsoftpausehealth: "..tostring(wsys.settings.unsoftpausehealth))

  cecho("\n\n<white>usemoss: "..tostring(wsys.settings.usemoss))
  cecho("\n<white>mosshealth: "..tostring(wsys.settings.mosshealth))
  cecho("\n<white>mossmana: "..tostring(wsys.settings.mossmana))

  cecho("\n\n<white>useinsomnia: "..tostring(wsys.settings.useinsomnia))
  cecho("\n<white>usefocus: "..tostring(wsys.settings.usefocus))
  cecho("\n<white>useclot: "..tostring(wsys.settings.useclot))
  cecho("\n<white>autotree: "..tostring(wsys.settings.autotree))
  if wsys.isKnight() then
    cecho("\n<white>userage: "..tostring(wsys.settings.userage))
  end
  if wsys.isClass("serpent") then
    cecho("\n<white>autoshrugging: "..tostring(wsys.settings.autoshrugging))
    cecho("\n<white>autoshrugat: "..tostring(wsys.settings.autoshrugat))
  end
  if wsys.isClass("monk") then
     cecho("\n<white>monktransmute: "..tostring(wsys.settings.monktransmute))
     cecho("\n<white>monktransmuteto: "..tostring(wsys.settings.monktransmuteto))
  end

  cecho("\n\n<white>aeonblock: "..tostring(wsys.settings.aeonblock))

  cecho("\n\n<white>parrystrategy: " ..tostring(wsys.settings.parrystrategy))

  cecho("\n\n<white>profileonburst: " .. wsys.settings.profileonburst)
  cecho("\n<white>profileondeath: " .. wsys.settings.profileondeath)

  echo("\n")
  wsys.report("You can edit settings with the alias - <green>wconfig <setting> <value>")
  wsys.report("For example: <green>wconfig elmpipe 123456 <white>or <green>wconfig usefocus true")
end

function wsys.displayEchosAndGags()
  wsys.report("Display Settings:")
  cecho("\n\n<white>prompt: ")
  fg("grey")
  echoLink(tostring(wsys.settings.prompt), [[clearCmdLine();appendCmdLine("wconfig prompt " .. wsys.settings.prompt)]], "Click to paste in input line", true)
  resetFormat()

  cecho("\n\n<white>promptline2 (false to disable): ")
  fg("grey")
  echoLink(tostring(wsys.settings.promptline2), [[clearCmdLine();appendCmdLine("wconfig promptline2 " .. tostring(wsys.settings.promptline2))]], "Click to paste in input line", true)
  resetFormat()

  cecho("\n\n<white>blackoutprompt: ")
  fg("grey")
  echoLink(tostring(wsys.settings.blackoutprompt), [[clearCmdLine();appendCmdLine("wconfig blackoutprompt " .. wsys.settings.blackoutprompt)]], "Click to paste in input line", true)
  resetFormat()
  
  cecho("\n\n<white>affgainedechos: "..tostring(wsys.settings.affgainedechos))
  cecho("\n<white>affcuredechos: "..tostring(wsys.settings.affcuredechos))

  cecho("\n\n<white>gagcuring: "..tostring(wsys.settings.gagcuring))
  cecho("\n\n<white>gagclot: "..tostring(wsys.settings.gagclot))
  cecho("\n\n<white>gagaffshift: "..tostring(wsys.settings.gagaffshift))
  cecho("\n<white>gagdefshift: "..tostring(wsys.settings.gagdefshift))

  echo("\n")
  wsys.report("You can edit these settings with the alias - <green>wconfig <setting> <true/false>")
  wsys.report("For example: <green>wconfig affgainedechos false <white>or <green>wconfig gagclot true")
end

function wsys.displayConvenience()
  wsys.report("Convenience Settings:")
  cecho("\n\n<white>gstuff: "..tostring(wsys.settings.gstuff))
  cecho("\n<white>container: "..tostring(wsys.settings.container))
  cecho("\n<white>mount: "..tostring(wsys.settings.mount))

  echo("\n")
  wsys.report("You can edit these settings with the alias - <green>wconfig <setting> <value>")
  wsys.report("For example: <green>wconfig gstuff false <white>or <green>wconfig container backpack123456")
end

function wsys.profileLinkDisplay()
  for k,v in pairs(wsys.settings.profilenames) do
    local dlink = [[wsys.switchProfile("]]..v..[[")]]
    echo(" ")
    setUnderline(true)
    fg("antique_white")
    echoLink(v, dlink, "Switch to " .. v, true)
    resetFormat()
  end
end

function wsys.affprioLinkDisplay()
  setUnderline(true)
  fg("antique_white")
  echoLink("all", [[wsys.affpriodisplay("all")]], "wshow affprio all", true)
  resetFormat()
  echo(" ")
  setUnderline(true)
  fg("antique_white")
  echoLink("herb", [[wsys.affpriodisplay("herb")]], "wshow affprio herb", true)
  resetFormat()
  echo(" ")
  setUnderline(true)
  fg("antique_white")
  echoLink("salve", [[wsys.affpriodisplay("salve")]], "wshow affprio salve", true)
  resetFormat()
  echo(" ")
  setUnderline(true)
  fg("antique_white")
  echoLink("smoke", [[wsys.affpriodisplay("smoke")]], "wshow affprio smoke", true)
  resetFormat()
  echo(" ")
  setUnderline(true)
  fg("antique_white")
  echoLink("health", [[wsys.affpriodisplay("health")]], "wshow affprio health", true)
  resetFormat()
  echo(" ")
  setUnderline(true)
  fg("antique_white")
  echoLink("wake", [[wsys.affpriodisplay("wake")]], "wshow affprio wake", true)
  resetFormat()
  echo(" ")
  setUnderline(true)
  fg("antique_white")
  echoLink("stand", [[wsys.affpriodisplay("stand")]], "wshow affprio stand", true)
  resetFormat()
  echo(" ")
  setUnderline(true)
  fg("antique_white")
  echoLink("writhe", [[wsys.affpriodisplay("writhe")]], "wshow affprio writhe", true)
  resetFormat()
  echo(" ")
  setUnderline(true)
  fg("antique_white")
  echoLink("concentrate", [[wsys.affpriodisplay("concentrate")]], "wshow affprio concentrate", true)
  resetFormat()
  echo(" ")
  setUnderline(true)
  fg("antique_white")
  echoLink("immunity", [[wsys.affpriodisplay("immunity")]], "wshow affprio immunity", true)
  resetFormat()
  echo(" ")
  setUnderline(true)
  fg("antique_white")
  echoLink("compose", [[wsys.affpriodisplay("compose")]], "wshow affprio compose", true)
  resetFormat()
  echo(" ")
  setUnderline(true)
  fg("antique_white")
  echoLink("focus", [[wsys.affpriodisplay("focus")]], "wshow affprio focus", true)
  resetFormat()
end

