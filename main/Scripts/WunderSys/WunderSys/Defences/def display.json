{
    "attribs": {
        "isActive": "yes",
        "isFolder": "no"
    },
    "type": "script",
    "name": "def display",
    "packageName": null,
    "script": "local menuClass = \"dragon\"\n\n-- define which classes have what skills\nlocal classSkills = {\n  [\"airelementallord\"] = {\"duress\"},\n  [\"alchemist\"] = {\"alchemy\", \"physiology\"},\n  [\"apostate\"] = {\"evileye\", \"necromancy\", \"apostasy\"},\n  [\"bard\"] = {\"swashbuckling\", \"voicecraft\", \"harmonics\"},\n  [\"blademaster\"] = {\"twoarts\", \"striking\", \"shindo\"},\n  [\"druid\"] = {\"druid\", \"metamorphosis\", \"groves\"},\n  [\"infernal\"] = {\"chivalry\", \"necromancy\", \"weaponmastery\"},\n  [\"earthelementallord\"] = {\"sculpting\"},\n  [\"fireelementallord\"] = {\"ignition\"},\n  [\"jester\"] = {\"pranks\", \"puppetry\", \"tarot\"},\n  [\"magi\"] = {\"magi\", \"elementalism\", \"crystalism\"},\n  [\"monk\"] = {\"tekura\", \"kaido\", \"telepathy\"},\n  [\"occultist\"] = {\"occultism\", \"domination\", \"tarot\"},\n  [\"paladin\"] = {\"chivalry\", \"devotion\", \"weaponmastery\"},\n  [\"priest\"] = {\"spirituality\", \"devotion\", \"healing\"},\n  [\"psion\"] = {\"weaving\", \"psionics\", \"emulation\"},\n  [\"runewarden\"] = {\"chivalry\", \"runelore\", \"weaponmastery\"},\n  [\"sentinel\"] = {\"woodlore\", \"metamorphosis\"},\n  [\"serpent\"] = {\"subterfuge\", \"hypnosis\"},\n  [\"shaman\"] = {\"curses\", \"vodun\", \"runelore\"},\n  [\"sylvan\"] = {\"sylvan\", \"groves\", \"elementalism\"},\n  [\"waterelementallord\"] = {\"pervasion\"},\n  [\"dragon\"] = {\"dragoncraft\"},\n  [\"free\"] = {\"curative\", \"survival\", \"vision\", \"enchantment\", \"tattoos\"},\n  [\"animalspirit\"] = {\"spiritform\"},\n  [\"artefact\"] = {\"artefact\"}, \n}\n\nfunction wsys.defupDisplay(style, profile, class)\n  if wsys.settings[style][profile][menuClass] == nil then\n    wsys.settings[style][profile][menuClass] = {}\n  end\n  local tableName = tostring(def)\n  local sortDefs = {}\n  local manaUse = {\n    \"kaitrance\", \"shintrance\", \"projectiles\", \"dodging\", \"mindnet\",\n    \"reflexes\", \"groundwatch\", \"vigilance\", \"treewatch\", \"telesense\",\n    \"softfocusing\", \"skywatch\", \"hypersight\", \"alertness\", \"weaving\",\n  }\n  local translations ={\n    kaitrance = \"Kai Trance\",\n    splitmind = \"Split Mind\"  ,\n    shintrance = \"Shin Trance\",\n    prismaticbarrier = \"Prismatic Barrier\",\n    electricResistance = \"ElecResistance\",\n  }\n  -- sort defs\n  for k,_ in pairs(wsys.tb.defenceTable) do\n    sortDefs[#sortDefs+1] = k\n  end\n  table.sort(sortDefs)\n\n  local x = 0\n  for i, n in ipairs(sortDefs) do\n    if wsys.classDefCheck(n, class) then\n      x = x + 1\n      local d = \"<dark_slate_gray>[<white>\"\n      if wsys.settings[style][profile][menuClass][n] then\n        if table.contains(manaUse, n) then\n          d = d .. \"<red>M\" -- uses mana\n        else\n          d = d .. \"X\"\n        end\n      else \n        d = d .. \" \"\n      end\n      \n      d = d .. \"<dark_slate_gray>] <white>\"     \n\n      if (x-1)%3 == 0 then\n        echo(\"\\n\")\n      end \n      cecho(d)\n      local nWithSpace = wsys.tb.defenceTable[n].name:title()\n      if translations[n] then\n        nWithSpace = translations[n]\n      end\n      if nWithSpace:len() < 25 and (x-1)%3~=2 then\n        local pad = 25 - nWithSpace:len()\n        nWithSpace = nWithSpace .. string.rep(\" \", pad)\n      elseif nWithSpace:len() > 25 then\n        nWithSpace = nWithSpace:cut(25)\n      end\n      \n      fg(\"white\") \n      local command\n\n      if configuration == nil then\n        configuration = \"initial\"\n      end\n\n      local aliasthingy = \"wconfig \"..style..\" \"..profile..\" \"..menuClass..\" \"..n\n      local command = [[expandAlias(\"]]..aliasthingy..[[\")]]\n      echoLink(nWithSpace, command, \n        \"Toggle defup of \" .. n, true)\n      \n      \n      \n    end\n  end\n  echo(\"\\n\")\nend\n\nfunction wsys.classDefCheck(def, class)\n  local ans = false\n  for k,v in pairs(classSkills[class]) do\n    ans = ans or table.contains(wsys.tb.defenceTable[def][\"skillset\"], v)\n  end\n  return ans\nend\n\nfunction wsys.showDefMenu(style, profile ,class)\n  if class then\n    menuClass = string.lower(class)\n  else\n    menuClass = wsys.myClass()\n  end\n  wsys.report(string.title(style) .. \" Configuration \" .. profile .. \" (\"..menuClass..\")\")\n  wsys.report(\"Class Free Defs:\")\n  wsys.defupDisplay(style, profile ,\"free\")\n  wsys.report(string.title(menuClass)..\" Defs:\")\n  wsys.defupDisplay(style, profile, menuClass)\n  if wsys.myClass() == \"sentinel\" or wsys.myClass() == \"druid\" then\n    wsys.report(\"Metamorphosis animal spirits:\")\n    wsys.defupDisplay(style, profile ,\"animalspirit\")\n  end\n  wsys.report(\"Artefacts:\")\n  wsys.defupDisplay(style, profile, \"artefact\")\nend\n\nfunction wsys.defToggle(style, profile, class, defname)\n  if wsys.settings.defup[profile][class] == nil then\n    wsys.settings.defup[profile][class] = {}\n  end\n  if wsys.settings[style][profile][class][defname] ~= nil then\n    wsys.settings[style][profile][class][defname] = nil\n    wsys.report(\"Removed \" .. defname .. \" (\"..wsys.tb.defenceTable[defname][\"name\"] ..\") from \" ..style.. \" in \" ..profile..\" profile\")\n    wsys.showDefMenu(style, profile, class)\n    -- spiritforms are not counted as defenses. So we cheat a little.\n    if wsys.tb.defenceTable[defname][\"skillset\"][1] ~= \"spiritform\" then \n      send(\"curing priority defence \" .. defname .. \" reset\", false)\n    end\n  else\n    wsys.settings[style][profile][class][defname] = true\n    wsys.report(\"Added \" .. defname .. \" (\"..wsys.tb.defenceTable[defname][\"name\"] ..\") to \" ..style.. \" in \" ..profile..\" profile\")\n    wsys.showDefMenu(style, profile, class)\n    --add stuff to serverside keepup if this is displaying a keepup list.\n    --Unless it's a spiritform\n      if style == \"keepup\" and class == wsys.myClass() then\n        wsys.settings.defprio[wsys.profile][wsys.myClass()][defname] = wsys.settings.defprio[wsys.profile][wsys.myClass()][defname] or 25\n        -- let's not keep up a spiritform, it would cause too much trouble with the other defenses.\n        if wsys.tb.defenceTable[defname][\"skillset\"][1] ~= \"spiritform\" then \n          wsys.enableSSDef( defname, wsys.settings.defprio[wsys.profile][wsys.myClass()][defname], true )\n        end\n      elseif style == \"defup\" and class == wsys.myClass() then\n        if not wsys.settings.defprio[wsys.profile][wsys.myClass()][defname] then\n           wsys.settings.defprio[wsys.profile][wsys.myClass()][defname] = 25\n        end\n      end\n  end\nend\n\nfunction wsys.defprioDisplay()\n  --init local tables\n  local defpriolist = {}\n  local defpriolistvals = {}\n  local defpriolistsorted = {}\n\n  --make sure defprio table exists\n  if wsys.settings.defup[wsys.profile][wsys.myClass()] == nil then\n    wsys.settings.defup[wsys.profile][wsys.myClass()] = {}\n  end\n\n  --snag all defup defs\n  for k,v in pairs(wsys.settings.defup[wsys.profile][wsys.myClass()]) do\n    defpriolist[#defpriolist+1] = k\n  end\n  --snag all keepup defs\n  for k,v in pairs(wsys.settings.keepup[wsys.profile][wsys.myClass()]) do\n    defpriolist[#defpriolist+1] = k\n  end\n  --check if there's a defprio table, if not make it\n  if wsys.settings.defprio[wsys.profile][wsys.myClass()] == nil then\n    wsys.settings.defprio[wsys.profile][wsys.myClass()] = {}\n  end\n  --assign prio # to all defs (25 if not set)\n  for k,v in pairs(defpriolist) do\n    if wsys.settings.defprio[wsys.profile][wsys.myClass()][v] then\n      defpriolistvals[v] = wsys.settings.defprio[wsys.profile][wsys.myClass()][v]\n    else\n      defpriolistvals[v] = 25\n    end\n  end\n  --put defs in new list to be sorted\n  for index in pairs(defpriolistvals) do\n    defpriolistsorted[#defpriolistsorted+1] = index\n  end\n  --sort defs by #\n  table.sort(defpriolistsorted, function(a, b) return defpriolistvals[a] < defpriolistvals[b] end)\n  \n  --display results\n  wsys.report(\"Defence Priority order:\")\n  for k,v in ipairs(defpriolistsorted) do\n    cecho(\"\\n<white>\"..defpriolistvals[v] .. \"<dodger_blue>:<white> \" .. v)\n    local aliasone = \"wconfig defprio \" .. v .. \" \" .. defpriolistvals[v] - 1\n    local commandone = [[expandAlias(\"]]..aliasone..[[\")]]\n    echo(\" \")\n    echoLink(\"(-)\", commandone, \"Move 'up' \" .. v, true)\n    echo(\" \")\n    local aliastwo = \"wconfig defprio \" .. v .. \" \" .. defpriolistvals[v] + 1\n    local commandtwo = [[expandAlias(\"]]..aliastwo..[[\")]]\n    echoLink(\"(+)\", commandtwo, \"Move 'down' \" .. v, true)\n  end\nend\n\nfunction wsys.defprioset(def, prio)\n  if (tonumber(prio) > 0) and (tonumber(prio) < 26) then\n    wsys.settings.defprio[wsys.profile][wsys.myClass()][def] = prio\n    if wsys.settings.keepup[wsys.profile][wsys.myClass()][def] then\n      wsys.enableSSDef( def, prio, true )\n    end\n    wsys.report(\"Set \" .. def .. \" to \" .. prio .. \" priority.\")\n  else\n    wsys.report(\"Cannot set a def lower than 1 or higher than 25 prio.\")\n  end\n  wsys.defprioDisplay()\nend",
    "eventHandlerList": null
}