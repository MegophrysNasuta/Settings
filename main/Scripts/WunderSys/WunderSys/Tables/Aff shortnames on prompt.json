{
    "attribs": {
        "isActive": "yes",
        "isFolder": "no"
    },
    "type": "script",
    "name": "Aff shortnames on prompt",
    "packageName": null,
    "script": "wsys.overrides.afftags = wsys.overrides.afftags or {}\n-- Shortnames = { aff = \"name\" }\nwsys.overrides.afftags.shortnames = wsys.overrides.afftags.shortnames or {}\n-- colors = { aff = \"color\", aff2 = { \"color1\", [4] = \"color at 4+ stacks\" } }\nwsys.overrides.afftags.colors = wsys.overrides.afftags.colors or {}\n-- cure_colors = { cure = \"color\", cure2 = { \"color1\", [6] = \"color at 6+ stacks\" } }\nwsys.overrides.afftags.cure_colors = wsys.overrides.afftags.cure_colors or {}\n\n\n-- Probably use an override table\nlocal aff_short = {\n deafness = \"\",\n blindness = \"\",\n insomnia = \"\",\n addiction = \"add\",\n aeon = \"ae\",\n agoraphobia = \"agor\",\n anorexia = \"ano\",\n asphyxiating = \"\", -- Lets Air Lord see what smoke cure you used\n sleeping = \"slp\",\n asthma = \"ast\",\n concussion = \"concuss\",\n damagedhead = \"h1\",\n blackout = \"\",\n bleeding = \"bld\",\n demonstain = \"stain\",\n damagedleftarm = \"la2\",\n damagedleftleg = \"ll2\",\n bleg = \"uleg1\",\n damagedrightarm = \"ra2\",\n damagedrightleg = \"rl2\",\n mildtrauma = \"t1\",\n carm = \"uwna\",\n claustrophobia = \"clau\",\n brokenleftarm = \"la1\",\n brokenleftleg = \"ll1\",\n cleg = \"uwnl\",\n climb = \"uwcrip\",\n clumsiness = \"Cl\",\n confusion = \"con\",\n brokenrightarm = \"ra1\",\n brokenrightleg = \"rl1\",\n darkshade = \"dark\",\n deadening = \"dea\",\n dementia = \"dem\",\n depression = \"dep\",\n disloyalty = \"disl\",\n disrupted = \"dis\",\n dissonance = \"diss\",\n dizziness = \"diz\",\n epilepsy = \"epi\",\n fear = \"fear\",\n frozen = \"frozen\",\n generosity = \"gen\",\n haemophilia = \"haem\",\n hallucinations = \"hallu\",\n healthleech = \"hleech\",\n hellsight = \"hell\",\n hypersomnia = \"hypers\",\n hypochondria = \"hypo\",\n impaled = \"Impale\",\n impatience = \"IMP\",\n internalbleeding = \"ImpaleSlash\",\n inquisition = \"\",\n cadmuscurse = \"cadmus\",\n weakenedmind = \"rixil\",\n hecatecurse = \"HECATE\",\n itching = \"\",\n lethargy = \"let\",\n loneliness = \"lon\",\n lovers = \"lust\",\n justice = \"just\",\n whisperingmadness = \"MAD\",\n masochism = \"maso\",\n manaleech = \"mleech\",\n mangledhead = \"h2\",\n mangledleftarm = \"la3\",\n mangledleftleg = \"ll3\",\n mangledrightarm = \"ra3\",\n mangledrightleg = \"rl3\",\n serioustrauma = \"t2\",\n nausea = \"nau\",\n pacified = \"pac\",\n paralysis = \"PAR\",\n paranoia = \"para\",\n parasite = \"paras\",\n peace = \"pea\",\n prone = \"PR\",\n recklessness = \"reck\",\n retribution = \"ret\",\n scytherus = \"SCY\",\n sensitivity = \"sen\",\n daeggerimpale = \"Impale\",\n shadowmadness = \"sham\",\n shivering = \"shiv\",\n shyness = \"shy\",\n slickness = \"SLI\",\n speared = \"Impale\",\n stupidity = \"st\",\n stuttering = \"stut\",\n entangled = \"tangled\",\n bound = \"bound\",\n transfixation = \"transf\",\n weariness = \"Wea\",\n webbed = \"web\",\n vertigo = \"vert\",\n voyria = \"voy\",\n heartseed = \"hseed\",\n temperedsanguine = \"sang\",\n temperedcholeric = \"chol\",\n temperedphlegmatic = \"phleg\",\n temperedmelancholic = \"melan\",\n torntendons = \"tendons\",\n wristfractures = \"wrist\",\n crackedribs = \"ribs\",\n skullfractures = \"skull\",\n burning = \"burn\",\n unweavingmind = \"UNM\",\n unweavingbody = \"UNB\",\n unweavingspirit = \"UNS\",\n mindravaged = \"MIND RAVAGE\",\n pressure = \"PRESS\",\n tension = \"tens\",\n}\n\nlocal aff_colors = {\n\tbleeding = { \"maroon\", [500] = \"red\" },\n\tburning = { \"SlateGrey\", \"brown\", \"red\" },\n\tpressure = { \"SlateGrey\", \"DeepSkyBlue\", [4] = \"cyan\", [6] = \"white\" },\n\tprone = \"orchid\",\n\tmindravaged = \"red:gray\",\n}\n\n-- The cure may be the prefix to an actual cure\n-- E.g. \"mending\" matches \"mendingarms\" or \"mendinglegs\" but not \"foomending\"\nlocal cure_colors = {\n\tkelp = \"chartreuse\",\n\tgoldenseal = \"yellow\",\n\tginseng = \"dark_goldenrod\",\n\tlobelia = \"moccasin\",\n\telm = \"sky_blue\",\n\tvalerian = \"royal_blue\",\n\trestoration = \"brown\",\n\tmending = \"brown\",\n\thealth = { \"medium_violet_red\", [6] = \"deep_pink\" }, -- fractures\n\tginger = { \"medium_purple\", [6] = \"purple\" },\n}\n\n-- Return the color to use for an value, given a color_option\n-- Color_option is either a string \"color\", or a table with a list of colors to\n-- use based on the aff_value\nlocal getColor = function( color_option, value )\n  local color = false\n\t\n\tif type(color_option) == \"string\" then\n\t\t-- Aff color is a string, so use it\n\t\tcolor = color_option\n\t\t\n\telseif type(color_option) == \"table\" then\n\t\t-- Pick a color based on value\n\t\tlocal max = 0\n\t\tlocal current_val = tonumber(value) or ( value and 1 ) or 0\n\t\t\n\t\tfor i,v in pairs(color_option) do\n\t\t\tif i > max and current_val >= i then\n\t\t\t\tmax = i\n\t\t\t\tcolor = v\n\t\t\tend\n\t\tend\n\tend\n\treturn color\nend\n\nlocal getAffLabel = function( aff, value )\n  local short = wsys.overrides.afftags.shortnames[aff] or aff_short[aff]\n\t\n\tif short and #short == 0 then\n\t\t-- Short is \"\", don't display anythign\n\t\treturn false\n\tend\n\t\n\tlocal color = getColor( wsys.overrides.afftags.colors[aff] or aff_colors[aff], value )\n\t\n\tif not color and wsys.tb.affc[aff] then\n\t\t-- Pick a color based on cure-type\n\t\tfor _,aff_cure in ipairs(wsys.tb.affc[aff]) do\n\t\t\t-- Check the overrides first\n\t\t\tfor cure,ccolor in pairs(wsys.overrides.afftags.cure_colors) do\n\t\t\t\tif string.match( aff_cure, \"^\"..cure ) then\n\t\t\t\t\tcolor = getColor( ccolor, value )\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\tend\n\t\t\tif color then break end -- Break out of the affc table loop if we found a match\n\t\t\n\t\t\t-- Check the default colors\n\t\t\tfor cure,ccolor in pairs(cure_colors) do\n\t\t\t\tif string.match( aff_cure, \"^\"..cure ) then\n\t\t\t\t\tcolor = getColor( ccolor, value )\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\tend\n\t\t\tif color then break end -- Break out of the affc table loop if we found a match\n\t\tend\n\tend\n\t\n\tif not color then\n\t\tif short then\n\t\t\t-- No special color\n\t\t\tcolor = \"SlateGrey\"\n\t\telse\n\t\t\t-- No short means we don't know about it. Use a default color\n\t\t\tcolor = \"IndianRed\"\n\t\tend\n\tend\n\t\n\tshort = short or aff\n\t\n\tif tonumber(value) and value > 1 then\n\t\t-- Stackable aff, append (#)\n\t\tshort = short ..\"(\"..value..\")\"\n\tend\n\t\n  return \"<\"..color..\">\"..short\nend\n\nfunction wsys.affTags( affs, include_bleed )\n  local s = {}\n  if include_bleed and wsysf.stats.bleed and wsysf.stats.bleed > 50 then\n  \ts[#s+1] = getAffLabel( \"bleeding\", wsysf.stats.bleed )\n  end\n  for aff,value in pairs(affs) do\n\t\tentry = getAffLabel(aff, value)\n\t\tif entry then\n\t\t\ts[#s+1] = entry\n\t\tend\n\tend\n  return #s > 0 and (\"<IndianRed>[\"..table.concat(s, \" \")..\"<IndianRed>]\") or \"\"\nend",
    "eventHandlerList": null
}