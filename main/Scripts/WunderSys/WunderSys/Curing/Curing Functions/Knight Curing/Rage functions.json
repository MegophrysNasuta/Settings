{
    "attribs": {
        "isActive": "yes",
        "isFolder": "no"
    },
    "type": "script",
    "name": "Rage functions",
    "packageName": null,
    "script": "function wsys.rage()\n enableTrigger(\"Rage\")\n if wsys.timer.ragewait then\n  killTimer(tostring(wsys.timer.ragewait))\n end\n wsys.timer.ragewait = tempTimer(wsys.myPing() * 4, [[wsys.timer.ragewait = nil;disableTrigger(\"Rage\")]])\n wsys.salviaSend(\"rage\")\nend -- func\n\nlocal rageprompt = false\n\nfunction wsys.raged()\n  wsys.cure = \"rage\"\n  if not wsys.aff.blackout then\n   if wsys.timer.ragewait then\n    killTimer(tostring(wsys.timer.ragewait))\n   end\n   wsys.timer.ragewait = nil\n   disableTrigger(\"Rage\")\n   wsys.lostBal(\"rage\", 11)\n   if rageprompt then killTrigger(tostring(rageprompt)) end\n   rageprompt = tempLineTrigger(1,1, [[if isPrompt() then wsys.emptyrage() end]])\n  end -- if\nend -- func\n\n\nfunction wsys.emptyrage()\n if not wsys.bals.rage then\n  disableTrigger(\"Rage\")\n  if wsys.timer.ragewait then\n   killTimer(tostring(wsys.timer.ragewait))\n  end\n  wsys.timer.ragewait = nil\n  for k,v in pairs(wsys.tb.cures.rage) do\n    if wsysf.affs[v] then\n      wsysf.core.debug.print(2, \"Empty rage should clear \".. v..\"?\")\n    end\n    disableTrigger(string.title(v) .. \" -\")\n  end -- for\n end -- if\nend -- func\n\nfunction wsys.ragebalgained()\n  wsys.gotBal(\"rage\")\nend\n\nfunction wsys.ragedoffbal()\n  lostBal(\"rage\", 10)\nend",
    "eventHandlerList": null
}