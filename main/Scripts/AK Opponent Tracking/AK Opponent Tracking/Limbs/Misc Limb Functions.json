{
    "attribs": {
        "isActive": "yes",
        "isFolder": "no"
    },
    "type": "script",
    "name": "Misc Limb Functions",
    "packageName": null,
    "script": "--limbs misc\nfunction ak.limbs.FindTargetHealth(who)\n   if who == \"Me\" then\n      return gmcp.Char.Vitals.maxhp\n   end\n   ak.knownmaxhealth = ak.knownmaxhealth or {}\n   if table.contains(ak.knownmaxhealth, who) then\n      return tonumber(ak.knownmaxhealth[who]) \n   else\n      return 6000   \n   end\nend\n\nfunction ak.limbs.ariaUp(name)\n\tif not ak.knownmaxhealth[name] then return end\n\tak.knownmaxhealth[name] = ak.knownmaxhealth[name] * 1.1\nend\n\nfunction ak.limbs.ariaDown(name)\n\tdisplay(name)\n\tif not ak.knownmaxhealth[name] then return end\n\tak.knownmaxhealth[name] = ak.knownmaxhealth[name] / 1.1\t\nend\n\nfunction ak.limbs.standardizeLimb(limb)\n   local limbsc = {\n   [\"right leg\"] = \"rightleg\",\n   [\"right arm\"] = \"rightarm\",\n   [\"left arm\"] = \"leftarm\",\n   [\"left leg\"] = \"leftleg\",\n   }\n   if limbsc[limb] then\n      return limbsc[limb]\n   else\n      return limb\n   end\nend\n\nfunction ak.limbs.ExpoundLimb(limb)\n   local limbs = {\n   [\"rightleg\"] = \"right leg\",\n   [\"rightarm\"] = \"right arm\",\n   [\"leftarm\"] = \"left arm\",\n   [\"leftleg\"] = \"left leg\",\n   }\n   if limbs[limb] then\n      return limbs[limb]\n   else\n      return limb\n   end\nend\n\nfunction ak.limbs.limb_table_check(who)\n   ak.limbs.limbcount = ak.limbs.limbcount or {}\n   who = who or \"Me\"\n   if not ak.limbs.limbcount[who] then\n      ak.limbs.limb_table_form(who)\n   end\nend\n\nfunction ak.limbs.limb_table_form(who)\n ak.limbs.limbcount[who] = ak.limbs.limbcount[who] or {}\n ak.limbs.limbcount[who].lasthitdamage = ak.limbs.limbcount[who].lasthitdamage or {} \n ak.limbs.limbcount[who].lasthitlimb = ak.limbs.limbcount[who].lasthitlimb or \"rightleg\"   \n ak.limbs.limbcount[who].breakpoint = ak.limbs.limbcount[who].breakpoint or 0\n ak.limbs.limbcount[who].rightarm = ak.limbs.limbcount[who].rightarm or 0 \n ak.limbs.limbcount[who].rightleg = ak.limbs.limbcount[who].rightleg or 0 \n ak.limbs.limbcount[who].leftarm = ak.limbs.limbcount[who].leftarm or 0 \n ak.limbs.limbcount[who].leftleg = ak.limbs.limbcount[who].leftleg or 0 \n ak.limbs.limbcount[who].torso = ak.limbs.limbcount[who].torso or 0 \n ak.limbs.limbcount[who].head = ak.limbs.limbcount[who].head or 0\n ak.limbs.limbcount[who].lastpercentrightarm = ak.limbs.limbcount[who].lastpercentrightarm or 0 \n ak.limbs.limbcount[who].lastpercentrightleg = ak.limbs.limbcount[who].lastpercentrightleg or 0 \n ak.limbs.limbcount[who].lastpercentleftarm = ak.limbs.limbcount[who].lastpercentleftarm or 0 \n ak.limbs.limbcount[who].lastpercentleftleg = ak.limbs.limbcount[who].lastpercentleftleg or 0 \n ak.limbs.limbcount[who].lastpercenttorso = ak.limbs.limbcount[who].lastpercenttorso or 0 \n ak.limbs.limbcount[who].lastpercenthead = ak.limbs.limbcount[who].lastpercenthead or 0\n ak.limbs.limbcount[who].maxbreaks = {}\n\n ak.limbs.limbcount[who].maxbreaks.rightarm = 0 \n ak.limbs.limbcount[who].maxbreaks.rightleg = 0 \n ak.limbs.limbcount[who].maxbreaks.leftarm = 0 \n ak.limbs.limbcount[who].maxbreaks.leftleg = 0 \n ak.limbs.limbcount[who].maxbreaks.torso = 0 \n ak.limbs.limbcount[who].maxbreaks.head = 0\nend\n\n\nfunction ak.limbs.limbreset(who)\n ak.limbs.limbcount[who] = ak.limbs.limbcount[who] or {}\n ak.limbs.limbcount[who].lasthitdamage = {} \n ak.limbs.limbcount[who].lasthitlimb =  \"rightleg\"   \n ak.limbs.limbcount[who].breakpoint = 0\n ak.limbs.limbcount[who].rightarm = 0 \n ak.limbs.limbcount[who].rightleg = 0 \n ak.limbs.limbcount[who].leftarm = 0 \n ak.limbs.limbcount[who].leftleg = 0 \n ak.limbs.limbcount[who].torso = 0 \n ak.limbs.limbcount[who].head = 0\n ak.limbs.limbcount[who].lastpercentrightarm = 0 \n ak.limbs.limbcount[who].lastpercentrightleg = 0 \n ak.limbs.limbcount[who].lastpercentleftarm = 0 \n ak.limbs.limbcount[who].lastpercentleftleg = 0 \n ak.limbs.limbcount[who].lastpercenttorso = 0\n ak.limbs.limbcount[who].lastpercenthead = 0\n ak.limbs.limbcount[who].maxbreaks = {}\n ak.limbs.limbcount[who].maxbreaks.rightarm = 0 \n ak.limbs.limbcount[who].maxbreaks.rightleg = 0 \n ak.limbs.limbcount[who].maxbreaks.leftarm = 0 \n ak.limbs.limbcount[who].maxbreaks.leftleg = 0 \n ak.limbs.limbcount[who].maxbreaks.torso = 0 \n ak.limbs.limbcount[who].maxbreaks.head = 0\nend\n\nak.limbs.BreakerOrder = {\"rightleg\",\"leftleg\",\"head\",\"torso\",\"rightarm\",\"leftarm\"}\nfunction ak.limbs.breakOrder(limb)\n\ttable.remove(ak.limbs.BreakerOrder,table.index_of(ak.limbs.BreakerOrder,limb))\n\ttable.insert(ak.limbs.BreakerOrder,limb)\nend\n\nfunction ak.limbs.FindLastBrokenLeg()\n\tlocal tick = false\n\tfor i = 1, #ak.limbs.BreakerOrder do\n\t\tif ak.limbs.BreakerOrder[i] == \"rightleg\" or ak.limbs.BreakerOrder[i] == \"leftleg\" then\n\t\t\tif not tick then\n\t\t\t\ttick = true\n\t\t\telse\n\t\t\t\treturn ak.limbs.BreakerOrder[i]\n\t\t\tend\n\t\tend\n\tend\nend\n",
    "eventHandlerList": null
}