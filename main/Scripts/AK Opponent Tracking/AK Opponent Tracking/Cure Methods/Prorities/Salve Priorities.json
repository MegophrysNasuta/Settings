{
    "attribs": {
        "isActive": "yes",
        "isFolder": "no"
    },
    "type": "script",
    "name": "Salve Priorities",
    "packageName": null,
    "script": "-------------------------------------------------\n--         Put your Lua functions here.        --\n--                                             --\n-- Note that you can also use external Scripts --\n-------------------------------------------------\nak.enemyprio.salve = ak.enemyprio.salve or {}\nak.enemyprio.salve[target] = ak.enemyprio.salve[target] or {}\n\nak.tieredaffs = {\"rightleg 100\",\"rightleg 200\",\"rightleg 300\",\"leftleg 100\",\"leftleg 200\",\"leftleg 300\",\"rightarm 100\",\"rightarm 200\",\"rightarm 300\",\"leftarm 100\",\"leftarm 200\",\"leftarm 300\",\n                 \"head 100\",\"head 200\",\"head 300\",\"torso 100\",\"torso 200\",\"torso 300\"}\nlocal ignored = {\"rightleg\",\"leftleg\",\"rightarm\",\"leftarm\",\"torso\",\"head\"}\nlocal salvelocations = {\"head\",\"legs\",\"arms\",\"torso\"}\n\nfunction ak.enemyprio.applied(salve)\n\tif not table.contains(salvelocations,salve) then \n\t\treturn \n\tend\n\tak.enemyprio.salve[target] = ak.enemyprio.salve[target] or {}\n\tlocal maxinteger = 0\n\tlocal compsplit = \"\"\n\tlocal fuck = ak.enemyprio.salve[target]\n\tlocal aff = {}\n\tlocal insertpoint = false\n\tif #fuck > 0 then\n\t\tfor i = 1, #affstrack.applied[salve] do\n\t\t\tif affstrack.score[affstrack.applied[salve][i]] > 0 then\n\t\t\t\taff[affstrack.applied[salve][i]] = affstrack.score[affstrack.applied[salve][i]]\n\t\t\tend\n\t\tend\n\tend\n\tfor k,v in pairs(aff) do\n\t\tif table.contains(fuck, k..\" \"..v) then\n\t\t\ttable.remove(fuck,table.index_of(fuck, k..\" \"..v))\n\t\tend\n\tend\n\tif #fuck > 0 then\n\t\tfor i = 1, #fuck do\n\t\t\tcompsplit = string.split(fuck[i], \" \")\n\t\t\tif affstrack.score[compsplit[1]] == (compsplit[2] + 0) then\n\t\t\t\tif insertpoint then\n\t\t\t\t\tfor k,v in pairs(aff) do\n\t\t\t\t\t\tif not table.contains(fuck, k..\" \"..v) then\n\t\t\t\t\t\t\ttable.insert(fuck, insertpoint, k..\" \"..v)\n\t\t\t\t\t\tend\n\t\t\t\t\tend\t\t\t\t\n\t\t\t\telse\n\t\t\t\t\tfor k,v in pairs(aff) do\n\t\t\t\t\t\tif not table.contains(fuck, k..\" \"..v) then\n\t\t\t\t\t\t\ttable.insert(fuck, i, k..\" \"..v)\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\tinsertpoint = false\n\t\t\telse--if ak.enemyprio.notHigherAff(compsplit[1], k) --donothaft hisaffliction\n\t\t\t\tinsertpoint = i\n\t\t\tend\n\t\tend\n\tend\n\tfor k,v in pairs(aff) do\n\t\tif not table.contains(fuck, k..\" \"..v) then\n\t\t\ttable.insert(fuck, k..\" \"..v)\n\t\tend\n\tend\t\n\tfor k,v in pairs(affstrack.applied) do --add to table\n\t\tif table.contains(salvelocations, k) then\n\t\t\tfor i = 1, #v do\n\t\t\t\tif affstrack.score[v[i]] > 0 and not table.contains(fuck, v[i]..\" \"..affstrack.score[v[i]]) then\n\t\t\t\t\ttable.insert(fuck, v[i]..\" \"..affstrack.score[v[i]])\n\t\t\t\telse--already in the table but in the wrong spot / has a score currently\n\t\n\t\t\t\tend\t\n\t\t\tend\n\t\tend\n\tend\n\tif ak.debug then\n\t\tcecho(\"enemysalveprio\")\n\t\tdisplay(fuck)\n\tend\nend\n\nfunction ak.enemyprio.notHigherAff(aff, aff2)\n\tlocal compslit = \"\"\n\tlocal compslit2 = \"\"\n\tcompsplit = string.split(aff, \" \")\n\tcompsplit2 = string.split(aff2, \" \")\n\tif compsplit[1] == compslit[2] then\n\t\treturn false\n\telse\n\t\treturn true\n\tend\n\n\nend\n\n",
    "eventHandlerList": null
}