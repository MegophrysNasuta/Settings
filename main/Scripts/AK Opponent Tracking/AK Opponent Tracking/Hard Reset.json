{
    "attribs": {
        "isActive": "yes",
        "isFolder": "no"
    },
    "type": "script",
    "name": "Hard Reset",
    "packageName": null,
    "script": "--scoreup2\nfunction ak.oresetparse()\ntarget = target or \"Austere\"\nak.dragonTarget = false\nak.elementalTarget = false\nak.stack = ak.stack or \"none\"\naffstrack.impale = false\ntargetparry = \"unknown\"\nak.bleeding = 0\nak.flyer = false\nmycharacters = mycharacters or {}--This is for my Personal Gui\nif swiftcount == nil then swiftcount = 0 end\ndisableTimer(\"Hypochondria Timer\")\nopponenteat = 0\npromptset = {}\napplycure = {}\nak.bals.salve = true\nak.bals.focus = true\nopponenttree = 0\n\nak.defs.mass = true\nak.defs.shield = false\nak.defs.rebounding = true\nak.defs.reRebounding = false\nak.defs.sileris = true\nak.defs.curseward = true\nak.defs.holdbreath = false\nak.defs.speed = true\n\ntimerherb = 0\nif ak.timers.apply then\n\tkillTimer(ak.timers.apply)\n\tak.timers.apply = false\nend\nif ak.timers.salvebackup then \n\tkillTimer(ak.timers.salvebackup) \nend\nopponenthalftree = 0\ntimertree = 0\ncurrentvenoms = {}\nlastvenom = {}\ntargetlyred = 0\nboilable = true\nvodun = vodun or {}\nlockcheck = false\nak.tza = false\nknownrun = nil\nparsedclasscures = false\nak.psion.unweaving.mind = 0\nak.psion.unweaving.body = 0\nak.psion.unweaving.spirit = 0\nak.resetbacktrack()\nak.twoh = ak.twoh or {}\nak.twoh.skull = 0\nak.twoh.ribs = 0\nak.twoh.tendons = 0\nak.twoh.wrist = 0\nak.occie.aura.physical =  0\nak.occie.aura.mental = 0\nak.alchemist.humour.sanguine = 0\nak.alchemist.humour.choleric = 0\nak.alchemist.humour.melancholic = 0\nak.alchemist.humour.phlegmatic = 0\nak.pervasion.initialbleed = false\nak.pervasion.hitcount = 0\nak.shaman.Relapseaff = \"none\"\nak.shaman.coagulation = true\nak.shaman.bloodlet = true\nak.shaman.relapse = true\nak.shaman.GetFashions = false\nak.psion.transcend = 0\nak.jinxcount = 0\nif ak.scaldTimer then killTimer(ak.scaldTimer) end\nif ak.tendonTimer then killTimer(ak.tendonTimer) end\nif ak.skullTimer then killTimer(ak.skullTimer) end\nif ak.wristTimer then killTimer(ak.wristTimer) end\nif ak.ribTimer then killTimer(ak.ribTimer) end\nak.track.flown = false\nak.diagnosingoffbal = false\nak.CustomCureSend = false\nak.manapercent = 100\nak.healthpercent = 100\nak.currentmana = 5000\nak.maxmana = 5000\nak.currenthealth = 5000\nak.maxhealth = 5000\nak.engaged = false\nak.TorsoWrench = false\nak.HeadWrenchDisable = nil\nak.InitialWrench = nil\nak.propped = false\nak.SerpentRotateBite = false\nak.duress.pressure = 0\nak.duress.scourrelapse = false\nak.duress.stranglerelapse = false\nak.duress.zephyrrelapse = false\nak.duress.asphyxiate = false\nak.tumbling = false\nfor k,v in pairs(affstrack.score) do\n   affstrack.score[k] = 0\nend\naffstrack.enlightenscore = 0\naffstrack.ginsengscore = 0\naffstrack.goldenscore = 0\naffstrack.pyradiusscore = 0\naffstrack.kelpscore = 0\naffstrack.tramplescore = 0\naffstrack.mentalscore = 0\naffstrack.totalaffs = 0\nak.randomaffs = 0\nak.knownmaxhealth = ak.knownmaxhealth or {}\nak.limbs.limb_table_check(target)\nif gmcp and ak.stack == \"none\" then\n   ak.classenable()\nend\nak.scoreup(target)\nif gmcp and gmcp.Char and gmcp.Char.Vitals and gmcp.Char.Vitals.maxhp then\n   ak.knownmaxhealth[\"Me\"] = tonumber(gmcp.Char.Vitals.maxhp) or 5150\n   ak.classlockadd()\n   if not ak.displaydecide then \n      ak.classenable()\n      if ak.nodisplay == false and not table.contains(mycharacters,gmcp.Char.Name.name) then \n         init() \n      end \n      ak.displaydecide = true \n   end\nend\nif ak.radiancestack then\n   ak.stack = ak.radiancestack\n   ak.radiancestack = nil\nend\ncecho(\"<cyan> Reset Success!\\n\\n\")\nend",
    "eventHandlerList": null
}