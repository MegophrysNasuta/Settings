{
    "attribs": {
        "isActive": "yes",
        "isFolder": "no"
    },
    "type": "script",
    "name": "Check for updates",
    "packageName": null,
    "script": "local downloadfolder = getMudletHomeDir() .. \"/map downloads/\"\nlocal whereisit\n-- this should get called at start and every hour after that\n\nfunction mmp.checkforupdate()\n  if not mmp.game or mmp.checkingupdates then\n    return\n  end\n  local game = mmp.game\n  mmp.mapfile = downloadfolder .. \"MD5\"\n  mmp.mapperfile = downloadfolder .. \"mapper\"\n  if not downloadFile then\n    mmp.echo(\"Your version of Mudlet doesn't support downloading files - please upgrade to 2.0+\")\n  else\n    if not lfs.attributes(downloadfolder) then\n      if lfs and lfs.mkdir then\n        local t, s = lfs.mkdir(downloadfolder)\n        if not t and s ~= \"File exists\" then\n          mmp.echo(\"Couldn't make the '\" .. downloadfolder .. \"' folder; \" .. s)\n          return\n        end\n      else\n        mmp.echo(\n          \"Sorry, but you need LuaFileSystem (lfs) installed, or have the '\" ..\n          downloadfolder ..\n          \"' folder exist.\"\n        )\n        return\n      end\n    end\n    if mmp.settings.crowdmap then\n      if game == \"achaea\" then\n        downloadFile(\n          mmp.mapfile, \"http://ire-mudlet-mapping.github.io/AchaeaCrowdmap/Map/version.txt\"\n        )\n      elseif game == \"starmourn\" then\n        downloadFile(\n          mmp.mapfile, \"http://ire-mudlet-mapping.github.io/StarmournCrowdmap/Map/version.txt\"\n        )\n      elseif game == \"lusternia\" then\n        downloadFile(\n          mmp.mapfile, \"http://ire-mudlet-mapping.github.io/LusterniaCrowdmap/Map/version.txt\"\n        )\n      elseif game == \"imperian\" then\n        downloadFile(\n          mmp.mapfile, \"http://ire-mudlet-mapping.github.io/ImperianCrowdmap/Map/version.txt\"\n        )\n      elseif game == \"asteria\" then\n        downloadFile(\n          mmp.mapfile, \"http://asteria-ui.github.io/AsteriaCrowdmap/Map/version.txt\"\n        )\n      elseif game == \"stickmud\" then\n        downloadFile(\n          mmp.mapfile, \"http://stickmud.github.io/StickMUDCrowdmap/Map/version.txt\"\n        )\n      end\n    elseif mmp.settings.updatemap then\n      downloadFile(mmp.mapfile, \"http://www.\" .. game .. \".com/maps/MD5SUM\")\n    end\n    downloadFile(\n      mmp.mapperfile, \"http://ire-mudlet-mapping.github.io/ire-mapping-script/downloads/version\"\n    )\n    mmp.checkingupdates = true\n  end\nend\n\n-- called by the user when the map is updated to register the fact that it was\n\nfunction mmp.updatedmap(currentmd5)\n  assert(currentmd5, \"need md5 sum to write to file\")\n  local f, err = io.open(downloadfolder .. \"current\", \"w\")\n  if not f then\n    return mmp.echo(\"Couldn't write to the update file, because: \" .. err)\n  end\n  f:write(currentmd5)\n  f:close()\n  local t = {\"Go you for updating!\", \"Thanks for updating the map!\", \"Alright, map updated!\"}\n  mmp.echo(t[math.random(1, #t)])\nend\n\n-- downloads the latest changelog for the mapper if it was updated\n\nfunction mmp.retrievechangelog()\n  mmp.changelogfile = downloadfolder .. \"changelog\"\n  downloadFile(\n    mmp.changelogfile, \"http://ire-mudlet-mapping.github.io/ire-mapping-script/downloads/changelog\"\n  )\nend\n\nfunction mmp.retrievecrowdchangelog()\n  mmp.crowdchangelogfile = downloadfolder .. \"crowdchangelogfile\"\n  if mmp.game == \"achaea\" then\n    downloadFile(\n      mmp.crowdchangelogfile, \"http://ire-mudlet-mapping.github.io/AchaeaCrowdmap/Map/changelog.txt\"\n    )\n  elseif mmp.game == \"starmourn\" then\n    downloadFile(\n      mmp.crowdchangelogfile,\n      \"http://ire-mudlet-mapping.github.io/StarmournCrowdmap/Map/changelog.txt\"\n    )\n  elseif mmp.game == \"lusternia\" then\n    downloadFile(\n      mmp.crowdchangelogfile,\n      \"http://ire-mudlet-mapping.github.io/LusterniaCrowdmap/Map/changelog.txt\"\n    )\n  elseif mmp.game == \"imperian\" then\n    downloadFile(\n      mmp.crowdchangelogfile,\n      \"http://ire-mudlet-mapping.github.io/ImperianCrowdmap/Map/changelog.txt\"\n    )\n  elseif mmp.game == \"asteria\" then\n    downloadFile(\n      mmp.crowdchangelogfile,\n      \"http://asteria-ui.github.io/AsteriaCrowdmap/Map/changelog.txt\"\n    )\n  elseif mmp.game == \"stickmud\" then\n    downloadFile(\n      mmp.crowdchangelogfile,\n      \"http://stickmud.github.io/StickMUDCrowdmap/Map/changelog.txt\"\n    )\n  end\nend\n\n-- downloads the public crowdsources map!\n\nfunction mmp.downloadmapperscript()\n  local downloadlocationfile = downloadfolder .. \"savepath\"\n  local downloadlocation\n  local exists = lfs.attributes\n  -- somewhat complicated thing to nicely deal with all scenarios.\n  if not exists(downloadlocationfile) then\n    downloadlocation = whereisit()\n    if not downloadlocation then\n      return\n    end\n  end\n  if not downloadlocation then\n    local f, s = io.open(downloadlocationfile)\n    if f then\n      downloadlocation = f:read(\"*a\");\n      io.close(f)\n    end\n    if not exists(downloadlocation) then\n      downloadlocation = whereisit()\n      if not downloadlocation or not exists(downloadlocation) then\n        return\n      end\n    end\n  end\n  mmp.downloadedscript = downloadlocation .. \"/mudlet-mapper.xml\"\n  downloadFile(\n    mmp.downloadedscript,\n    \"http://ire-mudlet-mapping.github.io/ire-mapping-script/downloads/mudlet-mapper.xml\"\n  )\n  local f, err = io.open(downloadlocationfile, \"w\")\n  if not f then\n    return mmp.echo(\"Couldn't write to the location file, because: \" .. err)\n  end\n  f:write(downloadlocation)\n  f:close()\n  mmp.echo(\"Okay, downloading the mapper script...\")\nend\n\nfunction mmp.downloadcrowdmap(newversion)\n  mmp.crowdmapfile = downloadfolder .. \"crowdmap\"\n  local f, err = io.open(downloadfolder .. \"current\", \"w\")\n  if not f then\n    return mmp.echo(\"Couldn't write to the update file, because: \" .. err)\n  end\n  f:write(newversion)\n  f:close()\n  if mmp.game == \"achaea\" then\n    downloadFile(mmp.crowdmapfile, \"http://ire-mudlet-mapping.github.io/AchaeaCrowdmap/Map/map\")\n  elseif mmp.game == \"starmourn\" then\n    downloadFile(mmp.crowdmapfile, \"http://ire-mudlet-mapping.github.io/StarmournCrowdmap/Map/map\")\n  elseif mmp.game == \"lusternia\" then\n    downloadFile(mmp.crowdmapfile, \"http://ire-mudlet-mapping.github.io/LusterniaCrowdmap/Map/map\")\n  elseif mmp.game == \"imperian\" then\n    downloadFile(mmp.crowdmapfile, \"http://ire-mudlet-mapping.github.io/ImperianCrowdmap/Map/map\")\n  elseif mmp.game == \"asteria\" then\n    downloadFile(mmp.crowdmapfile, \"http://asteria-ui.github.io/AsteriaCrowdmap/Map/map\")\n  elseif mmp.game == \"stickmud\" then\n    downloadFile(mmp.crowdmapfile, \"http://stickmud.github.io/StickMUDCrowdmap/Map/map\")\n  end\n  mmp.echo(\"Downloading the latest crowdmap...\")\nend\n\nfunction mmp.showcrowdchangelog()\n  mmp.echo(\"Public map changelog:\")\n  if not mmp.crowdchangelog then\n    mmp.echo(\"(none yet)\")\n    return\n  end\n  for k, v in ipairs(mmp.crowdchangelog) do\n    cecho(string.format(\"  %s) %s\\n\", k, v:gsub(\"\\t\", \"     \")))\n  end\nend\n\nwhereisit =\n  function()\n    local path =\n      invokeFileDialog(false, \"Where should we save the file? Select a folder and click Open\")\n    if path == \"\" then\n      return nil\n    else\n      return path\n    end\n  end",
    "eventHandlerList": null,
    "Script": "\n\t\t\t\t\t\t\t"
}