{
    "attribs": {
        "isActive": "yes",
        "isFolder": "no"
    },
    "type": "script",
    "name": "Load settings",
    "packageName": null,
    "script": "-- mmp = mudlet mapper namespace\nmmp =\n  mmp or\n  {\n    paused = false,\n    autowalking = false,\n    currentroom = 0,\n    currentroomname = \"(unknown)\",\n    firstRun = true,\n    specials = {},\n    ferry_rooms = {},\n  }\nspeedWalkWatch = createStopWatch()\n-- populated by Mudlet from getPath() and gotoRoom()\nspeedWalkPath = speedWalkPath or {}\nspeedWalkDir = speedWalkDir or {}\nspeedWalkCounter = 0\n-- actually used by the mapper for walking\nmmp.speedWalk = mmp.speedWalk or {}\nmmp.speedWalkPath = mmp.speedWalkPath or {}\nmmp.speedWalkDir = mmp.speedWalkDir or {}\nmmp.lagtable =\n  {\n    [1] = {description = \"Normal, default level.\", time = 0.5},\n    [2] = {description = \"Decent, but slightly laggy.\", time = 1},\n    [3] = {description = \"Noticeably laggy with occasional spikes.\", time = 2},\n    [4] = {description = \"Bad. Terrible. Terribad.\", time = 5},\n    [5] = {description = \"Carrier Pigeon\", time = 10},\n  }\nlocal newversion = \"21.12.2\"\nif mmp.version and mmp.version ~= newversion then\n  if not mmp.game then\n    mmp.echo(\"Mapper script updated - Thanks! I don't know what game are you connected to, though - so please reconnect, if you could.\")\n  else\n    mmp.echo(\"Mapper script updated - thanks! You don't need to restart.\")\n  end\nend\nmmp.version = newversion\n\nfunction mmp.startup()\n  if not mmp.firstRun then\n    return\n  end\n  local private_settings = {}\n\n  --General settings\n\n  private_settings[\"echocolour\"] = createOption(\"cyan\", mmp.changeEchoColour, {\"string\"}, \"Set the color for room number echos?\", function(newSetting) return color_table[newSetting] ~= nil end)\n  private_settings[\"crowdmap\"] = createOption(false, mmp.changeMapSource, {\"boolean\"}, \"Use a crowd-sourced map instead of IREs default?\", nil, {achaea = true, starmourn = true, lusternia = true, stickmud = true, asteria = true, imperian = true})\n  private_settings[\"showcmds\"] = createOption(true, mmp.changeBoolFunc, {\"boolean\"}, \"Show walking commands?\")\n  private_settings[\"laglevel\"] = createOption(1, mmp.changeLaglevel, {\"number\"}, \"How laggy is your connection, (fast 1<->5 slow)?\", mmp.verifyLaglevel)\n  private_settings[\"slowwalk\"] = createOption(false, mmp.setSlowWalk, {\"boolean\"}, \"Walk slowly instead of as quick as possible?\")\n  private_settings[\"updatemap\"] = createOption(true, mmp.changeUpdateMap, {\"boolean\"}, \"Check for new maps from your MUD?\")\n  private_settings[\"waterwalk\"] = createOption(true, mmp.setWaterWalk, {\"boolean\"}, \"Have waterwalk (don't avoid water)?\", nil, {achaea = true})\n\n  --Settings that lock things\n\n  private_settings[\"lockpathways\"] = createOption(true, mmp.lockPathways, {\"boolean\"}, \"Lock pathway exits?\", nil, {lusternia = true})\n  private_settings[\"locksewers\"] = createOption(false, mmp.lockSewers, {\"boolean\"}, \"Lock all sewers?\", nil, {achaea = true})\n  private_settings[\"lockspecials\"] = createOption(false, mmp.lockSpecials, {\"boolean\"}, \"Lock all special exits?\")\n  private_settings[\"lockwormholes\"] = createOption(true, mmp.lockWormholes, {\"boolean\"}, \"Lock all wormholes?\", nil, {achaea = true, imperian = true, aetolia = true})\n\n  --Sprint movement\n\n  private_settings[\"dash\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Use Dash?\", nil, {achaea = true, imperian = true, aetolia = true})\n  private_settings[\"sprint\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Use Sprint?\")\n  private_settings[\"gallop\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Use Gallop?\")\n  private_settings[\"runaway\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Use Jester Runaway?\", nil, {achaea = true})\n\n  --Achaea wings and things\n\n  private_settings[\"winglanguage\"] = createOption(\"\", mmp.setWingsLanguage, {\"string\"}, \"Speak non-default language for wings:\", nil, {achaea = true})\n  private_settings[\"pebble\"] = createOption(false, mmp.lockPebble, {\"boolean\"}, \"Make use of your enchanted pebble?\", nil, {achaea = true})\n  private_settings[\"removewings\"] = createOption(true, mmp.setWingsRemoval, {\"boolean\"}, \"Remove Wings after using them?\", nil, {achaea = true, imperian = true})\n  private_settings[\"harness\"] = createOption(false, mmp.setHarness, {\"boolean\"}, \"Use Stratospheric Harness?\", nil, {achaea = true})\n  private_settings[\"duantahar\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Use Chenubian Wings?\", nil, {achaea = true})\n  private_settings[\"duanatharan\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Use Atavian Wings?\", nil, {achaea = true})\n  private_settings[\"duanathar\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Use Eagle Wings?\", nil, {achaea = true})\n  private_settings[\"duanatharic\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Use Island Wings?\", nil, {achaea = true})\n  private_settings[\"soar\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Use Aero Soar?\", nil, {achaea = true})\n  private_settings[\"shackle\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Take off shackle?\", nil, {achaea = true})\n  private_settings[\"universe\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Use Universe Tarot?\", nil, {achaea = true})\n  private_settings[\"gare\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Use Gare?\", nil, {achaea = true})\n\n  --Wings pathfinding improvements\n\n  private_settings[\"betterwings\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Use Better Wings pathfinding?\", nil, {achaea = true})\n\n  --Achaea Orb of Confinement\n\n  private_settings[\"orbashtan\"] = createOption(false, function() mmp.setOrb(\"ashtan\") end, {\"boolean\"}, \"Orb of Confinement active in Ashtan?\", nil, {achaea = true})\n  private_settings[\"orbcyrene\"] = createOption(false, function() mmp.setOrb(\"cyrene\") end, {\"boolean\"}, \"Orb of Confinement active in Cyrene?\", nil, {achaea = true})\n  private_settings[\"orbeleusis\"] = createOption(false, function() mmp.setOrb(\"eleusis\") end, {\"boolean\"}, \"Orb of Confinement active in Eleusis?\", nil, {achaea = true})\n  private_settings[\"orbhashan\"] = createOption(false, function() mmp.setOrb(\"hashan\") end, {\"boolean\"}, \"Orb of Confinement active in Hashan?\", nil, {achaea = true})\n  private_settings[\"orbmhaldor\"] = createOption(false, function() mmp.setOrb(\"mhaldor\") end, {\"boolean\"}, \"Orb of Confinement active in Mhaldor?\", nil, {achaea = true})\n  private_settings[\"orbtargossas\"] = createOption(false, function() mmp.setOrb(\"targossas\") end, {\"boolean\"}, \"Orb of Confinement active in Targossas?\", nil, {achaea = true})\n\n  --Imperian wings\n\n  private_settings[\"shekinah\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Use Seraphim Wings?\", nil, {imperian = true})\n  private_settings[\"suriel\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Use Orphanim Wings?\", nil, {imperian = true})\n\n  --Lusternia bixes\n\n  private_settings[\"torus\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Torus?\", nil, {lusternia = true})\n  private_settings[\"prism\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your transplanar prism?\", nil, {lusternia = true})\n  private_settings[\"cubix\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Cubix?\", nil, {lusternia = true})\n  private_settings[\"medallion\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Medallion?\", nil, {lusternia = true})\n\n  --Lusternia Bubblixes\n  private_settings[\"twist\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Mt. Dio Bix?\", nil, {lusternia = true})\n  private_settings[\"figurine\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Icewynd Bix?\", nil, {lusternia = true})\n  private_settings[\"periscope\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Aquagoria Bix?\", nil, {lusternia = true})\n  private_settings[\"pebble\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Lyraa Bix?\", nil, {lusternia = true})\n  private_settings[\"shard\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Xion Bix?\", nil, {lusternia = true})\n  private_settings[\"tibia\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Cankermore Bix?\", nil, {lusternia = true})\n  private_settings[\"mud\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Mucklemarsh Bix?\", nil, {lusternia = true})\n  private_settings[\"cookie\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Crumkindivia Bix?\", nil, {lusternia = true})\n  private_settings[\"icicle\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Frosticia Bix?\", nil, {lusternia = true})\n  private_settings[\"screwdriver\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Facility Bix?\", nil, {lusternia = true})\n  private_settings[\"snowglobe\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Tree of Trees Bix?\", nil, {lusternia = true})\n  private_settings[\"head\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Bottledowns Bix?\", nil, {lusternia = true})\n  private_settings[\"wheel\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Dramube Bix?\", nil, {lusternia = true})\n\n  --lusternia athergoop setButtons\n\n  private_settings[\"buttons\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of Aethergoop Buttons?\", nil, {lusternia = true})\n\n  --Lusternia Curio collections\n\n  private_settings[\"bonecurio\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Bone curios?\", nil, {lusternia = true})\n  private_settings[\"facecurio\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Face curios?\", nil, {lusternia = true})\n  private_settings[\"feathercurio\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Feather curios?\", nil, {lusternia = true})\n  private_settings[\"figurecurio\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Figure curios?\", nil, {lusternia = true})\n  private_settings[\"flowercurio\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Flower curios?\", nil, {lusternia = true})\n  private_settings[\"fluttercurio\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Flutter curios?\", nil, {lusternia = true})\n  private_settings[\"toolcurio\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Tool curios?\", nil, {lusternia = true})\n  private_settings[\"vernalcurio\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Vernal curios?\", nil, {lusternia = true})\n  private_settings[\"utensilcurio\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Utensil curios?\", nil, {lusternia = true})\n  private_settings[\"toycurio\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Toy curios?\", nil, {lusternia = true})\n  private_settings[\"soullesscurio\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Soulless curios?\", nil, {lusternia = true})\n\n  --Lusternia epic quest bixes\n\n  private_settings[\"fingerblade\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Fingerblade?\", nil, {lusternia = true})\n  private_settings[\"blossom\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Flame of dae'Seren?\", nil, {lusternia = true})\n  private_settings[\"belt\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Belt?\", nil, {lusternia = true})\n  private_settings[\"mandala\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Mandala?\", nil, {lusternia = true})\n  private_settings[\"mantle\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Mantle?\", nil, {lusternia = true})\n  private_settings[\"key\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Make use of your Key?\", nil, {lusternia = true})\n\n  --Lusternia other travel things\n  private_settings[\"compass\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Use the Compass of the Basin?\", nil, {lusternia = true})\n  private_settings[\"astrojump\"] = createOption(false, mmp.astroboots, {\"boolean\"}, \"Use Astral Jumping boots?\", nil, {lusternia = true})\n\n\n  --I have no idea what this does tbh\n\n  private_settings[\"caravan\"] = createOption(false, mmp.changeBoolFunc, {\"boolean\"}, \"Walk caravans?\", nil, {imperian = true})\n\n\n\n  mmp.settings = createOptionsTable(private_settings)\n  mmp.settings.disp = mmp.echo\n  mmp.game = false\n  mmp.settings.dispOption =\n    function(opt, val)\n      cecho(\n        \"<green>\" ..\n        val.use ..\n        \"<white> (\" ..\n        opt ..\n        \") \" ..\n        string.rep(\" \", 50 - val.use:len() - opt:len()) ..\n        tostring(val.value) ..\n        \"\\n\"\n      )\n    end\n  mmp.settings.dispDefaultWriteError =\n    function()\n      mmp.echo(\"Please use the mconfig alias to set options!\")\n    end\n  raiseEvent(\"mmp areas changed\")\n  mmp.firstRun = false\n  mmp.echon(\"Mudlet Mapper script for IREs (\" .. tostring(mmp.version) .. \") loaded! (\")\n  echoLink(\n    \"homepage\",\n    \"(openUrl or openURL)'http://wiki.mudlet.org/w/IRE_mapping_script'\",\n    \"Clicky clicky to read up on what's this about\"\n  )\n  echo(\")\\n\")\nend",
    "eventHandlerList": null
}